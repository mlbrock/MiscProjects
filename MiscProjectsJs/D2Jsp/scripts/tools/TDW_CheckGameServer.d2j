include("TDW/_D2JSP_Utility.d2l");

// ////////////////////////////////////////////////////////////////////////////
const TDW_CGS_SpecFile      = "settings/DCloneServers.txt";
const TDW_CGS_NoDCloneDelay = 3000;
const TDW_CGS_ErrorDelay    = 3000;
const TDW_CGS_StayInGame    = false;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
var TDW_CGS_ThisServer     = null;
var TDW_CGS_OverheadMsg    = null;
var TDW_CGS_StartTime      = new Date();
var TDW_CGS_SellInstances  = 0;
var TDW_CGS_SellCountFirst = 0;
var TDW_CGS_SellCountLast  = 0;
var TDW_CGS_SellTimeFirst  = null;
var TDW_CGS_SellTimeLast   = null;
var TDW_CGS_WalkTime       = null;
var TDW_CGS_WalkMsg        = "";
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function main()
{
	var bot_name = "TDW_CheckGameServer";
	var my_log   = new D2JSP_UTIL_Log("output/" + bot_name + "." +
		D2JSP_UTIL_FORMAT_GetUserDottedStringFixed() + ".log", bot_name);

	print("The " + bot_name + " is running");

	D2JSP_UTIL_GEN_CheckGameReady();

	if (me.diff == 2)
		diff_msg = D2JSP_UTIL_COLOR_GREEN + "********** HELL DClone **********";
	else if (me.diff == 1)
		diff_msg = D2JSP_UTIL_COLOR_RED +
		"********** NIGHTMARE NIGHTMARE NIGHTMARE **********";
	else if (!me.diff)
		diff_msg = D2JSP_UTIL_COLOR_ORANGE +
			"********** NORMAL Seller's Game **********";
	else
		diff_msg =  D2JSP_UTIL_COLOR_RED + "********** INVALID INVALID (" +
			me.diff + ") INVALID INVALID **********";

	my_log.logInfo(diff_msg);
	for (var count_1 = 0; count_1 < 9; count_1++)
		print(diff_msg);

	me.randommove = true;

	my_log.logInfo("Game Name    : " + D2JSP_UTIL_GetGameName());
	my_log.logInfo("Game Password: " + D2JSP_UTIL_GetGamePassword());

	if (!D2JSP_UTIL_GEN_FileExists(TDW_CGS_SpecFile)) {
		my_log.logError(D2JSP_UTIL_COLOR_RED + "Unable to locate Diable Clone " +
			"server specification file '" + TDW_CGS_SpecFile + "'.");
		delay(TDW_CGS_ErrorDelay);
	}
	else {
		var this_server     = D2JSP_UTIL_GetGameServerNumber();
		var tmp_server_list = D2JSP_UTIL_GEN_ReadFile(TDW_CGS_SpecFile);
		var server_hash     = new Array();
		var server_list;
		for (var count_1 = 0; count_1 < tmp_server_list.length; count_1++) {
			tmp_server_list[count_1] = D2JSP_UTIL_FORMAT_Trim(tmp_server_list[count_1]);
			if (D2JSP_UTIL_FORMAT_IsDigit(tmp_server_list[count_1]))
				server_hash[tmp_server_list[count_1]] = true;
			else if (tmp_server_list[count_1] != "")
				my_log.logWarning(D2JSP_UTIL_COLOR_ORANGE + "Ignored invalid " +
					"server specification ('" + tmp_server_list[count_1] + "') " +
					"on line number " + (count_1 + 1) + " of the file '" +
					TDW_CGS_SpecFile + "'.");
		}
		server_list = D2JSP_UTIL_GEN_ArrayHashedKeysToIndexedShallow(server_hash);
		for (var count_1 = 0; count_1 < server_list.length; count_1++)
			my_log.logInfo("Desired Diablo Clone server " +
				D2JSP_UTIL_FORMAT_RJust(count_1 + 1, 3) + ": " +
				D2JSP_UTIL_FORMAT_RJust(server_list[count_1], 3));
		if (!server_list.length) {
			my_log.logError(D2JSP_UTIL_COLOR_RED + "No valid server " +
				"specifications were found in the server specification file '" +
				TDW_CGS_SpecFile + "'.");
			delay(TDW_CGS_ErrorDelay);
		}
		else if (!(this_server in server_hash)) {
			my_log.logInfo("This server (" + this_server +
				") is not one of the desired Diablo Clone servers.");
			delay  (TDW_CGS_NoDCloneDelay);
		  }
		else {
			TDW_CGS_OverheadMsg = D2JSP_UTIL_COLOR_GREEN + "DClone server " +
				this_server;
			TDW_CGS_ThisServer  = this_server;
			var start_date = new Date();
			my_log.emitSep("*");
			my_log.logInfo(D2JSP_UTIL_COLOR_GREEN + "Found Diablo Clone server (" +
				TDW_CGS_ThisServer + ") at " + start_date);
			my_log.logInfo(D2JSP_UTIL_COLOR_GREEN + "Game name " +
				D2JSP_UTIL_GetGameName() + ", game password " +
				D2JSP_UTIL_GetGamePassword());
			my_log.emitSep("*");
			my_log.flushLog();
			var base_coords = [me.x, me.y];
			var move_mode   = 0;
// CODE NOTE: For debugging
//var soj_count = 666;
//print((soj_count++) + " Stones of Jordan Sold to Merchants");
			while (true) {
				var new_coords;
				if (move_mode % 2)
					new_coords = base_coords;
				else {
					var new_x;
					var new_y;
					do {
						new_x = rnd(-10, 10);
						new_y = rnd(-10, 10);
					} while ((!new_x) && (!new_y));
					new_coords = [base_coords[0] + new_x, base_coords[1] + new_y];
				}
				move_mode = (++move_mode % 2);
				me.overhead("Moving to [" + new_coords + "]");
				D2JSP_UTIL_MoveToXYPair(new_coords);
				var my_wait = D2JSP_UTIL_GEN_RandomRange(5, 60);
// CODE NOTE: For debugging
//print((soj_count++) + " Stones of Jordan Sold to Merchants");
				while (my_wait) {
					me.overhead("Waiting " + my_wait-- + " seconds...");
					delay(500);
					me.overhead(TDW_CGS_OverheadMsg);
					delay(500);
				}
				if (TDW_CGS_WalkTime)
					my_log.logInfo(TDW_CGS_WalkMsg);
				me.overhead("");
// CODE NOTE: For debugging
//if (!TDW_CGS_WalkTime)
//	print("Diablo Walks the Earth");
			}
		}
	}

	my_log.logInfo("No Diablo Clone server found. Exiting game.");

	my_log.closeLog();

	print("Done.");

	if (TDW_CGS_StayInGame)
		stop();
	else
		quit();
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function TDW_CGS_SaveWalkInfo()
{
	var sell_time_1 = (TDW_CGS_SellTimeFirst != null) ?
		D2JSP_UTIL_DATE_ToSmallDate(TDW_CGS_SellTimeFirst) :
		"0000-00-00 00:00:00.000";
	var sell_time_2 = (TDW_CGS_SellTimeLast != null) ?
		D2JSP_UTIL_DATE_ToSmallDate(TDW_CGS_SellTimeLast) :
		"0000-00-00 00:00:00.000";

	var out_string  = "DClone walked on server " +
		D2JSP_UTIL_FORMAT_RJust(TDW_CGS_ThisServer, 3) + " at " +
		D2JSP_UTIL_DATE_ToSmallDate(TDW_CGS_WalkTime) + " / " +
		"Game entry at " + D2JSP_UTIL_DATE_ToSmallDate(TDW_CGS_StartTime) +
		" / First sale at " + sell_time_1 + " = " +
		D2JSP_UTIL_FORMAT_RJust(TDW_CGS_SellCountFirst, 5) +
		" / Last sale at " + sell_time_2 + " = " +
		D2JSP_UTIL_FORMAT_RJust(TDW_CGS_SellCountLast, 5) +
		" / Sale instances = " +
		D2JSP_UTIL_FORMAT_RJust(TDW_CGS_SellInstances, 5);

	D2JSP_UTIL_GEN_AppendFile("output/____DCloneWalkInfo.log", out_string);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function hostilemsgHandler()
{
	var log_obj = D2JSP_UTIL_LOG_GetALog();

	log_obj.logInfoQuiet("HOSTILE MSG: " + arguments[0]);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function partymsgHandler()
{
	log_obj.logInfoQuiet("PARTY MSG  : " + arguments[0]);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function gamemsgHandler()
{
	var log_obj = D2JSP_UTIL_LOG_GetALog();

//	log_obj.logInfoQuiet("GAME MSG   : " + arguments[0]);

/*
	if ((arguments[0].length == (3 + "diablo walks the earth".length)) &&
		(arguments[0].charCodeAt(0) == 255) && (arguments[0][1] == "c") &&
		("0123456789".indexOf(arguments[0][2]) > -1) &&
		(arguments[0].slice(3).toLowerCase() == "diablo walks the earth")) {
*/
	if (arguments[0] == "Diablo Walks the Earth") {
		if (TDW_CGS_ThisServer && (!TDW_CGS_WalkTime)) {
			TDW_CGS_OverheadMsg = D2JSP_UTIL_COLOR_GREEN +
				"DClone Walks Server " + TDW_CGS_ThisServer + "!!!";
			TDW_CGS_WalkTime    = new Date();
			TDW_CGS_WalkMsg     = D2JSP_UTIL_COLOR_GREEN +
				"Diablo Walks the Earth on Server " + TDW_CGS_ThisServer +
				" as of " + TDW_CGS_WalkTime + "!!!";
			log_obj.logInfo(TDW_CGS_WalkMsg);
			TDW_CGS_SaveWalkInfo();
			log_obj.flushLog();
		}
	}
	else if (arguments[0].match(/\d+ Stones of Jordan Sold to Merchants/)) {
//		var tmp_list = arguments[0].match(/\d(\d+) Stones of Jordan Sold to Merchants/);
		var tmp_list = arguments[0].match(/^(\d+) Stones of Jordan Sold to Merchants$/);
		if (TDW_CGS_ThisServer && (!TDW_CGS_WalkTime) &&
			tmp_list && (tmp_list.length == 2)) {
			TDW_CGS_SellTimeLast  = new Date();
			TDW_CGS_SellCountLast = parseInt(tmp_list[1], 10);
			if (!TDW_CGS_SellInstances) {
				TDW_CGS_SellTimeFirst  = TDW_CGS_SellTimeLast;
				TDW_CGS_SellCountFirst = TDW_CGS_SellCountLast;
			}
			TDW_CGS_SellInstances++;
		}
		log_obj.logInfoQuiet(TDW_CGS_SellCountLast + " SoJs were sold in sale " +
			"instance number " + TDW_CGS_SellInstances + ".");
		log_obj.flushLog();
	}
	else if (arguments[0].
		match(/^\S+ joined our world. Diablo's minions grow stronger\.$/i)) {
		var player_name = arguments[0].split(/[\s]/)[0];
		log_obj.logInfoQuiet("Player " + player_name + " joined the game. " +
			"Telling them that there's no reason to stay.");
		var tmp_msg = ["hes ", "its ", ""][rnd(0, 2)] + ["done", "over"][rnd(0,1)];
		if (TDW_CGS_WalkTime)
			tmp_msg += " got a gay 11/13/6";
		say(tmp_msg);
		log_obj.flushLog();
	}
	else if (arguments[0].
		match(/^\S+ left our world\. Diablo's minions weaken.$/i)) {
		var player_name = arguments[0].split(/[\s]/)[0];
		log_obj.logInfoQuiet("Player " + player_name + " left the game.");
		log_obj.flushLog();
	}
	else if (arguments[0].match(/^\S+ dropped due to timeout\.$/i)) {
		var player_name = arguments[0].split(/[\s]/)[0];
		log_obj.logInfoQuiet("Player " + player_name + " dropped due to timeout.");
		log_obj.flushLog();
	}
	else {
		var msg_data = D2JSP_UTIL_GEN_ParseNetString(arguments[0]);
		if (msg_data && msg_data[0] && msg_data[1]) {
			log_obj.logInfoQuiet("PLAYER SAYS: " +
				D2JSP_UTIL_FORMAT_LJust(msg_data[0], 15) + ": " + msg_data[1]);
			log_obj.flushLog();
		}
//		else
//			log_obj.logInfoQuiet("GAME MSG   : " + arguments[0]);
	}

/*
	if (arguments[0].match(/Diablo Walks the Earth/) ||
		arguments[0].match(/\d+ Stones of Jordan Sold to Merchants/)) {
		var tmp_string = "";
		for (var count_1 = 0; count_1 < arguments[0].length; count_1++)
			tmp_string += "[" +
			D2JSP_UTIL_FORMAT_RJust(arguments[0].charCodeAt(count_1), 3) + "]";
		log_obj.logInfoQuiet("GAME MSG   : " + tmp_string);
	}
*/
}
// ////////////////////////////////////////////////////////////////////////////


