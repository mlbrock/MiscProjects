include("TDW/_D2JSP_Utility.d2l");

var TDW_MT_Log = null;

function main()
{
	var obj_list;
	var last_area;

	TDW_MT_Log = new D2JSP_UTIL_Log("output/TDW_MonitorTiles." +
		D2JSP_UTIL_FORMAT_GetUserDottedStringFixed() + ".log", "MonitorTiles");

	print("Waiting 1 second for game load to complete...");
	delay(1000);
	last_area = me.area;
	obj_list  = TDW_MT_InitializeTiles();
	print("Ready");

	while (true) {
		if (me.area != last_area) {
			last_area = me.area;
			obj_list  = TDW_MT_InitializeTiles();
		}
		else
			obj_list = TDW_MT_CheckTiles(obj_list);
		D2JSP_UTIL_BNET_OverheadSafe("Monitoring tiles...");
		delay(500);
	}
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function TDW_MT_InitializeTiles()
{
	var out_list     = TDW_MT_GetTiles();
	var action_count = 0;
	var log_obj      = D2JSP_UTIL_LOG_GetALog();

	for (var this_prop in out_list) {
		log_obj.logInfo("***** Tile " + this_prop + " [" +
			out_list[this_prop] + "] has been recorded.");
		action_count++;
	}

	if (action_count)
		log_obj.logInfo("---------------------------------------------------");

	return(out_list);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function TDW_MT_GetTiles()
{
	var out_list = new Array();
	var this_obj = getUnit(D2JSP_UTIL_GETUNIT_TILE);

	if (this_obj) {
		do {
			out_list[this_obj.classid + ""] =
				[this_obj.mode, this_obj.name, this_obj.area, this_obj.x, this_obj.y];
		} while (this_obj && this_obj.getNext());
	}

	return(out_list);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function TDW_MT_CheckTiles(in_list)
{
	var out_list     = TDW_MT_GetTiles();
	var action_count = 0;
	var log_obj      = D2JSP_UTIL_LOG_GetALog();

	for (var this_prop in in_list) {
		if (this_prop in out_list) {
			if (in_list[this_prop][0] != out_list[this_prop][0]) {
				log_obj.logInfo("***** Tile " + this_prop + " [" +
					in_list[this_prop] + "] mode changed to " +
					out_list[this_prop][0]);
				action_count++;
			}
			if (in_list[this_prop][1] != out_list[this_prop][1]) {
				log_obj.logInfo("***** Tile " + this_prop + " [" +
					in_list[this_prop] + "] name changed to " +
					out_list[this_prop][0]);
				action_count++;
			}
			if (in_list[this_prop][2] != out_list[this_prop][2]) {
				log_obj.logInfo("***** Tile " + this_prop + " [" +
					in_list[this_prop] + "] area changed to " +
					out_list[this_prop][0]);
				action_count++;
			}
		}
		else {
			log_obj.logInfo("***** Tile " + this_prop + " [" +
				in_list[this_prop] + "] not found in current list!!!");
			action_count++;
		}
	}

	for (var this_prop in out_list) {
		if (!(this_prop in in_list)) {
			log_obj.logInfo("***** Tile " + this_prop + " [" +
				out_list[this_prop] + "] is new.");
			action_count++;
		}
	}

	if (action_count)
		log_obj.logInfo("---------------------------------------------------");

	return(out_list);
}
// ////////////////////////////////////////////////////////////////////////////


