// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// D2Jsp Item Management Include File
// ////////////////////////////////////////////////////////////////////////////
//
// File Name       : _D2JSP_Items.d2l
//
// File Version    : 1.0.0
//
// File Description: Support for specialized item management.
//
// Revison History : 2002-12-10 --- Creation.
//
//	Author          : Michael L. Brock (TheDesertWind)
//
//	Copyright       : (c) 2002 - 2004, Michael L. Brock. All rights reserved.
//
// ////////////////////////////////////////////////////////////////////////////

	// Include guard
if (typeof(D2JSP_INCLUDE_GUARD_Items_d2l) == "undefined") {
	var D2JSP_INCLUDE_GUARD_Items_d2l = true;

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Some necessary include files ...
// ////////////////////////////////////////////////////////////////////////////
include("TDW/_D2JSP_Utility.d2l");

includeonce("TDW/_D2JSP_BaseStats.d2l");
includeonce("TDW/_D2JSP_ItemFlags.d2l");
includeonce("TDW/_D2JSP_ItemTypes.d2l");
includeonce("TDW/_D2JSP_Objects.d2l");
includeonce("TDW/_D2JSP_Stats.d2l");
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_QUALITY_NONE        = 0;
var D2JSP_ITEM_QUALITY_LOW_QUALITY = 1;
var D2JSP_ITEM_QUALITY_NORMAL      = 2;
var D2JSP_ITEM_QUALITY_SUPERIOR    = 3;
var D2JSP_ITEM_QUALITY_MAGIC       = 4;
var D2JSP_ITEM_QUALITY_SET         = 5;
var D2JSP_ITEM_QUALITY_RARE        = 6;
var D2JSP_ITEM_QUALITY_UNIQUE      = 7;
var D2JSP_ITEM_QUALITY_CRAFTED     = 8;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_QUALITY_MINIMUM = D2JSP_ITEM_QUALITY_NONE;
var D2JSP_ITEM_QUALITY_MAXIMUM = D2JSP_ITEM_QUALITY_CRAFTED;
var D2JSP_ITEM_QUALITY_COUNT   = (D2JSP_ITEM_QUALITY_MAXIMUM + 1);
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_QUALITY_QualityToNameList = new Array(D2JSP_ITEM_QUALITY_COUNT);
D2JSP_ITEM_QUALITY_QualityToNameList[D2JSP_ITEM_QUALITY_NONE]        = "none";
D2JSP_ITEM_QUALITY_QualityToNameList[D2JSP_ITEM_QUALITY_LOW_QUALITY] = "low quality";
D2JSP_ITEM_QUALITY_QualityToNameList[D2JSP_ITEM_QUALITY_NORMAL]      = "normal";
D2JSP_ITEM_QUALITY_QualityToNameList[D2JSP_ITEM_QUALITY_SUPERIOR]    = "superior";
D2JSP_ITEM_QUALITY_QualityToNameList[D2JSP_ITEM_QUALITY_MAGIC]       = "magic";
D2JSP_ITEM_QUALITY_QualityToNameList[D2JSP_ITEM_QUALITY_SET]         = "set";
D2JSP_ITEM_QUALITY_QualityToNameList[D2JSP_ITEM_QUALITY_RARE]        = "rare";
D2JSP_ITEM_QUALITY_QualityToNameList[D2JSP_ITEM_QUALITY_UNIQUE]      = "unique";
D2JSP_ITEM_QUALITY_QualityToNameList[D2JSP_ITEM_QUALITY_CRAFTED]     = "crafted";
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_QUALITY_NameToQualityList = new Array();
D2JSP_ITEM_QUALITY_NameToQualityList["none"]        = D2JSP_ITEM_QUALITY_NONE;
D2JSP_ITEM_QUALITY_NameToQualityList["low quality"] = D2JSP_ITEM_QUALITY_LOW_QUALITY;
D2JSP_ITEM_QUALITY_NameToQualityList["low"]         = D2JSP_ITEM_QUALITY_LOW_QUALITY;
D2JSP_ITEM_QUALITY_NameToQualityList["lowquality"]  = D2JSP_ITEM_QUALITY_LOW_QUALITY;
D2JSP_ITEM_QUALITY_NameToQualityList["crude"]       = D2JSP_ITEM_QUALITY_LOW_QUALITY;
D2JSP_ITEM_QUALITY_NameToQualityList["cracked"]     = D2JSP_ITEM_QUALITY_LOW_QUALITY;
D2JSP_ITEM_QUALITY_NameToQualityList["damaged"]     = D2JSP_ITEM_QUALITY_LOW_QUALITY;
D2JSP_ITEM_QUALITY_NameToQualityList["normal"]      = D2JSP_ITEM_QUALITY_NORMAL;
D2JSP_ITEM_QUALITY_NameToQualityList["superior"]    = D2JSP_ITEM_QUALITY_SUPERIOR;
D2JSP_ITEM_QUALITY_NameToQualityList["magic"]       = D2JSP_ITEM_QUALITY_MAGIC;
D2JSP_ITEM_QUALITY_NameToQualityList["magical"]     = D2JSP_ITEM_QUALITY_MAGIC;
D2JSP_ITEM_QUALITY_NameToQualityList["set"]         = D2JSP_ITEM_QUALITY_SET;
D2JSP_ITEM_QUALITY_NameToQualityList["rare"]        = D2JSP_ITEM_QUALITY_RARE;
D2JSP_ITEM_QUALITY_NameToQualityList["unique"]      = D2JSP_ITEM_QUALITY_UNIQUE;
D2JSP_ITEM_QUALITY_NameToQualityList["crafted"]     = D2JSP_ITEM_QUALITY_CRAFTED;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CLASS_NORMAL      = 0;
var D2JSP_ITEM_CLASS_NORM        = 0;
var D2JSP_ITEM_CLASS_EXCEPTIONAL = 1;
var D2JSP_ITEM_CLASS_EXCEPT      = 1;
var D2JSP_ITEM_CLASS_EXCEP       = 1;
var D2JSP_ITEM_CLASS_ELITE       = 2;
var D2JSP_ITEM_CLASS_NONE        = 3;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CLASS_MINIMUM = D2JSP_ITEM_CLASS_NORMAL;
var D2JSP_ITEM_CLASS_MAXIMUM = D2JSP_ITEM_CLASS_ELITE;
var D2JSP_ITEM_CLASS_COUNT   = (D2JSP_ITEM_CLASS_MAXIMUM + 1);
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CLASS_ClassToNameList = [
	"normal",
	"exceptional",
	"elite",
	"none"
];
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CLASS_NameToClassList = new Array();
for (var count_1 = 0; count_1 < D2JSP_ITEM_CLASS_ClassToNameList.length;
	count_1++)
	D2JSP_ITEM_CLASS_NameToClassList[D2JSP_ITEM_CLASS_ClassToNameList
		[count_1]] = count_1;
//delay(10);
//runGC();
//delay(10);
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Indices for the data in the elements of 'D2JSP_ITEM_ItemList'...
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_ELEMENT_ITEMTYPE     = 0;
var D2JSP_ITEM_ELEMENT_ALT_GFX      = 1;
var D2JSP_ITEM_ELEMENT_CODE_NORM    = 2;
var D2JSP_ITEM_ELEMENT_CODE_UBER    = 3;
var D2JSP_ITEM_ELEMENT_CODE_ULTRA   = 4;
var D2JSP_ITEM_ELEMENT_UPGRADE_NM   = 5;
var D2JSP_ITEM_ELEMENT_UPGRADE_HELL = 6;
var D2JSP_ITEM_ELEMENT_CATEGORY     = 7;
var D2JSP_ITEM_ELEMENT_ITEMCLASS    = 8;
var D2JSP_ITEM_ELEMENT_NAME         = 9;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Indices for the data in the elements of 'D2JSP_ITEM_SetList'...
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_SET_ELEMENT_CODE      = 0;
var D2JSP_ITEM_SET_ELEMENT_ITEM_NUM  = 1;
var D2JSP_ITEM_SET_ELEMENT_ITEM_NAME = 2;
var D2JSP_ITEM_SET_ELEMENT_SET_NAME  = 3;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Other interesting differences between the MPQs and the game...
// ////////////////////////////////////////////////////////////////////////////
/*
		MPQ / D2JSP Prefix				In-Game Prefix
		--------------------				--------------------
		Paleocene							Faithful
*/
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// A list of all of the item codes in the game
//
// This was collected from the MPQ files Armor.txt, Weapons.txt and Misc.txt.
// Some duplicate names were encountered and have been resolved as follows:
//
//		1) Codes hpo and hp3 share the same name ('Healing Potion'). As I don't
//			think hpo is actually used in the game, I've changed the name to
//			'Healing Potion 0'.
//
//		2) Similarly, codes mpo and mp3 share the same name ('Mana Potion'). As I
//			don't think mpo is actually used in the game, I've changed the name to
//			'Mana Potion 0'.
//
//		3) The conflict in codes xts and pad, which share the same name in the
//			MPQ files ('Ancient Shield') is resolved. 'xts' is verified as being
//			'Ancient Shield' in-game; 'pad' is 'Kurast Shield'.
//
//		4) The MPQ entry for item code '7o7' ('Ogre Axe') has the following
//			norm, ultra, and uber codes: 'bar', '9b7', and '7b7'. It's own code
//			is not included in the list. Furthermore, '7b7' is item code for
//			'Champion Sword'. This has to be resolved in-game --- '7o7' is the
//			item code for "Ogre Axe'.
//	////////////////////////////////////////////////////////////////////////////
/*
	Differences from the MPQ files:

		* Item code 'hpo' has had its name changed to 'Healing Potion 0' It has
		the same name as 'hp3' in the MPQ ('Healing Potion') but does not seem to
		occur in-game.

		* Item code 'mpo' has had its name changed to 'Mana Potion 0' It has the
		same name as 'mp3' in the MPQ ('Mana Potion') but does not seem to
		occur in-game.

		* Item code 'pad' has had its name changed to 'Kurast Shield' to prevent
		conflicts in trying to use its MPQ name ('Ancient Shield') which is the
		same as the name for item code 'xts'. These names have been verified
		in-game.

		* Item code '7fb' has had its name changed from 'Colossal Sword' to the
		name with which it appears in-game: 'Colossus Sword'. The name
		'Colossal Sword' has been added to the lookup associative array
		'D2JSP_ITEM_NameToCodeList' as a synonym.

		* The Bardiche family of polearms all have '9b7' as the uber-code. But
		the correct item code for the elite Bardiche, 'Ogre Axe', is '707'. This
		has been verified in-game. All uber-codes for the Bardiche family of
		polearms ('Bardiche', 'Lochaber Axe' and 'Ogre Axe') have been changed
		to '7o7'.

		* The correct name for item code 'cap' (current 'Cap/Hat' in the MPQ)
		is 'Cap'. Both 'Hat' and 'Cap/Hat' have been added as synonyms.

		* Item code 'lgl' has the name of 'Gloves(L)' in the MPQ. This has been
		changed to 'Leather Gloves'. Both 'Gloves(L)' and 'Gloves' have been
		added as synonyms.

		* Item code 'mgl' has the name of 'Bracers(M)' in the MPQ. This has been
		changed to 'Chain Gloves'. Both 'Bracers(M)' and 'Bracers' have been
		added as synonyms.

		* Item code 'hgl' has the name of 'Gaunlets(H)' in the MPQ. Note the
		mispelling along with the parenthetical. This has been changed to
		'Gauntlets'. The names 'Gaunlets(H)' and  'Gaunlets' have been added to
		the lookup associative array 'D2JSP_ITEM_NameToCodeList' as a synonym.

		* Item code 'tbt' has the name of 'Light Plate Boots' in the MPQ. This has
		been changed to its in-game name 'Light Plated Boots' and the MPQ name
		has been added as a synonym.

		* Item code 'hbt' has the name of 'Plate Boots' in the MPQ. This has
		been changed to its in-game name 'Greaves' and both the MPQ name
		of 'Plate Boots' and the assumed correct name of 'Plated Boots' hav been
		added as a synonym.

		* Item code 'lbl' has the name of 'Sash(L)' in the MPQ. This has been
		changed to 'Sash'.

		* The ultra code for 'lbl' ('Sash') is listed as 'ulb' in the 1.09
		MPQ, this has been corrected to 'ulc'.

		* The ultra code for 'vbl' ('Light Belt') is listed as 'uvb' in the 1.09
		MPQ, this has been corrected to 'uvc'.

		* Item code 'mbl' has the name of 'Belt(M)' in the MPQ. This has been
		changed to 'Belt'.

		* The ultra code for 'mbl' ('Belt') is listed as 'umb' in the 1.09
		MPQ, this has been corrected to 'umc'.

		* The ultra code for 'tbl' ('Heavy Belt') is listed as 'utb' in the 1.09
		MPQ, this has been corrected to 'utc'.

		* Item code 'hbl' has the name of 'Girdle(H)' in the MPQ. This has been
		changed to the in-game name of 'Plated Belt'. The name 'Girdle' has
		been added as a synonym.

		* The ultra code for 'hbl' ('Plated Belt'/'Girdle') is listed as 'uhb'
		in the 1.09 MPQ, this has been corrected to 'uhc'.

		* The item codes for various grades sapphires ('gcb', 'gfb', gsb', glb',
		and 'gpb') all have mispelled names ('Saphire' instead of 'Sapphire').
		They've been fixed and the mispelled versions of the names added as
		synonyms.

		* The item code 'ult' is named 'Hellforged Plate' in the MPQ, but
		'Hellforge Plate' in-game. It's been changed and a synonym created.

		* The item code 'xar' is named 'Ornate Armor' in the MPQ, but
		'Ornate Plate' in-game. It's been changed and a synonym created.

		* The item code '8hx' is named 'Balista' in the MPQ, but 'Ballista'
		in-game. It's been changed and a synonym created.

		* The item code '8l8' is named 'Long Siege Bow' in the MPQ, but
		'Large Siege Bow' in-game. It's been changed and a synonym created.

		* The item code '92h' is named 'Espadon' in the MPQ, but 'Espandon'
		in-game. It's been changed and a synonym created.

		* The item code '9bl' is named 'Stilleto' in the MPQ, but 'Stiletto'
		in-game. It's been changed and a synonym created.

		* The item code 'kri' is named 'Kriss' in the MPQ, but 'Kris' in-game.
		It's been changed and a synonym created.

		* The item code 'nea' is named 'Heirophant Trophy' in the MPQ, but
		'Hierophant Trophy' in-game. It's been changed and a synonym created.

		* The item code 'pa9' is named 'Guilded Shield' in the MPQ, but
		'Gilded Shield' in-game. It's been changed and a synonym created.

		* The item code 'lbt' is named 'Leather Boots' in the MPQ, but
		'Boots' in-game. It's been changed and a synonym created.

		* The item code 'ob5' is named 'Dragon Stone' in the MPQ, but
		'Jared's Stone' in-game. It's been changed and a synonym created.

		* The item code 'bae' is named 'Conquerer Crown', but 'Conqueror Crown'
		in-game. It's been changed and a synonym created.

		* The item code 'drb' is named 'Blood Spirt' in the MPQ, but should be
		'Blood Spirit'. It's been changed and a synonym created.

		* The item code 'nee' is named 'Succubae Skull' in the MPQ, but
		'Succubus Skull' in-game. It's been changed and a synonym created.

		* The item code 'amf' is named 'MatriarchalJavelin' (no space) in the
		MPQ, but 'Matriarchal Javelin' in-game. It's been changed and a synonym
		created.

		* The item code 'hp1' is named 'Lesser Healing Potion' in the MPQ, but
		'Minor Healing Potion' in-game. It's been changed and a synonym created.

		* The item code 'hp4' is named 'Strong Healing Potion' in the MPQ, but
		'Greater Healing Potion' in-game. It's been changed and a synonym created.

		* The item code 'hp5' is named 'Greater Healing Potion' in the MPQ, but
		'Super Healing Potion' in-game. It's been changed, but no synonym has
		been created because it conflicts with 'hp4' (which is called a
		'Greater Healing Potion' in-game).

		* The item code 'mp1' is named 'Lesser Mana Potion' in the MPQ, but
		'Minor Mana Potion' in-game. It's been changed and a synonym created.

		* The item code 'mp4' is named 'Strong Mana Potion' in the MPQ, but
		'Greater Mana Potion' in-game. It's been changed and a synonym created.

		* The item code 'mp5' is named 'Greater Mana Potion' in the MPQ, but
		'Super Mana Potion' in-game. It's been changed, but no synonym has
		been created because it conflicts with 'mp4' (which is called a
		'Greater Healing Potion' in-game).
*/
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_ItemList = new Array();
D2JSP_ITEM_ItemList["hax"] = ["axe",  "hax", "hax", "9ha", "7ha", "axe", "2ax", "W", D2JSP_ITEM_CLASS_NORM, "Hand Axe"];
D2JSP_ITEM_ItemList["axe"] = ["axe",  "axe", "axe", "9ax", "7ax", "2ax", "mpi", "W", D2JSP_ITEM_CLASS_NORM, "Axe"];
D2JSP_ITEM_ItemList["2ax"] = ["axe",  "axe", "2ax", "92a", "72a", "mpi", "wax", "W", D2JSP_ITEM_CLASS_NORM, "Double Axe"];
D2JSP_ITEM_ItemList["mpi"] = ["axe",  "axe", "mpi", "9mp", "7mp", "wax", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Military Pick"];
D2JSP_ITEM_ItemList["wax"] = ["axe",  "hax", "wax", "9wa", "7wa", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "War Axe"];
D2JSP_ITEM_ItemList["lax"] = ["axe",  "lax", "lax", "9la", "7la", "btx", "gax", "W", D2JSP_ITEM_CLASS_NORM, "Large Axe"];
D2JSP_ITEM_ItemList["bax"] = ["axe",  "lax", "bax", "9ba", "7ba", "gax", "gix", "W", D2JSP_ITEM_CLASS_NORM, "Broad Axe"];
D2JSP_ITEM_ItemList["btx"] = ["axe",  "btx", "btx", "9bt", "7bt", "gix", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Battle Axe"];
D2JSP_ITEM_ItemList["gax"] = ["axe",  "btx", "gax", "9ga", "7ga", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Great Axe"];
D2JSP_ITEM_ItemList["gix"] = ["axe",  "gix", "gix", "9gi", "7gi", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Giant Axe"];
D2JSP_ITEM_ItemList["wnd"] = ["wand", "wnd", "wnd", "9wn", "7wn", "ywn", "bwn", "W", D2JSP_ITEM_CLASS_NORM, "Wand"];
D2JSP_ITEM_ItemList["ywn"] = ["wand", "ywn", "ywn", "9yw", "7yw", "bwn", "gwn", "W", D2JSP_ITEM_CLASS_NORM, "Yew Wand"];
D2JSP_ITEM_ItemList["bwn"] = ["wand", "bwn", "bwn", "9bw", "7bw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Bone Wand"];
D2JSP_ITEM_ItemList["gwn"] = ["wand", "bwn", "gwn", "9gw", "7gw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Grim Wand"];
D2JSP_ITEM_ItemList["clb"] = ["club", "clb", "clb", "9cl", "7cl", "mac", "mst", "W", D2JSP_ITEM_CLASS_NORM, "Club"];
D2JSP_ITEM_ItemList["scp"] = ["scep", "mac", "scp", "9sc", "7sc", "gsc", "wsp", "W", D2JSP_ITEM_CLASS_NORM, "Scepter"];
D2JSP_ITEM_ItemList["gsc"] = ["scep", "mac", "gsc", "9qs", "7qs", "xxx", "wsp", "W", D2JSP_ITEM_CLASS_NORM, "Grand Scepter"];
D2JSP_ITEM_ItemList["wsp"] = ["scep", "whm", "wsp", "9ws", "7ws", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "War Scepter"];
D2JSP_ITEM_ItemList["spc"] = ["club", "clb", "spc", "9sp", "7sp", "mac", "mst", "W", D2JSP_ITEM_CLASS_NORM, "Spiked Club"];
D2JSP_ITEM_ItemList["mac"] = ["mace", "mac", "mac", "9ma", "7ma", "mst", "mau", "W", D2JSP_ITEM_CLASS_NORM, "Mace"];
D2JSP_ITEM_ItemList["mst"] = ["mace", "mac", "mst", "9mt", "7mt", "xxx", "fla", "W", D2JSP_ITEM_CLASS_NORM, "Morning Star"];
D2JSP_ITEM_ItemList["fla"] = ["mace", "fla", "fla", "9fl", "7fl", "xxx", "gma", "W", D2JSP_ITEM_CLASS_NORM, "Flail"];
D2JSP_ITEM_ItemList["whm"] = ["hamm", "whm", "whm", "9wh", "7wh", "mau", "gma", "W", D2JSP_ITEM_CLASS_NORM, "War Hammer"];
D2JSP_ITEM_ItemList["mau"] = ["hamm", "mau", "mau", "9m9", "7m7", "xxx", "mau", "W", D2JSP_ITEM_CLASS_NORM, "Maul"];
D2JSP_ITEM_ItemList["gma"] = ["hamm", "mau", "gma", "9gm", "7gm", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Great Maul"];
D2JSP_ITEM_ItemList["ssd"] = ["swor", "ssd", "ssd", "9ss", "7ss", "scm", "wsd", "W", D2JSP_ITEM_CLASS_NORM, "Short Sword"];
D2JSP_ITEM_ItemList["scm"] = ["swor", "scm", "scm", "9sm", "7sm", "sbr", "lsd", "W", D2JSP_ITEM_CLASS_NORM, "Scimitar"];
D2JSP_ITEM_ItemList["sbr"] = ["swor", "scm", "sbr", "9sb", "7sb", "flc", "bsd", "W", D2JSP_ITEM_CLASS_NORM, "Saber"];
D2JSP_ITEM_ItemList["flc"] = ["swor", "flc", "flc", "9fc", "7fc", "bsd", "wsd", "W", D2JSP_ITEM_CLASS_NORM, "Falchion"];
D2JSP_ITEM_ItemList["crs"] = ["swor", "crs", "crs", "9cr", "7cr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Crystal Sword"];
D2JSP_ITEM_ItemList["bsd"] = ["swor", "bsd", "bsd", "9bs", "7bs", "lsd", "wsd", "W", D2JSP_ITEM_CLASS_NORM, "Broad Sword"];
D2JSP_ITEM_ItemList["lsd"] = ["swor", "lsd", "lsd", "9ls", "7ls", "wsd", "wsd", "W", D2JSP_ITEM_CLASS_NORM, "Long Sword"];
D2JSP_ITEM_ItemList["wsd"] = ["swor", "flc", "wsd", "9wd", "7wd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "War Sword"];
D2JSP_ITEM_ItemList["2hs"] = ["swor", "clm", "2hs", "92h", "72h", "clm", "gis", "W", D2JSP_ITEM_CLASS_NORM, "Two-Handed Sword"];
D2JSP_ITEM_ItemList["clm"] = ["swor", "clm", "clm", "9cm", "7cm", "gis", "bsw", "W", D2JSP_ITEM_CLASS_NORM, "Claymore"];
D2JSP_ITEM_ItemList["gis"] = ["swor", "gsd", "gis", "9gs", "7gs", "bsw", "flb", "W", D2JSP_ITEM_CLASS_NORM, "Giant Sword"];
D2JSP_ITEM_ItemList["bsw"] = ["swor", "clm", "bsw", "9b9", "7b7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Bastard Sword"];
D2JSP_ITEM_ItemList["flb"] = ["swor", "clm", "flb", "9fb", "7fb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Flamberge"];
D2JSP_ITEM_ItemList["gsd"] = ["swor", "gsd", "gsd", "9gd", "7gd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Great Sword"];
D2JSP_ITEM_ItemList["dgr"] = ["knif", "dgr", "dgr", "9dg", "7dg", "kri", "bld", "W", D2JSP_ITEM_CLASS_NORM, "Dagger"];
D2JSP_ITEM_ItemList["dir"] = ["knif", "dir", "dir", "9di", "7di", "kri", "bld", "W", D2JSP_ITEM_CLASS_NORM, "Dirk"];
//D2JSP_ITEM_ItemList["kri"] = ["knif", "dir", "kri", "9kr", "7kr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Kriss"];
D2JSP_ITEM_ItemList["kri"] = ["knif", "dir", "kri", "9kr", "7kr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Kris"];
D2JSP_ITEM_ItemList["bld"] = ["knif", "dgr", "bld", "9bl", "7bl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Blade"];
D2JSP_ITEM_ItemList["tkf"] = ["tkni", "dgr", "tkf", "9tk", "7tk", "bkf", "bkf", "W", D2JSP_ITEM_CLASS_NORM, "Throwing Knife"];
D2JSP_ITEM_ItemList["tax"] = ["taxe", "hax", "tax", "9ta", "7ta", "bal", "bal", "W", D2JSP_ITEM_CLASS_NORM, "Throwing Axe"];
D2JSP_ITEM_ItemList["bkf"] = ["tkni", "dgr", "bkf", "9bk", "7bk", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Balanced Knife"];
D2JSP_ITEM_ItemList["bal"] = ["taxe", "hax", "bal", "9b8", "7b8", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Balanced Axe"];
D2JSP_ITEM_ItemList["jav"] = ["jave", "jav", "jav", "9ja", "7ja", "glv", "glv", "W", D2JSP_ITEM_CLASS_NORM, "Javelin"];
D2JSP_ITEM_ItemList["pil"] = ["jave", "pil", "pil", "9pi", "7pi", "tsp", "tsp", "W", D2JSP_ITEM_CLASS_NORM, "Pilum"];
D2JSP_ITEM_ItemList["ssp"] = ["jave", "jav", "ssp", "9s9", "7s7", "tsp", "tsp", "W", D2JSP_ITEM_CLASS_NORM, "Short Spear"];
D2JSP_ITEM_ItemList["glv"] = ["jave", "glv", "glv", "9gl", "7gl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Glaive"];
D2JSP_ITEM_ItemList["tsp"] = ["jave", "pil", "tsp", "9ts", "7ts", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Throwing Spear"];
D2JSP_ITEM_ItemList["spr"] = ["spea", "spr", "spr", "9sr", "7sr", "spt", "pik", "W", D2JSP_ITEM_CLASS_NORM, "Spear"];
D2JSP_ITEM_ItemList["tri"] = ["spea", "tri", "tri", "9tr", "7tr", "spt", "pik", "W", D2JSP_ITEM_CLASS_NORM, "Trident"];
D2JSP_ITEM_ItemList["brn"] = ["spea", "brn", "brn", "9br", "7br", "xxx", "pik", "W", D2JSP_ITEM_CLASS_NORM, "Brandistock"];
D2JSP_ITEM_ItemList["spt"] = ["spea", "tri", "spt", "9st", "7st", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Spetum"];
D2JSP_ITEM_ItemList["pik"] = ["spea", "pik", "pik", "9p9", "7p7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Pike"];
//D2JSP_ITEM_ItemList["bar"] = ["pole", "hal", "bar", "9b7", "7b7", "hal", "wsc", "W", D2JSP_ITEM_CLASS_NORM, "Bardiche"];
D2JSP_ITEM_ItemList["bar"] = ["pole", "hal", "bar", "9b7", "7o7", "hal", "wsc", "W", D2JSP_ITEM_CLASS_NORM, "Bardiche"];
D2JSP_ITEM_ItemList["vou"] = ["pole", "hal", "vou", "9vo", "7vo", "hal", "wsc", "W", D2JSP_ITEM_CLASS_NORM, "Voulge"];
D2JSP_ITEM_ItemList["scy"] = ["pole", "scy", "scy", "9s8", "7s8", "hal", "wsc", "W", D2JSP_ITEM_CLASS_NORM, "Scythe"];
D2JSP_ITEM_ItemList["pax"] = ["pole", "hal", "pax", "9pa", "7pa", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Poleaxe"];
D2JSP_ITEM_ItemList["hal"] = ["pole", "pax", "hal", "9h9", "7h7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Halberd"];
D2JSP_ITEM_ItemList["wsc"] = ["pole", "scy", "wsc", "9wc", "7wc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "War Scythe"];
D2JSP_ITEM_ItemList["sst"] = ["staf", "bst", "sst", "8ss", "6ss", "cst", "bst", "W", D2JSP_ITEM_CLASS_NORM, "Short Staff"];
D2JSP_ITEM_ItemList["lst"] = ["staf", "sst", "lst", "8ls", "6ls", "cst", "wst", "W", D2JSP_ITEM_CLASS_NORM, "Long Staff"];
D2JSP_ITEM_ItemList["cst"] = ["staf", "cst", "cst", "8cs", "6cs", "xxx", "wst", "W", D2JSP_ITEM_CLASS_NORM, "Gnarled Staff"];
D2JSP_ITEM_ItemList["bst"] = ["staf", "sst", "bst", "8bs", "6bs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Battle Staff"];
D2JSP_ITEM_ItemList["wst"] = ["staf", "lst", "wst", "8ws", "6ws", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "War Staff"];
D2JSP_ITEM_ItemList["sbw"] = ["bow",  "sbw", "sbw", "8sb", "6sb", "hbw", "cbw", "W", D2JSP_ITEM_CLASS_NORM, "Short Bow"];
D2JSP_ITEM_ItemList["hbw"] = ["bow",  "sbw", "hbw", "8hb", "6hb", "lbw", "sbb", "W", D2JSP_ITEM_CLASS_NORM, "Hunter's Bow"];
D2JSP_ITEM_ItemList["lbw"] = ["bow",  "lbw", "lbw", "8lb", "6lb", "cbw", "lbb", "W", D2JSP_ITEM_CLASS_NORM, "Long Bow"];
D2JSP_ITEM_ItemList["cbw"] = ["bow",  "lbw", "cbw", "8cb", "6cb", "sbb", "swb", "W", D2JSP_ITEM_CLASS_NORM, "Composite Bow"];
D2JSP_ITEM_ItemList["sbb"] = ["bow",  "sbb", "sbb", "8s8", "6s7", "lbb", "lwb", "W", D2JSP_ITEM_CLASS_NORM, "Short Battle Bow"];
D2JSP_ITEM_ItemList["lbb"] = ["bow",  "lbb", "lbb", "8l8", "6l7", "swb", "lwb", "W", D2JSP_ITEM_CLASS_NORM, "Long Battle Bow"];
D2JSP_ITEM_ItemList["swb"] = ["bow",  "sbb", "swb", "8sw", "6sw", "lwb", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Short War Bow"];
D2JSP_ITEM_ItemList["lwb"] = ["bow",  "lbb", "lwb", "8lw", "6lw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Long War Bow"];
D2JSP_ITEM_ItemList["lxb"] = ["xbow", "lxb", "lxb", "8lx", "6lx", "mxb", "rxb", "W", D2JSP_ITEM_CLASS_NORM, "Light Crossbow"];
D2JSP_ITEM_ItemList["mxb"] = ["xbow", "lxb", "mxb", "8mx", "6mx", "hxb", "hxb", "W", D2JSP_ITEM_CLASS_NORM, "Crossbow"];
D2JSP_ITEM_ItemList["hxb"] = ["xbow", "hxb", "hxb", "8hx", "6hx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Heavy Crossbow"];
D2JSP_ITEM_ItemList["rxb"] = ["xbow", "hxb", "rxb", "8rx", "6rx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Repeating Crossbow"];
D2JSP_ITEM_ItemList["gps"] = ["tpot", "gpl", "gps", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Rancid Gas Potion"];
D2JSP_ITEM_ItemList["ops"] = ["tpot", "opl", "ops", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Oil Potion"];
D2JSP_ITEM_ItemList["gpm"] = ["tpot", "gps", "gpm", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Choking Gas Potion"];
D2JSP_ITEM_ItemList["opm"] = ["tpot", "opl", "opm", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Exploding Potion"];
D2JSP_ITEM_ItemList["gpl"] = ["tpot", "gps", "gpl", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Strangling Gas Potion"];
D2JSP_ITEM_ItemList["opl"] = ["tpot", "ops", "opl", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Fulminating Potion"];
D2JSP_ITEM_ItemList["d33"] = ["knif", "dgr", "d33", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "decoy dagger"];
D2JSP_ITEM_ItemList["g33"] = ["knif", "dgr", "g33", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Gidbinn"];
D2JSP_ITEM_ItemList["leg"] = ["club", "clb", "leg", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Wirt's Leg"];
D2JSP_ITEM_ItemList["hdm"] = ["hamm", "whm", "hdm", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Horadric Malus"];
D2JSP_ITEM_ItemList["hfh"] = ["hamm", "whm", "hfh", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Hellforge Hammer"];
D2JSP_ITEM_ItemList["hst"] = ["staf", "bst", "hst", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Horadric Staff"];
D2JSP_ITEM_ItemList["msf"] = ["staf", "bst", "msf", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Staff of the Kings"];
D2JSP_ITEM_ItemList["9ha"] = ["axe",  "hax", "hax", "9ha", "7ha", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Hatchet"];
D2JSP_ITEM_ItemList["9ax"] = ["axe",  "axe", "axe", "9ax", "7ax", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Cleaver"];
D2JSP_ITEM_ItemList["92a"] = ["axe",  "axe", "2ax", "92a", "72a", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Twin Axe"];
D2JSP_ITEM_ItemList["9mp"] = ["axe",  "axe", "mpi", "9mp", "7mp", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Crowbill"];
D2JSP_ITEM_ItemList["9wa"] = ["axe",  "hax", "wax", "9wa", "7wa", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Naga"];
D2JSP_ITEM_ItemList["9la"] = ["axe",  "lax", "lax", "9la", "7la", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Military Axe"];
D2JSP_ITEM_ItemList["9ba"] = ["axe",  "lax", "bax", "9ba", "7ba", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Bearded Axe"];
D2JSP_ITEM_ItemList["9bt"] = ["axe",  "btx", "btx", "9bt", "7bt", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Tabar"];
D2JSP_ITEM_ItemList["9ga"] = ["axe",  "btx", "gax", "9ga", "7ga", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Gothic Axe"];
D2JSP_ITEM_ItemList["9gi"] = ["axe",  "gix", "gix", "9gi", "7gi", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Ancient Axe"];
D2JSP_ITEM_ItemList["9wn"] = ["wand", "wnd", "wnd", "9wn", "7wn", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Burnt Wand"];
D2JSP_ITEM_ItemList["9yw"] = ["wand", "ywn", "ywn", "9yw", "7yw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Petrified Wand"];
D2JSP_ITEM_ItemList["9bw"] = ["wand", "bwn", "bwn", "9bw", "7bw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Tomb Wand"];
D2JSP_ITEM_ItemList["9gw"] = ["wand", "bwn", "gwn", "9gw", "7gw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Grave Wand"];
D2JSP_ITEM_ItemList["9cl"] = ["club", "clb", "clb", "9cl", "7cl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Cudgel"];
D2JSP_ITEM_ItemList["9sc"] = ["scep", "mac", "scp", "9sc", "7sc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Rune Scepter"];
D2JSP_ITEM_ItemList["9qs"] = ["scep", "mac", "gsc", "9qs", "7qs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Holy Water Sprinkler"];
D2JSP_ITEM_ItemList["9ws"] = ["scep", "whm", "wsp", "9ws", "7ws", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Divine Scepter"];
D2JSP_ITEM_ItemList["9sp"] = ["club", "clb", "spc", "9sp", "7sp", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Barbed Club"];
D2JSP_ITEM_ItemList["9ma"] = ["mace", "mac", "mac", "9ma", "7ma", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Flanged Mace"];
D2JSP_ITEM_ItemList["9mt"] = ["mace", "mac", "mst", "9mt", "7mt", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Jagged Star"];
D2JSP_ITEM_ItemList["9fl"] = ["mace", "fla", "fla", "9fl", "7fl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Knout"];
D2JSP_ITEM_ItemList["9wh"] = ["hamm", "whm", "whm", "9wh", "7wh", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Battle Hammer"];
D2JSP_ITEM_ItemList["9m9"] = ["hamm", "mau", "mau", "9m9", "7m7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "War Club"];
D2JSP_ITEM_ItemList["9gm"] = ["hamm", "mau", "gma", "9gm", "7gm", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Martel de Fer"];
D2JSP_ITEM_ItemList["9ss"] = ["swor", "ssd", "ssd", "9ss", "7ss", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Gladius"];
D2JSP_ITEM_ItemList["9sm"] = ["swor", "scm", "scm", "9sm", "7sm", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Cutlass"];
D2JSP_ITEM_ItemList["9sb"] = ["swor", "scm", "sbr", "9sb", "7sb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Shamshir"];
D2JSP_ITEM_ItemList["9fc"] = ["swor", "flc", "flc", "9fc", "7fc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Tulwar"];
D2JSP_ITEM_ItemList["9cr"] = ["swor", "crs", "crs", "9cr", "7cr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Dimensional Blade"];
D2JSP_ITEM_ItemList["9bs"] = ["swor", "bsd", "bsd", "9bs", "7bs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Battle Sword"];
D2JSP_ITEM_ItemList["9ls"] = ["swor", "lsd", "lsd", "9ls", "7ls", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Rune Sword"];
D2JSP_ITEM_ItemList["9wd"] = ["swor", "flc", "wsd", "9wd", "7wd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Ancient Sword"];
//D2JSP_ITEM_ItemList["92h"] = ["swor", "clm", "2hs", "92h", "72h", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Espadon"];
D2JSP_ITEM_ItemList["92h"] = ["swor", "clm", "2hs", "92h", "72h", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Espandon"];
D2JSP_ITEM_ItemList["9cm"] = ["swor", "clm", "clm", "9cm", "7cm", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Dacian Falx"];
D2JSP_ITEM_ItemList["9gs"] = ["swor", "gsd", "gis", "9gs", "7gs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Tusk Sword"];
D2JSP_ITEM_ItemList["9b9"] = ["swor", "clm", "bsw", "9b9", "7b7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Gothic Sword"];
D2JSP_ITEM_ItemList["9fb"] = ["swor", "clm", "flb", "9fb", "7fb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Zweihander"];
D2JSP_ITEM_ItemList["9gd"] = ["swor", "gsd", "gsd", "9gd", "7gd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Executioner Sword"];
D2JSP_ITEM_ItemList["9dg"] = ["knif", "dgr", "dgr", "9dg", "7dg", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Poignard"];
D2JSP_ITEM_ItemList["9di"] = ["knif", "dir", "dir", "9di", "7di", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Rondel"];
D2JSP_ITEM_ItemList["9kr"] = ["knif", "dir", "kri", "9kr", "7kr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Cinquedeas"];
//D2JSP_ITEM_ItemList["9bl"] = ["knif", "dgr", "bld", "9bl", "7bl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Stilleto"];
D2JSP_ITEM_ItemList["9bl"] = ["knif", "dgr", "bld", "9bl", "7bl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Stiletto"];
D2JSP_ITEM_ItemList["9tk"] = ["tkni", "dgr", "tkf", "9tk", "7tk", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Battle Dart"];
D2JSP_ITEM_ItemList["9ta"] = ["taxe", "hax", "tax", "9ta", "7ta", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Francisca"];
D2JSP_ITEM_ItemList["9bk"] = ["tkni", "dgr", "bkf", "9bk", "7bk", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "War Dart"];
D2JSP_ITEM_ItemList["9b8"] = ["taxe", "hax", "bal", "9b8", "7b8", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Hurlbat"];
D2JSP_ITEM_ItemList["9ja"] = ["jave", "jav", "jav", "9ja", "7ja", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "War Javelin"];
D2JSP_ITEM_ItemList["9pi"] = ["jave", "pil", "pil", "9pi", "7pi", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Great Pilum"];
D2JSP_ITEM_ItemList["9s9"] = ["jave", "jav", "ssp", "9s9", "7s7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Simbilan"];
D2JSP_ITEM_ItemList["9gl"] = ["jave", "glv", "glv", "9gl", "7gl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Spiculum"];
D2JSP_ITEM_ItemList["9ts"] = ["jave", "pil", "tsp", "9ts", "7ts", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Harpoon"];
D2JSP_ITEM_ItemList["9sr"] = ["spea", "spr", "spr", "9sr", "7sr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "War Spear"];
D2JSP_ITEM_ItemList["9tr"] = ["spea", "tri", "tri", "9tr", "7tr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Fuscina"];
D2JSP_ITEM_ItemList["9br"] = ["spea", "brn", "brn", "9br", "7br", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "War Fork"];
D2JSP_ITEM_ItemList["9st"] = ["spea", "tri", "spt", "9st", "7st", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Yari"];
D2JSP_ITEM_ItemList["9p9"] = ["spea", "pik", "pik", "9p9", "7p7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Lance"];
//D2JSP_ITEM_ItemList["9b7"] = ["pole", "hal", "bar", "9b7", "7b7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Lochaber Axe"];
D2JSP_ITEM_ItemList["9b7"] = ["pole", "hal", "bar", "9b7", "7o7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Lochaber Axe"];
D2JSP_ITEM_ItemList["9vo"] = ["pole", "hal", "vou", "9vo", "7vo", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Bill"];
D2JSP_ITEM_ItemList["9s8"] = ["pole", "scy", "scy", "9s8", "7s8", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Battle Scythe"];
D2JSP_ITEM_ItemList["9pa"] = ["pole", "hal", "pax", "9pa", "7pa", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Partizan"];
D2JSP_ITEM_ItemList["9h9"] = ["pole", "pax", "hal", "9h9", "7h7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Bec-de-Corbin"];
D2JSP_ITEM_ItemList["9wc"] = ["pole", "scy", "wsc", "9wc", "7wc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Grim Scythe"];
D2JSP_ITEM_ItemList["8ss"] = ["staf", "bst", "sst", "8ss", "6ss", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Jo Staff"];
D2JSP_ITEM_ItemList["8ls"] = ["staf", "sst", "lst", "8ls", "6ls", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Quarterstaff"];
D2JSP_ITEM_ItemList["8cs"] = ["staf", "cst", "cst", "8cs", "6cs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Cedar Staff"];
D2JSP_ITEM_ItemList["8bs"] = ["staf", "sst", "bst", "8bs", "6bs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Gothic Staff"];
D2JSP_ITEM_ItemList["8ws"] = ["staf", "lst", "wst", "8ws", "6ws", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Rune Staff"];
D2JSP_ITEM_ItemList["8sb"] = ["bow",  "sbw", "sbw", "8sb", "6sb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Edge Bow"];
D2JSP_ITEM_ItemList["8hb"] = ["bow",  "sbw", "hbw", "8hb", "6hb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Razor Bow"];
D2JSP_ITEM_ItemList["8lb"] = ["bow",  "lbw", "lbw", "8lb", "6lb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Cedar Bow"];
D2JSP_ITEM_ItemList["8cb"] = ["bow",  "lbw", "cbw", "8cb", "6cb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Double Bow"];
D2JSP_ITEM_ItemList["8s8"] = ["bow",  "sbb", "sbb", "8s8", "6s7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Short Siege Bow"];
//D2JSP_ITEM_ItemList["8l8"] = ["bow",  "lbb", "lbb", "8l8", "6l7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Long Siege Bow"];
D2JSP_ITEM_ItemList["8l8"] = ["bow",  "lbb", "lbb", "8l8", "6l7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Large Siege Bow"];
D2JSP_ITEM_ItemList["8sw"] = ["bow",  "sbb", "swb", "8sw", "6sw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Rune Bow"];
D2JSP_ITEM_ItemList["8lw"] = ["bow",  "lbb", "lwb", "8lw", "6lw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Gothic Bow"];
D2JSP_ITEM_ItemList["8lx"] = ["xbow", "lxb", "lxb", "8lx", "6lx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Arbalest"];
D2JSP_ITEM_ItemList["8mx"] = ["xbow", "lxb", "mxb", "8mx", "6mx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Siege Crossbow"];
//D2JSP_ITEM_ItemList["8hx"] = ["xbow", "hxb", "hxb", "8hx", "6hx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Balista"];
D2JSP_ITEM_ItemList["8hx"] = ["xbow", "hxb", "hxb", "8hx", "6hx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Ballista"];
D2JSP_ITEM_ItemList["8rx"] = ["xbow", "hxb", "rxb", "8rx", "6rx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Chu-Ko-Nu"];
D2JSP_ITEM_ItemList["qf1"] = ["mace", "fla", "fla", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NONE, "Khalim's Flail"];
D2JSP_ITEM_ItemList["qf2"] = ["mace", "fla", "fla", "", "", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NONE, "Khalim's Will"];
D2JSP_ITEM_ItemList["ktr"] = ["h2h",  "ktr", "ktr", "9ar", "7ar", "wrb", "btl", "W", D2JSP_ITEM_CLASS_NORM, "Katar"];
D2JSP_ITEM_ItemList["wrb"] = ["h2h",  "ktr", "wrb", "9wb", "7wb", "axf", "skr", "W", D2JSP_ITEM_CLASS_NORM, "Wrist Blade"];
D2JSP_ITEM_ItemList["axf"] = ["h2h",  "axf", "axf", "9xf", "7xf", "ces", "clw", "W", D2JSP_ITEM_CLASS_NORM, "Hatchet Hands"];
D2JSP_ITEM_ItemList["ces"] = ["h2h",  "axf", "ces", "9cs", "7cs", "clw", "btl", "W", D2JSP_ITEM_CLASS_NORM, "Cestus"];
D2JSP_ITEM_ItemList["clw"] = ["h2h",  "clw", "clw", "9lw", "7lw", "btl", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Claws"];
D2JSP_ITEM_ItemList["btl"] = ["h2h",  "clw", "btl", "9tw", "7tw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Blade Talons"];
D2JSP_ITEM_ItemList["skr"] = ["h2h",  "skr", "skr", "9qr", "7qr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Scissors Katar"];
D2JSP_ITEM_ItemList["9ar"] = ["h2h",  "ktr", "ktr", "9ar", "7ar", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Quhab"];
D2JSP_ITEM_ItemList["9wb"] = ["h2h",  "ktr", "wrb", "9wb", "7wb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Wrist Spike"];
D2JSP_ITEM_ItemList["9xf"] = ["h2h",  "axf", "axf", "9xf", "7xf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Fascia"];
D2JSP_ITEM_ItemList["9cs"] = ["h2h2", "axf", "ces", "9cs", "7cs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Hand Scythe"];
D2JSP_ITEM_ItemList["9lw"] = ["h2h2", "clw", "clw", "9lw", "7lw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Greater Claws"];
D2JSP_ITEM_ItemList["9tw"] = ["h2h2", "clw", "btl", "9tw", "7tw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Greater Talons"];
D2JSP_ITEM_ItemList["9qr"] = ["h2h2", "skr", "skr", "9qr", "7qr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Scissors Quhab"];
D2JSP_ITEM_ItemList["7ar"] = ["h2h2", "ktr", "ktr", "9ar", "7ar", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Suwayyah"];
D2JSP_ITEM_ItemList["7wb"] = ["h2h2", "ktr", "wrb", "9wb", "7wb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Wrist Sword"];
D2JSP_ITEM_ItemList["7xf"] = ["h2h2", "axf", "axf", "9xf", "7xf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "War Fist"];
D2JSP_ITEM_ItemList["7cs"] = ["h2h2", "axf", "ces", "9cs", "7cs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Battle Cestus"];
D2JSP_ITEM_ItemList["7lw"] = ["h2h2", "clw", "clw", "9lw", "7lw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Feral Claws"];
D2JSP_ITEM_ItemList["7tw"] = ["h2h2", "clw", "btl", "9tw", "7tw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Runic Talons"];
D2JSP_ITEM_ItemList["7qr"] = ["h2h2", "skr", "skr", "9qr", "7qr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Scissors Suwayyah"];
D2JSP_ITEM_ItemList["7ha"] = ["axe",  "hax", "hax", "9ha", "7ha", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Tomahawk"];
D2JSP_ITEM_ItemList["7ax"] = ["axe",  "axe", "axe", "9ax", "7ax", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Small Crescent"];
D2JSP_ITEM_ItemList["72a"] = ["axe",  "axe", "2ax", "92a", "72a", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Ettin Axe"];
D2JSP_ITEM_ItemList["7mp"] = ["axe",  "axe", "mpi", "9mp", "7mp", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "War Spike"];
D2JSP_ITEM_ItemList["7wa"] = ["axe",  "hax", "wax", "9wa", "7wa", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Berserker Axe"];
D2JSP_ITEM_ItemList["7la"] = ["axe",  "lax", "lax", "9la", "7la", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Feral Axe"];
D2JSP_ITEM_ItemList["7ba"] = ["axe",  "lax", "bax", "9ba", "7ba", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Silver Edged Axe"];
D2JSP_ITEM_ItemList["7bt"] = ["axe",  "btx", "btx", "9bt", "7bt", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Decapitator"];
D2JSP_ITEM_ItemList["7ga"] = ["axe",  "btx", "gax", "9ga", "7ga", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Champion Axe"];
D2JSP_ITEM_ItemList["7gi"] = ["axe",  "gix", "gix", "9gi", "7gi", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Glorious Axe"];
D2JSP_ITEM_ItemList["7wn"] = ["wand", "wnd", "wnd", "9wn", "7wn", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Polished Wand"];
D2JSP_ITEM_ItemList["7yw"] = ["wand", "ywn", "ywn", "9yw", "7yw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Ghost Wand"];
D2JSP_ITEM_ItemList["7bw"] = ["wand", "bwn", "bwn", "9bw", "7bw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Lich Wand"];
D2JSP_ITEM_ItemList["7gw"] = ["wand", "bwn", "gwn", "9gw", "7gw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Unearthed Wand"];
D2JSP_ITEM_ItemList["7cl"] = ["club", "clb", "clb", "9cl", "7cl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Truncheon"];
D2JSP_ITEM_ItemList["7sc"] = ["scep", "mac", "scp", "9sc", "7sc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Mighty Scepter"];
D2JSP_ITEM_ItemList["7qs"] = ["scep", "mac", "gsc", "9qs", "7qs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Seraph Rod"];
D2JSP_ITEM_ItemList["7ws"] = ["scep", "whm", "wsp", "9ws", "7ws", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Caduceus"];
D2JSP_ITEM_ItemList["7sp"] = ["club", "clb", "spc", "9sp", "7sp", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Tyrant Club"];
D2JSP_ITEM_ItemList["7ma"] = ["mace", "mac", "mac", "9ma", "7ma", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Reinforced Mace"];
D2JSP_ITEM_ItemList["7mt"] = ["mace", "mac", "mst", "9mt", "7mt", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Devil Star"];
D2JSP_ITEM_ItemList["7fl"] = ["mace", "fla", "fla", "9fl", "7fl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Scourge"];
D2JSP_ITEM_ItemList["7wh"] = ["hamm", "whm", "whm", "9wh", "7wh", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Legendary Mallet"];
D2JSP_ITEM_ItemList["7m7"] = ["hamm", "mau", "mau", "9m9", "7m7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Ogre Maul"];
D2JSP_ITEM_ItemList["7gm"] = ["hamm", "mau", "gma", "9gm", "7gm", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Thunder Maul"];
D2JSP_ITEM_ItemList["7ss"] = ["swor", "ssd", "ssd", "9ss", "7ss", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Falcata"];
D2JSP_ITEM_ItemList["7sm"] = ["swor", "scm", "scm", "9sm", "7sm", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Ataghan"];
D2JSP_ITEM_ItemList["7sb"] = ["swor", "scm", "sbr", "9sb", "7sb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Elegant Blade"];
D2JSP_ITEM_ItemList["7fc"] = ["swor", "flc", "flc", "9fc", "7fc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Hydra Edge"];
D2JSP_ITEM_ItemList["7cr"] = ["swor", "crs", "crs", "9cr", "7cr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Phase Blade"];
D2JSP_ITEM_ItemList["7bs"] = ["swor", "bsd", "bsd", "9bs", "7bs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Conquest Sword"];
D2JSP_ITEM_ItemList["7ls"] = ["swor", "lsd", "lsd", "9ls", "7ls", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Cryptic Sword"];
D2JSP_ITEM_ItemList["7wd"] = ["swor", "flc", "wsd", "9wd", "7wd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Mythical Sword"];
D2JSP_ITEM_ItemList["72h"] = ["swor", "clm", "2hs", "92h", "72h", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Legend Sword"];
D2JSP_ITEM_ItemList["7cm"] = ["swor", "clm", "clm", "9cm", "7cm", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Highland Blade"];
D2JSP_ITEM_ItemList["7gs"] = ["swor", "gsd", "gis", "9gs", "7gs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Balrog Blade"];
D2JSP_ITEM_ItemList["7b7"] = ["swor", "clm", "bsw", "9b9", "7b7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Champion Sword"];
//D2JSP_ITEM_ItemList["7fb"] = ["swor", "clm", "flb", "9fb", "7fb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Colossal Sword"];
D2JSP_ITEM_ItemList["7fb"] = ["swor", "clm", "flb", "9fb", "7fb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Colossus Sword"];
D2JSP_ITEM_ItemList["7gd"] = ["swor", "gsd", "gsd", "9gd", "7gd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Colossus Blade"];
D2JSP_ITEM_ItemList["7dg"] = ["knif", "dgr", "dgr", "9dg", "7dg", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Bone Knife"];
D2JSP_ITEM_ItemList["7di"] = ["knif", "dir", "dir", "9di", "7di", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Mithral Point"];
D2JSP_ITEM_ItemList["7kr"] = ["knif", "dir", "kri", "9kr", "7kr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Fanged Knife"];
D2JSP_ITEM_ItemList["7bl"] = ["knif", "dgr", "bld", "9bl", "7bl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Legend Spike"];
D2JSP_ITEM_ItemList["7tk"] = ["tkni", "dgr", "tkf", "9tk", "7tk", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Flying Knife"];
D2JSP_ITEM_ItemList["7ta"] = ["taxe", "hax", "tax", "9ta", "7ta", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Flying Axe"];
D2JSP_ITEM_ItemList["7bk"] = ["tkni", "dgr", "bkf", "9bk", "7bk", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Winged Knife"];
D2JSP_ITEM_ItemList["7b8"] = ["taxe", "hax", "bal", "9b8", "7b8", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Winged Axe"];
D2JSP_ITEM_ItemList["7ja"] = ["jave", "jav", "jav", "9ja", "7ja", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Hyperion Javelin"];
D2JSP_ITEM_ItemList["7pi"] = ["jave", "pil", "pil", "9pi", "7pi", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Stygian Pilum"];
D2JSP_ITEM_ItemList["7s7"] = ["jave", "jav", "ssp", "9s9", "7s7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Balrog Spear"];
D2JSP_ITEM_ItemList["7gl"] = ["jave", "glv", "glv", "9gl", "7gl", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Ghost Glaive"];
D2JSP_ITEM_ItemList["7ts"] = ["jave", "pil", "tsp", "9ts", "7ts", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Winged Harpoon"];
D2JSP_ITEM_ItemList["7sr"] = ["spea", "spr", "spr", "9sr", "7sr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Hyperion Spear"];
D2JSP_ITEM_ItemList["7tr"] = ["spea", "tri", "tri", "9tr", "7tr", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Stygian Pike"];
D2JSP_ITEM_ItemList["7br"] = ["spea", "brn", "brn", "9br", "7br", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Mancatcher"];
D2JSP_ITEM_ItemList["7st"] = ["spea", "tri", "spt", "9st", "7st", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Ghost Spear"];
D2JSP_ITEM_ItemList["7p7"] = ["spea", "pik", "pik", "9p9", "7p7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "War Pike"];
//D2JSP_ITEM_ItemList["7o7"] = ["pole", "hal", "bar", "9b7", "7b7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Ogre Axe"];
D2JSP_ITEM_ItemList["7o7"] = ["pole", "hal", "bar", "9b7", "7o7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Ogre Axe"];
D2JSP_ITEM_ItemList["7vo"] = ["pole", "hal", "vou", "9vo", "7vo", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Colossus Voulge"];
D2JSP_ITEM_ItemList["7s8"] = ["pole", "scy", "scy", "9s8", "7s8", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Thresher"];
D2JSP_ITEM_ItemList["7pa"] = ["pole", "hal", "pax", "9pa", "7pa", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Cryptic Axe"];
D2JSP_ITEM_ItemList["7h7"] = ["pole", "pax", "hal", "9h9", "7h7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Great Poleaxe"];
D2JSP_ITEM_ItemList["7wc"] = ["pole", "scy", "wsc", "9wc", "7wc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Giant Thresher"];
D2JSP_ITEM_ItemList["6ss"] = ["staf", "bst", "sst", "8ss", "6ss", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Walking Stick"];
D2JSP_ITEM_ItemList["6ls"] = ["staf", "sst", "lst", "8ls", "6ls", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Stalagmite"];
D2JSP_ITEM_ItemList["6cs"] = ["staf", "cst", "cst", "8cs", "6cs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Elder Staff"];
D2JSP_ITEM_ItemList["6bs"] = ["staf", "sst", "bst", "8bs", "6bs", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Shillelah"];
D2JSP_ITEM_ItemList["6ws"] = ["staf", "lst", "wst", "8ws", "6ws", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Archon Staff"];
D2JSP_ITEM_ItemList["6sb"] = ["bow",  "sbw", "sbw", "8sb", "6sb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Spider Bow"];
D2JSP_ITEM_ItemList["6hb"] = ["bow",  "sbw", "hbw", "8hb", "6hb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Blade Bow"];
D2JSP_ITEM_ItemList["6lb"] = ["bow",  "lbw", "lbw", "8lb", "6lb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Shadow Bow"];
D2JSP_ITEM_ItemList["6cb"] = ["bow",  "lbw", "cbw", "8cb", "6cb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Great Bow"];
D2JSP_ITEM_ItemList["6s7"] = ["bow",  "sbb", "sbb", "8s8", "6s7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Diamond Bow"];
D2JSP_ITEM_ItemList["6l7"] = ["bow",  "lbb", "lbb", "8l8", "6l7", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Crusader Bow"];
D2JSP_ITEM_ItemList["6sw"] = ["bow",  "sbb", "swb", "8sw", "6sw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Ward Bow"];
D2JSP_ITEM_ItemList["6lw"] = ["bow",  "lbb", "lwb", "8lw", "6lw", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Hydra Bow"];
D2JSP_ITEM_ItemList["6lx"] = ["xbow", "lxb", "lxb", "8lx", "6lx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Pellet Bow"];
D2JSP_ITEM_ItemList["6mx"] = ["xbow", "lxb", "mxb", "8mx", "6mx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Gorgon Crossbow"];
D2JSP_ITEM_ItemList["6hx"] = ["xbow", "hxb", "hxb", "8hx", "6hx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Colossus Crossbow"];
D2JSP_ITEM_ItemList["6rx"] = ["xbow", "hxb", "rxb", "8rx", "6rx", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Demon Crossbow"];
D2JSP_ITEM_ItemList["ob1"] = ["orb",  "ob1", "ob1", "ob6", "obb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Eagle Orb"];
D2JSP_ITEM_ItemList["ob2"] = ["orb",  "ob1", "ob2", "ob7", "obc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Sacred Globe"];
D2JSP_ITEM_ItemList["ob3"] = ["orb",  "ob3", "ob3", "ob8", "obd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Smoked Sphere"];
D2JSP_ITEM_ItemList["ob4"] = ["orb",  "ob4", "ob4", "ob9", "obe", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Clasped Orb"];
//D2JSP_ITEM_ItemList["ob5"] = ["orb",  "ob4", "ob5", "oba", "obf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Dragon Stone"];
D2JSP_ITEM_ItemList["ob5"] = ["orb",  "ob4", "ob5", "oba", "obf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Jared's Stone"];
D2JSP_ITEM_ItemList["am1"] = ["abow", "am1", "am1", "am6", "amb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Stag Bow"];
D2JSP_ITEM_ItemList["am2"] = ["abow", "am2", "am2", "am7", "amc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Reflex Bow"];
D2JSP_ITEM_ItemList["am3"] = ["aspe", "am3", "am3", "am8", "amd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Maiden Spear"];
D2JSP_ITEM_ItemList["am4"] = ["aspe", "pik", "am4", "am9", "ame", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Maiden Pike"];
D2JSP_ITEM_ItemList["am5"] = ["ajav", "pil", "am5", "ama", "amf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_NORM, "Maiden Javelin"];
D2JSP_ITEM_ItemList["ob6"] = ["orb",  "ob1", "ob1", "ob6", "obb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Glowing Orb"];
D2JSP_ITEM_ItemList["ob7"] = ["orb",  "ob1", "ob2", "ob7", "obc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Crystalline Globe"];
D2JSP_ITEM_ItemList["ob8"] = ["orb",  "ob3", "ob3", "ob8", "obd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Cloudy Sphere"];
D2JSP_ITEM_ItemList["ob9"] = ["orb",  "ob4", "ob4", "ob9", "obe", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Sparkling Ball"];
D2JSP_ITEM_ItemList["oba"] = ["orb",  "ob4", "ob5", "oba", "obf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Swirling Crystal"];
D2JSP_ITEM_ItemList["am6"] = ["abow", "am1", "am1", "am6", "amb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Ashwood Bow"];
D2JSP_ITEM_ItemList["am7"] = ["abow", "am2", "am2", "am7", "amc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Ceremonial Bow"];
D2JSP_ITEM_ItemList["am8"] = ["aspe", "am3", "am3", "am8", "amd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Ceremonial Spear"];
D2JSP_ITEM_ItemList["am9"] = ["aspe", "pik", "am4", "am9", "ame", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Ceremonial Pike"];
D2JSP_ITEM_ItemList["ama"] = ["ajav", "pil", "am5", "ama", "amf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_EXCEP, "Ceremonial Javelin"];
D2JSP_ITEM_ItemList["obb"] = ["orb",  "ob1", "ob1", "ob6", "obb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Heavenly Stone"];
D2JSP_ITEM_ItemList["obc"] = ["orb",  "ob1", "ob2", "ob7", "obc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Eldritch Orb"];
D2JSP_ITEM_ItemList["obd"] = ["orb",  "ob3", "ob3", "ob8", "obd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Demon Heart"];
D2JSP_ITEM_ItemList["obe"] = ["orb",  "ob4", "ob4", "ob9", "obe", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Vortex Orb"];
D2JSP_ITEM_ItemList["obf"] = ["orb",  "ob4", "ob5", "oba", "obf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Dimensional Shard"];
D2JSP_ITEM_ItemList["amb"] = ["abow", "am1", "am1", "am6", "amb", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Matriarchal Bow"];
D2JSP_ITEM_ItemList["amc"] = ["abow", "am2", "am2", "am7", "amc", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Grand Matron Bow"];
D2JSP_ITEM_ItemList["amd"] = ["aspe", "am3", "am3", "am8", "amd", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Matriarchal Spear"];
D2JSP_ITEM_ItemList["ame"] = ["aspe", "pik", "am4", "am9", "ame", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Matriarchal Pike"];
//D2JSP_ITEM_ItemList["amf"] = ["ajav", "pil", "am5", "ama", "amf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "MatriarchalJavelin"];
D2JSP_ITEM_ItemList["amf"] = ["ajav", "pil", "am5", "ama", "amf", "xxx", "xxx", "W", D2JSP_ITEM_CLASS_ELITE, "Matriarchal Javelin"];
D2JSP_ITEM_ItemList["cap"] = ["helm", "cap", "cap", "xap", "uap", "skp", "ghm", "A", D2JSP_ITEM_CLASS_NORM, "Cap"];
D2JSP_ITEM_ItemList["skp"] = ["helm", "skp", "skp", "xkp", "ukp", "hlm", "crn", "A", D2JSP_ITEM_CLASS_NORM, "Skull Cap"];
D2JSP_ITEM_ItemList["hlm"] = ["helm", "hlm", "hlm", "xlm", "ulm", "fhl", "ghm", "A", D2JSP_ITEM_CLASS_NORM, "Helm"];
D2JSP_ITEM_ItemList["fhl"] = ["helm", "fhl", "fhl", "xhl", "uhl", "ghm", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Full Helm"];
D2JSP_ITEM_ItemList["ghm"] = ["helm", "ghm", "ghm", "xhm", "uhm", "crn", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Great Helm"];
D2JSP_ITEM_ItemList["crn"] = ["helm", "crn", "crn", "xrn", "urn", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Crown"];
D2JSP_ITEM_ItemList["msk"] = ["helm", "msk", "msk", "xsk", "usk", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Mask"];
D2JSP_ITEM_ItemList["qui"] = ["tors", "qlt", "qui", "xui", "uui", "lea", "gth", "A", D2JSP_ITEM_CLASS_NORM, "Quilted Armor"];
D2JSP_ITEM_ItemList["lea"] = ["tors", "lea", "lea", "xea", "uea", "hla", "ful", "A", D2JSP_ITEM_CLASS_NORM, "Leather Armor"];
D2JSP_ITEM_ItemList["hla"] = ["tors", "hla", "hla", "xla", "ula", "stu", "aar", "A", D2JSP_ITEM_CLASS_NORM, "Hard Leather Armor"];
D2JSP_ITEM_ItemList["stu"] = ["tors", "stu", "stu", "xtu", "utu", "rng", "ltp", "A", D2JSP_ITEM_CLASS_NORM, "Studded Leather"];
D2JSP_ITEM_ItemList["rng"] = ["tors", "rng", "rng", "xng", "ung", "scl", "chn", "A", D2JSP_ITEM_CLASS_NORM, "Ring Mail"];
D2JSP_ITEM_ItemList["scl"] = ["tors", "scl", "scl", "xcl", "ucl", "chn", "brs", "A", D2JSP_ITEM_CLASS_NORM, "Scale Mail"];
D2JSP_ITEM_ItemList["chn"] = ["tors", "chn", "chn", "xhn", "uhn", "brs", "spl", "A", D2JSP_ITEM_CLASS_NORM, "Chain Mail"];
D2JSP_ITEM_ItemList["brs"] = ["tors", "brs", "brs", "xrs", "urs", "spl", "plt", "A", D2JSP_ITEM_CLASS_NORM, "Breast Plate"];
D2JSP_ITEM_ItemList["spl"] = ["tors", "spl", "spl", "xpl", "upl", "plt", "fld", "A", D2JSP_ITEM_CLASS_NORM, "Splint Mail"];
D2JSP_ITEM_ItemList["plt"] = ["tors", "plt", "plt", "xlt", "ult", "fld", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Plate Mail"];
D2JSP_ITEM_ItemList["fld"] = ["tors", "fld", "fld", "xld", "uld", "gth", "ful", "A", D2JSP_ITEM_CLASS_NORM, "Field Plate"];
D2JSP_ITEM_ItemList["gth"] = ["tors", "gth", "gth", "xth", "uth", "ful", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Gothic Plate"];
D2JSP_ITEM_ItemList["ful"] = ["tors", "ful", "ful", "xul", "uul", "aar", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Full Plate Mail"];
D2JSP_ITEM_ItemList["aar"] = ["tors", "aar", "aar", "xar", "uar", "ltp", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Ancient Armor"];
D2JSP_ITEM_ItemList["ltp"] = ["tors", "ltp", "ltp", "xtp", "utp", "buc", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Light Plate"];
D2JSP_ITEM_ItemList["buc"] = ["shie", "buc", "buc", "xuc", "uuc", "sml", "tow", "A", D2JSP_ITEM_CLASS_NORM, "Buckler"];
D2JSP_ITEM_ItemList["sml"] = ["shie", "buc", "sml", "xml", "uml", "lrg", "kit", "A", D2JSP_ITEM_CLASS_NORM, "Small Shield"];
D2JSP_ITEM_ItemList["lrg"] = ["shie", "lrg", "lrg", "xrg", "urg", "kit", "tow", "A", D2JSP_ITEM_CLASS_NORM, "Large Shield"];
D2JSP_ITEM_ItemList["kit"] = ["shie", "kit", "kit", "xit", "uit", "tow", "gts", "A", D2JSP_ITEM_CLASS_NORM, "Kite Shield"];
D2JSP_ITEM_ItemList["tow"] = ["shie", "tow", "tow", "xow", "uow", "gts", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Tower Shield"];
D2JSP_ITEM_ItemList["gts"] = ["shie", "kit", "gts", "xts", "uts", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Gothic Shield"];
//D2JSP_ITEM_ItemList["lgl"] = ["glov", "lgl", "lgl", "xlg", "ulg", "vgl", "hgl", "A", D2JSP_ITEM_CLASS_NORM, "Gloves(L)"];
D2JSP_ITEM_ItemList["lgl"] = ["glov", "lgl", "lgl", "xlg", "ulg", "vgl", "hgl", "A", D2JSP_ITEM_CLASS_NORM, "Leather Gloves"];
D2JSP_ITEM_ItemList["vgl"] = ["glov", "vgl", "vgl", "xvg", "uvg", "mgl", "tgl", "A", D2JSP_ITEM_CLASS_NORM, "Heavy Gloves"];
//D2JSP_ITEM_ItemList["mgl"] = ["glov", "mgl", "mgl", "xmg", "umg", "tgl", "hgl", "A", D2JSP_ITEM_CLASS_NORM, "Bracers(M)"];
D2JSP_ITEM_ItemList["mgl"] = ["glov", "mgl", "mgl", "xmg", "umg", "tgl", "hgl", "A", D2JSP_ITEM_CLASS_NORM, "Chain Gloves"];
D2JSP_ITEM_ItemList["tgl"] = ["glov", "mgl", "tgl", "xtg", "utg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Light Gauntlets"];
//D2JSP_ITEM_ItemList["hgl"] = ["glov", "hgl", "hgl", "xhg", "uhg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Gaunlets(H)"];
D2JSP_ITEM_ItemList["hgl"] = ["glov", "hgl", "hgl", "xhg", "uhg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Gauntlets"];
//D2JSP_ITEM_ItemList["lbt"] = ["boot", "lbt", "lbt", "xlb", "ulb", "vbt", "tbt", "A", D2JSP_ITEM_CLASS_NORM, "Leather Boots"];
D2JSP_ITEM_ItemList["lbt"] = ["boot", "lbt", "lbt", "xlb", "ulb", "vbt", "tbt", "A", D2JSP_ITEM_CLASS_NORM, "Boots"];
D2JSP_ITEM_ItemList["vbt"] = ["boot", "vbt", "vbt", "xvb", "uvb", "mbt", "tbt", "A", D2JSP_ITEM_CLASS_NORM, "Heavy Boots"];
D2JSP_ITEM_ItemList["mbt"] = ["boot", "mbt", "mbt", "xmb", "umb", "tbt", "hbt", "A", D2JSP_ITEM_CLASS_NORM, "Chain Boots"];
//D2JSP_ITEM_ItemList["tbt"] = ["boot", "mbt", "tbt", "xtb", "utb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Light Plate Boots"];
D2JSP_ITEM_ItemList["tbt"] = ["boot", "mbt", "tbt", "xtb", "utb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Light Plated Boots"];
//D2JSP_ITEM_ItemList["hbt"] = ["boot", "hbt", "hbt", "xhb", "uhb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Plated Boots"];
D2JSP_ITEM_ItemList["hbt"] = ["boot", "hbt", "hbt", "xhb", "uhb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Greaves"];
//D2JSP_ITEM_ItemList["lbl"] = ["belt", "lbl", "lbl", "zlb", "ulb", "vbl", "tbl", "A", D2JSP_ITEM_CLASS_NORM, "Sash(L)"];
D2JSP_ITEM_ItemList["lbl"] = ["belt", "lbl", "lbl", "zlb", "ulc", "vbl", "tbl", "A", D2JSP_ITEM_CLASS_NORM, "Sash"];
//D2JSP_ITEM_ItemList["vbl"] = ["belt", "vbl", "vbl", "zvb", "uvb", "mbl", "hbl", "A", D2JSP_ITEM_CLASS_NORM, "Light Belt"];
D2JSP_ITEM_ItemList["vbl"] = ["belt", "vbl", "vbl", "zvb", "uvc", "mbl", "hbl", "A", D2JSP_ITEM_CLASS_NORM, "Light Belt"];
//D2JSP_ITEM_ItemList["mbl"] = ["belt", "mbl", "mbl", "zmb", "umb", "tbl", "hbl", "A", D2JSP_ITEM_CLASS_NORM, "Belt(M)"];
D2JSP_ITEM_ItemList["mbl"] = ["belt", "mbl", "mbl", "zmb", "umc", "tbl", "hbl", "A", D2JSP_ITEM_CLASS_NORM, "Belt"];
//D2JSP_ITEM_ItemList["tbl"] = ["belt", "mbl", "tbl", "ztb", "utb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Heavy Belt"];
D2JSP_ITEM_ItemList["tbl"] = ["belt", "mbl", "tbl", "ztb", "utc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Heavy Belt"];
//D2JSP_ITEM_ItemList["hbl"] = ["belt", "hbl", "hbl", "zhb", "uhb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Girdle(H)"];
D2JSP_ITEM_ItemList["hbl"] = ["belt", "hbl", "hbl", "zhb", "uhc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Plated Belt"];
D2JSP_ITEM_ItemList["bhm"] = ["helm", "bhm", "bhm", "xh9", "uh9", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Bone Helm"];
D2JSP_ITEM_ItemList["bsh"] = ["shie", "bsh", "bsh", "xsh", "ush", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Bone Shield"];
D2JSP_ITEM_ItemList["spk"] = ["shie", "spk", "spk", "xpk", "upk", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Spiked Shield"];
D2JSP_ITEM_ItemList["xap"] = ["helm", "cap", "cap", "xap", "uap", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "War Hat"];
D2JSP_ITEM_ItemList["xkp"] = ["helm", "skp", "skp", "xkp", "ukp", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Sallet"];
D2JSP_ITEM_ItemList["xlm"] = ["helm", "hlm", "hlm", "xlm", "ulm", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Casque"];
D2JSP_ITEM_ItemList["xhl"] = ["helm", "fhl", "fhl", "xhl", "uhl", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Basinet"];
D2JSP_ITEM_ItemList["xhm"] = ["helm", "ghm", "ghm", "xhm", "uhm", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Winged Helm"];
D2JSP_ITEM_ItemList["xrn"] = ["helm", "crn", "crn", "xrn", "urn", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Grand Crown"];
D2JSP_ITEM_ItemList["xsk"] = ["helm", "msk", "msk", "xsk", "usk", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Death Mask"];
D2JSP_ITEM_ItemList["xui"] = ["tors", "qlt", "qui", "xui", "uui", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Ghost Armor"];
D2JSP_ITEM_ItemList["xea"] = ["tors", "lea", "lea", "xea", "uea", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Serpentskin Armor"];
D2JSP_ITEM_ItemList["xla"] = ["tors", "hla", "hla", "xla", "ula", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Demonhide Armor"];
D2JSP_ITEM_ItemList["xtu"] = ["tors", "stu", "stu", "xtu", "utu", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Trellised Armor"];
D2JSP_ITEM_ItemList["xng"] = ["tors", "rng", "rng", "xng", "ung", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Linked Mail"];
D2JSP_ITEM_ItemList["xcl"] = ["tors", "scl", "scl", "xcl", "ucl", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Tigulated Mail"];
D2JSP_ITEM_ItemList["xhn"] = ["tors", "chn", "chn", "xhn", "uhn", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Mesh Armor"];
D2JSP_ITEM_ItemList["xrs"] = ["tors", "brs", "brs", "xrs", "urs", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Cuirass"];
D2JSP_ITEM_ItemList["xpl"] = ["tors", "spl", "spl", "xpl", "upl", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Russet Armor"];
D2JSP_ITEM_ItemList["xlt"] = ["tors", "plt", "plt", "xlt", "ult", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Templar Coat"];
D2JSP_ITEM_ItemList["xld"] = ["tors", "fld", "fld", "xld", "uld", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Sharktooth Armor"];
D2JSP_ITEM_ItemList["xth"] = ["tors", "gth", "gth", "xth", "uth", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Embossed Plate"];
D2JSP_ITEM_ItemList["xul"] = ["tors", "ful", "ful", "xul", "uul", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Chaos Armor"];
//D2JSP_ITEM_ItemList["xar"] = ["tors", "aar", "aar", "xar", "uar", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Ornate Armor"];
D2JSP_ITEM_ItemList["xar"] = ["tors", "aar", "aar", "xar", "uar", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Ornate Plate"];
D2JSP_ITEM_ItemList["xtp"] = ["tors", "ltp", "ltp", "xtp", "utp", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Mage Plate"];
D2JSP_ITEM_ItemList["xuc"] = ["shie", "buc", "buc", "xuc", "uuc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Defender"];
D2JSP_ITEM_ItemList["xml"] = ["shie", "buc", "sml", "xml", "uml", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Round Shield"];
D2JSP_ITEM_ItemList["xrg"] = ["shie", "lrg", "lrg", "xrg", "urg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Scutum"];
D2JSP_ITEM_ItemList["xit"] = ["shie", "kit", "kit", "xit", "uit", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Dragon Shield"];
D2JSP_ITEM_ItemList["xow"] = ["shie", "tow", "tow", "xow", "uow", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Pavise"];
D2JSP_ITEM_ItemList["xts"] = ["shie", "kit", "gts", "xts", "uts", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Ancient Shield"];
D2JSP_ITEM_ItemList["xlg"] = ["glov", "lgl", "lgl", "xlg", "ulg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Demonhide Gloves"];
D2JSP_ITEM_ItemList["xvg"] = ["glov", "vgl", "vgl", "xvg", "uvg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Sharkskin Gloves"];
D2JSP_ITEM_ItemList["xmg"] = ["glov", "mgl", "mgl", "xmg", "umg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Heavy Bracers"];
D2JSP_ITEM_ItemList["xtg"] = ["glov", "mgl", "tgl", "xtg", "utg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Battle Gauntlets"];
D2JSP_ITEM_ItemList["xhg"] = ["glov", "hgl", "hgl", "xhg", "uhg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "War Gauntlets"];
D2JSP_ITEM_ItemList["xlb"] = ["boot", "lbt", "lbt", "xlb", "ulb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Demonhide Boots"];
D2JSP_ITEM_ItemList["xvb"] = ["boot", "vbt", "vbt", "xvb", "uvb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Sharkskin Boots"];
D2JSP_ITEM_ItemList["xmb"] = ["boot", "mbt", "mbt", "xmb", "umb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Mesh Boots"];
D2JSP_ITEM_ItemList["xtb"] = ["boot", "mbt", "tbt", "xtb", "utb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Battle Boots"];
D2JSP_ITEM_ItemList["xhb"] = ["boot", "hbt", "hbt", "xhb", "uhb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "War Boots"];
D2JSP_ITEM_ItemList["zlb"] = ["belt", "lbl", "lbl", "zlb", "ulc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Demonhide Sash"];
D2JSP_ITEM_ItemList["zvb"] = ["belt", "vbl", "vbl", "zvb", "uvc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Sharkskin Belt"];
D2JSP_ITEM_ItemList["zmb"] = ["belt", "mbl", "mbl", "zmb", "umc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Mesh Belt"];
D2JSP_ITEM_ItemList["ztb"] = ["belt", "mbl", "tbl", "ztb", "utc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Battle Belt"];
D2JSP_ITEM_ItemList["zhb"] = ["belt", "hbl", "hbl", "zhb", "uhc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "War Belt"];
D2JSP_ITEM_ItemList["xh9"] = ["helm", "bhm", "bhm", "xh9", "uh9", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Grim Helm"];
D2JSP_ITEM_ItemList["xsh"] = ["shie", "bsh", "bsh", "xsh", "ush", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Grim Shield"];
D2JSP_ITEM_ItemList["xpk"] = ["shie", "spk", "spk", "xpk", "upk", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Barbed Shield"];
D2JSP_ITEM_ItemList["dr1"] = ["pelt", "dr1", "dr1", "dr6", "drb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Wolf Head"];
D2JSP_ITEM_ItemList["dr2"] = ["pelt", "dr4", "dr2", "dr7", "drc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Hawk Helm"];
D2JSP_ITEM_ItemList["dr3"] = ["pelt", "dr3", "dr3", "dr8", "drd", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Antlers"];
D2JSP_ITEM_ItemList["dr4"] = ["pelt", "dr4", "dr4", "dr9", "dre", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Falcon Mask"];
D2JSP_ITEM_ItemList["dr5"] = ["pelt", "dr1", "dr5", "dra", "drf", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Spirit Mask"];
D2JSP_ITEM_ItemList["ba1"] = ["phlm", "ba1", "ba1", "ba6", "bab", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Jawbone Cap"];
D2JSP_ITEM_ItemList["ba2"] = ["phlm", "ba1", "ba2", "ba7", "bac", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Fanged Helm"];
D2JSP_ITEM_ItemList["ba3"] = ["phlm", "ba3", "ba3", "ba8", "bad", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Horned Helm"];
D2JSP_ITEM_ItemList["ba4"] = ["phlm", "ba5", "ba4", "ba9", "bae", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Assault Helmet"];
D2JSP_ITEM_ItemList["ba5"] = ["phlm", "ba5", "ba5", "baa", "baf", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Avenger Guard"];
D2JSP_ITEM_ItemList["pa1"] = ["ashd", "pa1", "pa1", "pa6", "pab", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Targe"];
D2JSP_ITEM_ItemList["pa2"] = ["ashd", "pa1", "pa2", "pa7", "pac", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Rondache"];
D2JSP_ITEM_ItemList["pa3"] = ["ashd", "pa3", "pa3", "pa8", "pad", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Heraldic Shield"];
D2JSP_ITEM_ItemList["pa4"] = ["ashd", "pa3", "pa4", "pa9", "pae", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Aerin Shield"];
D2JSP_ITEM_ItemList["pa5"] = ["ashd", "pa5", "pa5", "paa", "paf", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Crown Shield"];
D2JSP_ITEM_ItemList["ne1"] = ["head", "ne1", "ne1", "ne6", "neb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Preserved Head"];
D2JSP_ITEM_ItemList["ne2"] = ["head", "ne2", "ne2", "ne7", "nec", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Zombie Head"];
D2JSP_ITEM_ItemList["ne3"] = ["head", "ne3", "ne3", "ne8", "ned", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Unraveller Head"];
D2JSP_ITEM_ItemList["ne4"] = ["head", "ne3", "ne4", "ne9", "nee", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Gargoyle Head"];
D2JSP_ITEM_ItemList["ne5"] = ["head", "ne2", "ne5", "nea", "nef", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Demon Head"];
D2JSP_ITEM_ItemList["ci0"] = ["circ", "lit", "ci0", "ci2", "ci3", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Circlet"];
D2JSP_ITEM_ItemList["ci1"] = ["circ", "lit", "ci1", "ci2", "ci3", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_NORM, "Coronet"];
D2JSP_ITEM_ItemList["ci2"] = ["circ", "lit", "ci1", "ci2", "ci3", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Tiara"];
D2JSP_ITEM_ItemList["ci3"] = ["circ", "lit", "ci1", "ci2", "ci3", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Diadem"];
D2JSP_ITEM_ItemList["uap"] = ["helm", "cap", "cap", "xap", "uap", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Shako"];
D2JSP_ITEM_ItemList["ukp"] = ["helm", "skp", "skp", "xkp", "ukp", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Hydraskull"];
D2JSP_ITEM_ItemList["ulm"] = ["helm", "hlm", "hlm", "xlm", "ulm", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Armet"];
D2JSP_ITEM_ItemList["uhl"] = ["helm", "fhl", "fhl", "xhl", "uhl", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Giant Conch"];
D2JSP_ITEM_ItemList["uhm"] = ["helm", "ghm", "ghm", "xhm", "uhm", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Spired Helm"];
D2JSP_ITEM_ItemList["urn"] = ["helm", "crn", "crn", "xrn", "urn", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Corona"];
D2JSP_ITEM_ItemList["usk"] = ["helm", "msk", "msk", "xsk", "usk", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Demonhead"];
D2JSP_ITEM_ItemList["uui"] = ["tors", "qlt", "qui", "xui", "uui", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Dusk Shroud"];
D2JSP_ITEM_ItemList["uea"] = ["tors", "lea", "lea", "xea", "uea", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Wyrmhide"];
D2JSP_ITEM_ItemList["ula"] = ["tors", "hla", "hla", "xla", "ula", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Scarab Husk"];
D2JSP_ITEM_ItemList["utu"] = ["tors", "stu", "stu", "xtu", "utu", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Wire Fleece"];
D2JSP_ITEM_ItemList["ung"] = ["tors", "rng", "rng", "xng", "ung", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Diamond Mail"];
D2JSP_ITEM_ItemList["ucl"] = ["tors", "scl", "scl", "xcl", "ucl", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Loricated Mail"];
D2JSP_ITEM_ItemList["uhn"] = ["tors", "chn", "chn", "xhn", "uhn", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Boneweave"];
D2JSP_ITEM_ItemList["urs"] = ["tors", "brs", "brs", "xrs", "urs", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Great Hauberk"];
D2JSP_ITEM_ItemList["upl"] = ["tors", "spl", "spl", "xpl", "upl", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Balrog Skin"];
//D2JSP_ITEM_ItemList["ult"] = ["tors", "plt", "plt", "xlt", "ult", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Hellforged Plate"];
D2JSP_ITEM_ItemList["ult"] = ["tors", "plt", "plt", "xlt", "ult", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Hellforge Plate"];
D2JSP_ITEM_ItemList["uld"] = ["tors", "fld", "fld", "xld", "uld", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Kraken Shell"];
D2JSP_ITEM_ItemList["uth"] = ["tors", "gth", "gth", "xth", "uth", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Lacquered Plate"];
D2JSP_ITEM_ItemList["uul"] = ["tors", "ful", "ful", "xul", "uul", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Shadow Plate"];
D2JSP_ITEM_ItemList["uar"] = ["tors", "aar", "aar", "xar", "uar", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Sacred Armor"];
D2JSP_ITEM_ItemList["utp"] = ["tors", "ltp", "ltp", "xtp", "utp", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Archon Plate"];
D2JSP_ITEM_ItemList["uuc"] = ["shie", "buc", "buc", "xuc", "uuc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Heater"];
D2JSP_ITEM_ItemList["uml"] = ["shie", "buc", "sml", "xml", "uml", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Luna"];
D2JSP_ITEM_ItemList["urg"] = ["shie", "lrg", "lrg", "xrg", "urg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Hyperion"];
D2JSP_ITEM_ItemList["uit"] = ["shie", "kit", "kit", "xit", "uit", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Monarch"];
D2JSP_ITEM_ItemList["uow"] = ["shie", "tow", "tow", "xow", "uow", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Aegis"];
D2JSP_ITEM_ItemList["uts"] = ["shie", "kit", "gts", "xts", "uts", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Ward"];
D2JSP_ITEM_ItemList["ulg"] = ["glov", "lgl", "lgl", "xlg", "ulg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Bramble Mitts"];
D2JSP_ITEM_ItemList["uvg"] = ["glov", "vgl", "vgl", "xvg", "uvg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Vampirebone Gloves"];
D2JSP_ITEM_ItemList["umg"] = ["glov", "mgl", "mgl", "xmg", "umg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Vambraces"];
D2JSP_ITEM_ItemList["utg"] = ["glov", "mgl", "tgl", "xtg", "utg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Crusader Gauntlets"];
D2JSP_ITEM_ItemList["uhg"] = ["glov", "hgl", "hgl", "xhg", "uhg", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Ogre Gauntlets"];
D2JSP_ITEM_ItemList["ulb"] = ["boot", "lbt", "lbt", "xlb", "ulb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Wyrmhide Boots"];
D2JSP_ITEM_ItemList["uvb"] = ["boot", "vbt", "vbt", "xvb", "uvb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Scarabshell Boots"];
D2JSP_ITEM_ItemList["umb"] = ["boot", "mbt", "mbt", "xmb", "umb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Boneweave Boots"];
D2JSP_ITEM_ItemList["utb"] = ["boot", "mbt", "tbt", "xtb", "utb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Mirrored Boots"];
D2JSP_ITEM_ItemList["uhb"] = ["boot", "hbt", "hbt", "xhb", "uhb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Myrmidon Greaves"];
D2JSP_ITEM_ItemList["ulc"] = ["belt", "lbl", "lbl", "zlb", "ulc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Spiderweb Sash"];
D2JSP_ITEM_ItemList["uvc"] = ["belt", "vbl", "vbl", "zvb", "uvc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Vampirefang Belt"];
D2JSP_ITEM_ItemList["umc"] = ["belt", "mbl", "mbl", "zmb", "umc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Mithril Coil"];
D2JSP_ITEM_ItemList["utc"] = ["belt", "mbl", "tbl", "ztb", "utc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Troll Belt"];
D2JSP_ITEM_ItemList["uhc"] = ["belt", "hbl", "hbl", "zhb", "uhc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Colossus Girdle"];
D2JSP_ITEM_ItemList["uh9"] = ["helm", "bhm", "bhm", "xh9", "uh9", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Bone Visage"];
D2JSP_ITEM_ItemList["ush"] = ["shie", "bsh", "bsh", "xsh", "ush", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Troll Nest"];
D2JSP_ITEM_ItemList["upk"] = ["shie", "spk", "spk", "xpk", "upk", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Blade Barrier"];
D2JSP_ITEM_ItemList["dr6"] = ["pelt", "dr1", "dr1", "dr6", "drb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Alpha Helm"];
D2JSP_ITEM_ItemList["dr7"] = ["pelt", "dr4", "dr2", "dr7", "drc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Griffon Headress"];
D2JSP_ITEM_ItemList["dr8"] = ["pelt", "dr3", "dr3", "dr8", "drd", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Hunter's Guise"];
D2JSP_ITEM_ItemList["dr9"] = ["pelt", "dr4", "dr4", "dr9", "dre", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Sacred Feathers"];
D2JSP_ITEM_ItemList["dra"] = ["pelt", "dr1", "dr5", "dra", "drf", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Totemic Mask"];
D2JSP_ITEM_ItemList["ba6"] = ["phlm", "ba1", "ba1", "ba6", "bab", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Jawbone Visor"];
D2JSP_ITEM_ItemList["ba7"] = ["phlm", "ba1", "ba2", "ba7", "bac", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Lion Helm"];
D2JSP_ITEM_ItemList["ba8"] = ["phlm", "ba3", "ba3", "ba8", "bad", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Rage Mask"];
D2JSP_ITEM_ItemList["ba9"] = ["phlm", "ba5", "ba4", "ba9", "bae", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Savage Helmet"];
D2JSP_ITEM_ItemList["baa"] = ["phlm", "ba5", "ba5", "baa", "baf", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Slayer Guard"];
D2JSP_ITEM_ItemList["pa6"] = ["ashd", "pa1", "pa1", "pa6", "pab", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Akaran Targe"];
D2JSP_ITEM_ItemList["pa7"] = ["ashd", "pa1", "pa2", "pa7", "pac", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Akaran Rondache"];
D2JSP_ITEM_ItemList["pa8"] = ["ashd", "pa3", "pa3", "pa8", "pad", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Protector Shield"];
//D2JSP_ITEM_ItemList["pa9"] = ["ashd", "pa3", "pa4", "pa9", "pae", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Guilded Shield"];
D2JSP_ITEM_ItemList["pa9"] = ["ashd", "pa3", "pa4", "pa9", "pae", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Gilded Shield"];
D2JSP_ITEM_ItemList["paa"] = ["ashd", "pa5", "pa5", "paa", "paf", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Royal Shield"];
D2JSP_ITEM_ItemList["ne6"] = ["head", "ne1", "ne1", "ne6", "neb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Mummified Trophy"];
D2JSP_ITEM_ItemList["ne7"] = ["head", "ne2", "ne2", "ne7", "nec", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Fetish Trophy"];
D2JSP_ITEM_ItemList["ne8"] = ["head", "ne3", "ne3", "ne8", "ned", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Sexton Trophy"];
D2JSP_ITEM_ItemList["ne9"] = ["head", "ne3", "ne4", "ne9", "nee", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Cantor Trophy"];
//D2JSP_ITEM_ItemList["nea"] = ["head", "ne2", "ne5", "nea", "nef", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Heirophant Trophy"];
D2JSP_ITEM_ItemList["nea"] = ["head", "ne2", "ne5", "nea", "nef", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_EXCEP, "Hierophant Trophy"];
//D2JSP_ITEM_ItemList["drb"] = ["pelt", "dr1", "dr1", "dr6", "drb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Blood Spirt"];
D2JSP_ITEM_ItemList["drb"] = ["pelt", "dr1", "dr1", "dr6", "drb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Blood Spirit"];
D2JSP_ITEM_ItemList["drc"] = ["pelt", "dr4", "dr2", "dr7", "drc", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Sun Spirit"];
D2JSP_ITEM_ItemList["drd"] = ["pelt", "dr3", "dr3", "dr8", "drd", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Earth Spirit"];
D2JSP_ITEM_ItemList["dre"] = ["pelt", "dr4", "dr4", "dr9", "dre", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Sky Spirit"];
D2JSP_ITEM_ItemList["drf"] = ["pelt", "dr1", "dr5", "dra", "drf", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Dream Spirit"];
D2JSP_ITEM_ItemList["bab"] = ["phlm", "ba1", "ba1", "ba6", "bab", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Carnage Helm"];
D2JSP_ITEM_ItemList["bac"] = ["phlm", "ba1", "ba2", "ba7", "bac", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Fury Visor"];
D2JSP_ITEM_ItemList["bad"] = ["phlm", "ba3", "ba3", "ba8", "bad", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Destroyer Helm"];
//D2JSP_ITEM_ItemList["bae"] = ["phlm", "ba5", "ba4", "ba9", "bae", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Conquerer Crown"];
D2JSP_ITEM_ItemList["bae"] = ["phlm", "ba5", "ba4", "ba9", "bae", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Conqueror Crown"];
D2JSP_ITEM_ItemList["baf"] = ["phlm", "ba5", "ba5", "baa", "baf", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Guardian Crown"];
D2JSP_ITEM_ItemList["pab"] = ["ashd", "pa1", "pa1", "pa6", "pab", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Sacred Targe"];
D2JSP_ITEM_ItemList["pac"] = ["ashd", "pa1", "pa2", "pa7", "pac", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Sacred Rondache"];
//D2JSP_ITEM_ItemList["pad"] = ["ashd", "pa3", "pa3", "pa8", "pad", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Ancient Shield"];
D2JSP_ITEM_ItemList["pad"] = ["ashd", "pa3", "pa3", "pa8", "pad", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Kurast Shield"];
D2JSP_ITEM_ItemList["pae"] = ["ashd", "pa3", "pa4", "pa9", "pae", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Zakarum Shield"];
D2JSP_ITEM_ItemList["paf"] = ["ashd", "pa5", "pa5", "paa", "paf", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Vortex Shield"];
D2JSP_ITEM_ItemList["neb"] = ["head", "ne1", "ne1", "ne6", "neb", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Minion Skull"];
D2JSP_ITEM_ItemList["nec"] = ["head", "ne2", "ne2", "ne7", "nec", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Hellspawn Skull"];
D2JSP_ITEM_ItemList["ned"] = ["head", "ne3", "ne3", "ne8", "ned", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Overseer Skull"];
//D2JSP_ITEM_ItemList["nee"] = ["head", "ne3", "ne4", "ne9", "nee", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Succubae Skull"];
D2JSP_ITEM_ItemList["nee"] = ["head", "ne3", "ne4", "ne9", "nee", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Succubus Skull"];
D2JSP_ITEM_ItemList["nef"] = ["head", "ne2", "ne5", "nea", "nef", "xxx", "xxx", "A", D2JSP_ITEM_CLASS_ELITE, "Bloodlord Skull"];
D2JSP_ITEM_ItemList["elx"] = ["elix", "elx", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "elixir"];
//D2JSP_ITEM_ItemList["hpo"] = ["hpot", "hpo", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Healing Potion"];
D2JSP_ITEM_ItemList["hpo"] = ["hpot", "hpo", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Healing Potion 0"];
//D2JSP_ITEM_ItemList["mpo"] = ["mpot", "mpo", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Mana Potion"];
D2JSP_ITEM_ItemList["mpo"] = ["mpot", "mpo", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Mana Potion 0"];
D2JSP_ITEM_ItemList["hpf"] = ["hpot", "hpo", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Full Healing Potion"];
D2JSP_ITEM_ItemList["mpf"] = ["mpot", "mpo", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Full Mana Potion"];
D2JSP_ITEM_ItemList["vps"] = ["spot", "vps", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Stamina Potion"];
D2JSP_ITEM_ItemList["yps"] = ["apot", "yps", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Antidote Potion"];
D2JSP_ITEM_ItemList["rvs"] = ["rpot", "yps", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Rejuv Potion"];
D2JSP_ITEM_ItemList["rvl"] = ["rpot", "ypl", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Full Rejuv Potion"];
D2JSP_ITEM_ItemList["wms"] = ["wpot", "yps", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Thawing Potion"];
D2JSP_ITEM_ItemList["tbk"] = ["book", "bbk", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Town Portal Book"];
D2JSP_ITEM_ItemList["ibk"] = ["book", "rbk", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Identify Book"];
D2JSP_ITEM_ItemList["amu"] = ["amul", "amu", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "amulet"];
D2JSP_ITEM_ItemList["vip"] = ["amul", "vip", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Viper Amulet"];
D2JSP_ITEM_ItemList["rin"] = ["ring", "rin", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "ring"];
D2JSP_ITEM_ItemList["gld"] = ["gold", "gld", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "gold"];
D2JSP_ITEM_ItemList["bks"] = ["ques", "bks", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Bark Scroll"];
D2JSP_ITEM_ItemList["bkd"] = ["ques", "bkd", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "deciphered Bark Scroll"];
D2JSP_ITEM_ItemList["aqv"] = ["bowq", "aqv", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Arrows"];
D2JSP_ITEM_ItemList["tch"] = ["torc", "bsh", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Torch"];
D2JSP_ITEM_ItemList["cqv"] = ["xboq", "cqv", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Bolts"];
D2JSP_ITEM_ItemList["tsc"] = ["scro", "bsc", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Town Portal Scroll"];
D2JSP_ITEM_ItemList["isc"] = ["scro", "rsc", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Identify Scroll"];
D2JSP_ITEM_ItemList["hrt"] = ["body", "hrt", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Heart"];
D2JSP_ITEM_ItemList["brz"] = ["body", "brz", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Brain"];
D2JSP_ITEM_ItemList["jaw"] = ["body", "jaw", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Jawbone"];
D2JSP_ITEM_ItemList["eyz"] = ["body", "eyz", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Eye"];
D2JSP_ITEM_ItemList["hrn"] = ["body", "hrn", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Horn"];
D2JSP_ITEM_ItemList["tal"] = ["body", "tal", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Tail"];
D2JSP_ITEM_ItemList["flg"] = ["body", "flg", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flag"];
D2JSP_ITEM_ItemList["fng"] = ["body", "fng", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Fang"];
D2JSP_ITEM_ItemList["qll"] = ["body", "qll", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Quill"];
D2JSP_ITEM_ItemList["sol"] = ["body", "sol", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Soul"];
D2JSP_ITEM_ItemList["scz"] = ["body", "scz", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Scalp"];
D2JSP_ITEM_ItemList["spe"] = ["body", "spe", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Spleen"];
D2JSP_ITEM_ItemList["key"] = ["key",  "key", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Skeleton Key"];
D2JSP_ITEM_ItemList["luv"] = ["key",  "key", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Mephisto Key"];
D2JSP_ITEM_ItemList["xyz"] = ["ques", "scr", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "scroll of self resurrect"];
D2JSP_ITEM_ItemList["j34"] = ["ques", "bks", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Jade Figurine"];
D2JSP_ITEM_ItemList["g34"] = ["ques", "bks", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Golden Bird"];
D2JSP_ITEM_ItemList["bbb"] = ["ques", "bbb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Lam Esen's Tome"];
D2JSP_ITEM_ItemList["box"] = ["ques", "rbk", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Horadric Cube"];
D2JSP_ITEM_ItemList["tr1"] = ["ques", "grg", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Horadric Scroll"];
D2JSP_ITEM_ItemList["mss"] = ["ques", "scr", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Mephisto's SoulStone"];
D2JSP_ITEM_ItemList["ass"] = ["ques", "tbk", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Book of Skill"];
D2JSP_ITEM_ItemList["qey"] = ["ques", "eyz", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Khalim's Eye"];
D2JSP_ITEM_ItemList["qhr"] = ["ques", "hrt", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Khalim's Heart"];
D2JSP_ITEM_ItemList["qbr"] = ["ques", "brz", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Khalim's Brain"];
D2JSP_ITEM_ItemList["ear"] = ["play", "ear", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Player Ear"];
D2JSP_ITEM_ItemList["gcv"] = ["gema", "gcv", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Chipped Amethyst"];
D2JSP_ITEM_ItemList["gfv"] = ["gema", "gfv", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawed Amethyst"];
D2JSP_ITEM_ItemList["gsv"] = ["gema", "gsv", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Amethyst"];
D2JSP_ITEM_ItemList["gzv"] = ["gema", "gzv", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawless Amethyst"];
D2JSP_ITEM_ItemList["gpv"] = ["gema", "gpv", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Perfect Amethyst"];
D2JSP_ITEM_ItemList["gcy"] = ["gemt", "gcy", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Chipped Topaz"];
D2JSP_ITEM_ItemList["gfy"] = ["gemt", "gfy", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawed Topaz"];
D2JSP_ITEM_ItemList["gsy"] = ["gemt", "gsy", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Topaz"];
D2JSP_ITEM_ItemList["gly"] = ["gemt", "gly", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawless Topaz"];
D2JSP_ITEM_ItemList["gpy"] = ["gemt", "gpy", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Perfect Topaz"];
//D2JSP_ITEM_ItemList["gcb"] = ["gems", "gcb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Chipped Saphire"];
D2JSP_ITEM_ItemList["gcb"] = ["gems", "gcb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Chipped Sapphire"];
//D2JSP_ITEM_ItemList["gfb"] = ["gems", "gfb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawed Saphire"];
D2JSP_ITEM_ItemList["gfb"] = ["gems", "gfb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawed Sapphire"];
//D2JSP_ITEM_ItemList["gsb"] = ["gems", "gsb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Saphire"];
D2JSP_ITEM_ItemList["gsb"] = ["gems", "gsb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Sapphire"];
//D2JSP_ITEM_ItemList["glb"] = ["gems", "glb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawless Saphire"];
D2JSP_ITEM_ItemList["glb"] = ["gems", "glb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawless Sapphire"];
//D2JSP_ITEM_ItemList["gpb"] = ["gems", "gpb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Perfect Saphire"];
D2JSP_ITEM_ItemList["gpb"] = ["gems", "gpb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Perfect Sapphire"];
D2JSP_ITEM_ItemList["gcg"] = ["geme", "gcg", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Chipped Emerald"];
D2JSP_ITEM_ItemList["gfg"] = ["geme", "gfg", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawed Emerald"];
D2JSP_ITEM_ItemList["gsg"] = ["geme", "gsg", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Emerald"];
D2JSP_ITEM_ItemList["glg"] = ["geme", "glg", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawless Emerald"];
D2JSP_ITEM_ItemList["gpg"] = ["geme", "gpg", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Perfect Emerald"];
D2JSP_ITEM_ItemList["gcr"] = ["gemr", "gcr", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Chipped Ruby"];
D2JSP_ITEM_ItemList["gfr"] = ["gemr", "gfr", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawed Ruby"];
D2JSP_ITEM_ItemList["gsr"] = ["gemr", "gsr", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Ruby"];
D2JSP_ITEM_ItemList["glr"] = ["gemr", "glr", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawless Ruby"];
D2JSP_ITEM_ItemList["gpr"] = ["gemr", "gpr", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Perfect Ruby"];
D2JSP_ITEM_ItemList["gcw"] = ["gemd", "gcw", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Chipped Diamond"];
D2JSP_ITEM_ItemList["gfw"] = ["gemd", "gfw", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawed Diamond"];
D2JSP_ITEM_ItemList["gsw"] = ["gemd", "gsw", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Diamond"];
D2JSP_ITEM_ItemList["glw"] = ["gemd", "glw", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawless Diamond"];
D2JSP_ITEM_ItemList["gpw"] = ["gemd", "gpw", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Perfect Diamond"];
//D2JSP_ITEM_ItemList["hp1"] = ["hpot", "hp1", "", "", "", "hp4", "hp5", "M", D2JSP_ITEM_CLASS_NONE, "Lesser Healing Potion"];
D2JSP_ITEM_ItemList["hp1"] = ["hpot", "hp1", "", "", "", "hp4", "hp5", "M", D2JSP_ITEM_CLASS_NONE, "Minor Healing Potion"];
D2JSP_ITEM_ItemList["hp2"] = ["hpot", "hp2", "", "", "", "hp4", "hp5", "M", D2JSP_ITEM_CLASS_NONE, "Light Healing Potion"];
D2JSP_ITEM_ItemList["hp3"] = ["hpot", "hp3", "", "", "", "hp4", "hp5", "M", D2JSP_ITEM_CLASS_NONE, "Healing Potion"];
//D2JSP_ITEM_ItemList["hp4"] = ["hpot", "hp4", "", "", "", "xxx", "hp5", "M", D2JSP_ITEM_CLASS_NONE, "Strong Healing Potion"];
D2JSP_ITEM_ItemList["hp4"] = ["hpot", "hp4", "", "", "", "xxx", "hp5", "M", D2JSP_ITEM_CLASS_NONE, "Greater Healing Potion"];
//D2JSP_ITEM_ItemList["hp5"] = ["hpot", "hp5", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Greater Healing Potion"];
D2JSP_ITEM_ItemList["hp5"] = ["hpot", "hp5", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Super Healing Potion"];
//D2JSP_ITEM_ItemList["mp1"] = ["mpot", "mp1", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Lesser Mana Potion"];
D2JSP_ITEM_ItemList["mp1"] = ["mpot", "mp1", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Minor Mana Potion"];
D2JSP_ITEM_ItemList["mp2"] = ["mpot", "mp2", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Light Mana Potion"];
D2JSP_ITEM_ItemList["mp3"] = ["mpot", "mp3", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Mana Potion"];
//D2JSP_ITEM_ItemList["mp4"] = ["mpot", "mp4", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Strong Mana Potion"];
D2JSP_ITEM_ItemList["mp4"] = ["mpot", "mp4", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Greater Mana Potion"];
//D2JSP_ITEM_ItemList["mp5"] = ["mpot", "mp5", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Greater Mana Potion"];
D2JSP_ITEM_ItemList["mp5"] = ["mpot", "mp5", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Super Mana Potion"];
D2JSP_ITEM_ItemList["skc"] = ["gemz", "skc", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Chipped Skull"];
D2JSP_ITEM_ItemList["skf"] = ["gemz", "skf", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawed Skull"];
D2JSP_ITEM_ItemList["sku"] = ["gemz", "sku", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Skull"];
D2JSP_ITEM_ItemList["skl"] = ["gemz", "skl", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Flawless Skull"];
D2JSP_ITEM_ItemList["skz"] = ["gemz", "skz", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Perfect Skull"];
D2JSP_ITEM_ItemList["hrb"] = ["herb", "hrb", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "herb"];
D2JSP_ITEM_ItemList["cm1"] = ["scha", "rld", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Charm Small"];
D2JSP_ITEM_ItemList["cm2"] = ["mcha", "rda", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Charm Medium"];
D2JSP_ITEM_ItemList["cm3"] = ["lcha", "rgd", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Charm Large"];
D2JSP_ITEM_ItemList["rps"] = ["hpot", "rps", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Small Red Potion"];
D2JSP_ITEM_ItemList["rpl"] = ["hpot", "rpl", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Large Red Potion"];
D2JSP_ITEM_ItemList["bps"] = ["mpot", "bps", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Small Blue Potion"];
D2JSP_ITEM_ItemList["bpl"] = ["mpot", "bpl", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Large Blue Potion"];
D2JSP_ITEM_ItemList["r01"] = ["rune", "r01", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "El"];
D2JSP_ITEM_ItemList["r02"] = ["rune", "r02", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Eld"];
D2JSP_ITEM_ItemList["r03"] = ["rune", "r03", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Tir"];
D2JSP_ITEM_ItemList["r04"] = ["rune", "r04", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Nef"];
D2JSP_ITEM_ItemList["r05"] = ["rune", "r05", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Eth"];
D2JSP_ITEM_ItemList["r06"] = ["rune", "r06", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Ith"];
D2JSP_ITEM_ItemList["r07"] = ["rune", "r07", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Tal"];
D2JSP_ITEM_ItemList["r08"] = ["rune", "r08", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Ral"];
D2JSP_ITEM_ItemList["r09"] = ["rune", "r09", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Ort"];
D2JSP_ITEM_ItemList["r10"] = ["rune", "r10", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Thul"];
D2JSP_ITEM_ItemList["r11"] = ["rune", "r11", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Amn"];
D2JSP_ITEM_ItemList["r12"] = ["rune", "r12", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Sol"];
D2JSP_ITEM_ItemList["r13"] = ["rune", "r13", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Shael"];
D2JSP_ITEM_ItemList["r14"] = ["rune", "r14", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Dol"];
D2JSP_ITEM_ItemList["r15"] = ["rune", "r15", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Hel"];
D2JSP_ITEM_ItemList["r16"] = ["rune", "r16", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Io"];
D2JSP_ITEM_ItemList["r17"] = ["rune", "r17", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Lum"];
D2JSP_ITEM_ItemList["r18"] = ["rune", "r18", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Ko"];
D2JSP_ITEM_ItemList["r19"] = ["rune", "r19", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Fal"];
D2JSP_ITEM_ItemList["r20"] = ["rune", "r20", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Lem"];
D2JSP_ITEM_ItemList["r21"] = ["rune", "r21", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Pul"];
D2JSP_ITEM_ItemList["r22"] = ["rune", "r22", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Um"];
D2JSP_ITEM_ItemList["r23"] = ["rune", "r23", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Mal"];
D2JSP_ITEM_ItemList["r24"] = ["rune", "r24", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Ist"];
D2JSP_ITEM_ItemList["r25"] = ["rune", "r25", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Gul"];
D2JSP_ITEM_ItemList["r26"] = ["rune", "r26", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Vex"];
D2JSP_ITEM_ItemList["r27"] = ["rune", "r27", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Ohm"];
D2JSP_ITEM_ItemList["r28"] = ["rune", "r28", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Lo"];
D2JSP_ITEM_ItemList["r29"] = ["rune", "r29", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Sur"];
D2JSP_ITEM_ItemList["r30"] = ["rune", "r30", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Ber"];
D2JSP_ITEM_ItemList["r31"] = ["rune", "r31", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Jah"];
D2JSP_ITEM_ItemList["r32"] = ["rune", "r32", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Cham"];
D2JSP_ITEM_ItemList["r33"] = ["rune", "r33", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Zod"];
D2JSP_ITEM_ItemList["jew"] = ["jewl", "gpw", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Jewel"];
D2JSP_ITEM_ItemList["ice"] = ["ques", "scr", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "ice"];
D2JSP_ITEM_ItemList["0sc"] = ["scro", "rsc", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Scroll"];
D2JSP_ITEM_ItemList["tr2"] = ["ques", "scr", "", "", "", "xxx", "xxx", "M", D2JSP_ITEM_CLASS_NONE, "Scroll of Malah"];
// ////////////////////////////////////////////////////////////////////////////
//delay(1);
//runGC();
//delay(1);

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Create an associative array in which each element is the item type code and
// the value is the array of item codes sharing that item type code...
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_ItemTypeList = new Array();
if (!D2JSP_ITEM_ItemTypeList.length) {
	// Get all the item types... Some aren't used and therefore won't be
	//	represented by items in 'D2JSP_ITEM_ItemList'...
	for (var this_prop in D2JSP_ITEMTYPE_NameToTypeList)
		D2JSP_ITEM_ItemTypeList[this_prop] = new Array();
	// Get item types used by the item codes...
	for (var this_prop in D2JSP_ITEM_ItemList)
		D2JSP_ITEM_ItemTypeList[D2JSP_ITEM_ItemList[this_prop]
			[D2JSP_ITEM_ELEMENT_ITEMTYPE]] = new Array();
	// Now populate...
	for (var this_prop in D2JSP_ITEM_ItemList)
		D2JSP_ITEM_ItemTypeList[D2JSP_ITEM_ItemList[this_prop]
			[D2JSP_ITEM_ELEMENT_ITEMTYPE]].push(this_prop);
//delay(1);
//runGC();
//delay(1);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Create an associative array in which each element is the lower-case item
// name and the value is the equivalent item code...
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_NameToCodeList = new Array();
if (!D2JSP_ITEM_NameToCodeList.length) {
	for (var this_prop in D2JSP_ITEM_ItemList)
		D2JSP_ITEM_NameToCodeList[D2JSP_ITEM_ItemList[this_prop]
			[D2JSP_ITEM_ELEMENT_NAME].toLowerCase()] = this_prop;
//delay(1);
//runGC();
//delay(1);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// The following are added as synonyms...
// ////////////////////////////////////////////////////////////////////////////
//		Quest item synonyms...
D2JSP_ITEM_NameToCodeList["right click to learn skill of your choice\nbook of skill"] =
	D2JSP_ITEM_NameToCodeList["book of skill"];
D2JSP_ITEM_NameToCodeList["scroll of horadric quest info"] =
	D2JSP_ITEM_NameToCodeList["horadric scroll"];
D2JSP_ITEM_NameToCodeList["staff of kings"]              =
	D2JSP_ITEM_NameToCodeList["staff of the kings"];
D2JSP_ITEM_NameToCodeList["shaft of the horadric staff"] =
	D2JSP_ITEM_NameToCodeList["staff of the kings"];
D2JSP_ITEM_NameToCodeList["amulet of the viper"]         =
	D2JSP_ITEM_NameToCodeList["viper amulet"];
D2JSP_ITEM_NameToCodeList["top of the horadric staff"]   =
	D2JSP_ITEM_NameToCodeList["viper amulet"];
D2JSP_ITEM_NameToCodeList["gold bird"]                   =
	D2JSP_ITEM_NameToCodeList["golden bird"];
D2JSP_ITEM_NameToCodeList["jade figure"]                 =
	D2JSP_ITEM_NameToCodeList["jade figurine"];
D2JSP_ITEM_NameToCodeList["lam esens tome"]              =
	D2JSP_ITEM_NameToCodeList["lam esen's tome"];
D2JSP_ITEM_NameToCodeList["lam esen tome"]               =
	D2JSP_ITEM_NameToCodeList["lam esen's tome"];
D2JSP_ITEM_NameToCodeList["black book"]                  =
	D2JSP_ITEM_NameToCodeList["lam esen's tome"];
D2JSP_ITEM_NameToCodeList["khalims eye"]                 =
	D2JSP_ITEM_NameToCodeList["khalim's eye"];
D2JSP_ITEM_NameToCodeList["khalimeye"]                   =
	D2JSP_ITEM_NameToCodeList["khalim's eye"];
D2JSP_ITEM_NameToCodeList["khalims heart"]               =
	D2JSP_ITEM_NameToCodeList["khalim's heart"];
D2JSP_ITEM_NameToCodeList["khalimheart"]                 =
	D2JSP_ITEM_NameToCodeList["khalim's heart"];
D2JSP_ITEM_NameToCodeList["khalims brain"]               =
	D2JSP_ITEM_NameToCodeList["khalim's brain"];
D2JSP_ITEM_NameToCodeList["khalimbrain"]                 =
	D2JSP_ITEM_NameToCodeList["khalim's brain"];
D2JSP_ITEM_NameToCodeList["khalims flail"]               =
	D2JSP_ITEM_NameToCodeList["khalim's flail"];
D2JSP_ITEM_NameToCodeList["khalimsflail"]                =
	D2JSP_ITEM_NameToCodeList["khalim's flail"];
D2JSP_ITEM_NameToCodeList["khalimflail"]                 =
	D2JSP_ITEM_NameToCodeList["khalim's flail"];
D2JSP_ITEM_NameToCodeList["superkhalimflail"]            =
	D2JSP_ITEM_NameToCodeList["khalim's will"];
D2JSP_ITEM_NameToCodeList["khalims will"]                =
	D2JSP_ITEM_NameToCodeList["khalim's will"];
D2JSP_ITEM_NameToCodeList["khalimswill"]                 =
	D2JSP_ITEM_NameToCodeList["khalim's will"];
D2JSP_ITEM_NameToCodeList["khalimwill"]                  =
	D2JSP_ITEM_NameToCodeList["khalim's will"];
D2JSP_ITEM_NameToCodeList["mephisto's soul stone"]       =
	D2JSP_ITEM_NameToCodeList["mephisto's soulstone"];
D2JSP_ITEM_NameToCodeList["mephistos soul stone"]        =
	D2JSP_ITEM_NameToCodeList["mephisto's soulstone"];
D2JSP_ITEM_NameToCodeList["mephistos soulstone"]         =
	D2JSP_ITEM_NameToCodeList["mephisto's soulstone"];
D2JSP_ITEM_NameToCodeList["mephisto soul stone"]         =
	D2JSP_ITEM_NameToCodeList["mephisto's soulstone"];
D2JSP_ITEM_NameToCodeList["mephisto soulstone"]          =
	D2JSP_ITEM_NameToCodeList["mephisto's soulstone"];
D2JSP_ITEM_NameToCodeList["soul stone"]                  =
	D2JSP_ITEM_NameToCodeList["mephisto's soulstone"];
D2JSP_ITEM_NameToCodeList["soulstone"]                   =
	D2JSP_ITEM_NameToCodeList["mephisto's soulstone"];

//		Other item synonyms...
D2JSP_ITEM_NameToCodeList["colossal sword"]              =
	D2JSP_ITEM_NameToCodeList["colossus sword"];
D2JSP_ITEM_NameToCodeList["hat"]                         =
	D2JSP_ITEM_NameToCodeList["cap"];
D2JSP_ITEM_NameToCodeList["cat/hat"]                     =
	D2JSP_ITEM_NameToCodeList["cap"];
D2JSP_ITEM_NameToCodeList["gloves(l)"]                   =
	D2JSP_ITEM_NameToCodeList["leather gloves"];
D2JSP_ITEM_NameToCodeList["gloves"]                      =
	D2JSP_ITEM_NameToCodeList["leather gloves"];
D2JSP_ITEM_NameToCodeList["bracers(m)"]                  =
	D2JSP_ITEM_NameToCodeList["chain gloves"];
D2JSP_ITEM_NameToCodeList["bracers"]                     =
	D2JSP_ITEM_NameToCodeList["chain gloves"];
D2JSP_ITEM_NameToCodeList["gaunlets(h)"]                 =
	D2JSP_ITEM_NameToCodeList["gauntlets"];
D2JSP_ITEM_NameToCodeList["gaunlets"]                    =
	D2JSP_ITEM_NameToCodeList["gauntlets"];
D2JSP_ITEM_NameToCodeList["light plate boots"]           =
	D2JSP_ITEM_NameToCodeList["light plated boots"];
D2JSP_ITEM_NameToCodeList["plate boots"]                 =
	D2JSP_ITEM_NameToCodeList["greaves"];
D2JSP_ITEM_NameToCodeList["plated boots"]                =
	D2JSP_ITEM_NameToCodeList["greaves"];
D2JSP_ITEM_NameToCodeList["sash(l)"]                     =
	D2JSP_ITEM_NameToCodeList["sash"];
D2JSP_ITEM_NameToCodeList["belt(m)"]                     =
	D2JSP_ITEM_NameToCodeList["belt"];
D2JSP_ITEM_NameToCodeList["girdle(h)"]                   =
	D2JSP_ITEM_NameToCodeList["plated belt"];
D2JSP_ITEM_NameToCodeList["girdle"]                      =
	D2JSP_ITEM_NameToCodeList["plated belt"];
D2JSP_ITEM_NameToCodeList["chipped saphire"]             =
	D2JSP_ITEM_NameToCodeList["chipped sapphire"];
D2JSP_ITEM_NameToCodeList["flawed saphire"]              =
	D2JSP_ITEM_NameToCodeList["flawed sapphire"];
D2JSP_ITEM_NameToCodeList["saphire"]                     =
	D2JSP_ITEM_NameToCodeList["sapphire"];
D2JSP_ITEM_NameToCodeList["flawless saphire"]            =
	D2JSP_ITEM_NameToCodeList["flawless sapphire"];
D2JSP_ITEM_NameToCodeList["perfect saphire"]             =
	D2JSP_ITEM_NameToCodeList["perfect sapphire"];
D2JSP_ITEM_NameToCodeList["hellforged plate"]            =
	D2JSP_ITEM_NameToCodeList["hellforge plate"];
D2JSP_ITEM_NameToCodeList["ornate armor"]                =
	D2JSP_ITEM_NameToCodeList["ornate plate"];
D2JSP_ITEM_NameToCodeList["balista"]                     =
	D2JSP_ITEM_NameToCodeList["ballista"];
D2JSP_ITEM_NameToCodeList["long siege bow"]              =
	D2JSP_ITEM_NameToCodeList["large siege bow"];
D2JSP_ITEM_NameToCodeList["espadon"]                     =
	D2JSP_ITEM_NameToCodeList["espandon"];
D2JSP_ITEM_NameToCodeList["stilleto"]                    =
	D2JSP_ITEM_NameToCodeList["stiletto"];
D2JSP_ITEM_NameToCodeList["kriss"]                       =
	D2JSP_ITEM_NameToCodeList["kris"];
D2JSP_ITEM_NameToCodeList["heirophant trophy"]           =
	D2JSP_ITEM_NameToCodeList["hierophant trophy"];
D2JSP_ITEM_NameToCodeList["guilded shield"]              =
	D2JSP_ITEM_NameToCodeList["gilded shield"];
D2JSP_ITEM_NameToCodeList["leather boots"]               =
	D2JSP_ITEM_NameToCodeList["boots"];
D2JSP_ITEM_NameToCodeList["dragon stone"]                =
	D2JSP_ITEM_NameToCodeList["jared's stone"];
D2JSP_ITEM_NameToCodeList["lochabar axe"]                =
	D2JSP_ITEM_NameToCodeList["lochaber axe"];
D2JSP_ITEM_NameToCodeList["thunder mallet"]              =
	D2JSP_ITEM_NameToCodeList["thunder maul"];
D2JSP_ITEM_NameToCodeList["silver-edged axe"]            =
	D2JSP_ITEM_NameToCodeList["silver edged axe"];
D2JSP_ITEM_NameToCodeList["shillelagh"]                  =
	D2JSP_ITEM_NameToCodeList["shillelah"];
D2JSP_ITEM_NameToCodeList["conquerer crown"]             =
	D2JSP_ITEM_NameToCodeList["conqueror crown"];
D2JSP_ITEM_NameToCodeList["blood spirt"]                 =
	D2JSP_ITEM_NameToCodeList["blood spirit"];
D2JSP_ITEM_NameToCodeList["succubae skull"]              =
	D2JSP_ITEM_NameToCodeList["succubus skull"];
D2JSP_ITEM_NameToCodeList["matriarchaljavelin"]          =
	D2JSP_ITEM_NameToCodeList["matriarchal javelin"];
// Added this as a synonym because that's how www.diabloii.net has it.
D2JSP_ITEM_NameToCodeList["full plate"]                  =
	D2JSP_ITEM_NameToCodeList["full plate mail"];

// Potion synonyms...
D2JSP_ITEM_NameToCodeList["lesser healing potion"]       =
	D2JSP_ITEM_NameToCodeList["minor healing potion"];
D2JSP_ITEM_NameToCodeList["strong healing potion"]       =
	D2JSP_ITEM_NameToCodeList["greater healing potion"];
D2JSP_ITEM_NameToCodeList["lesser mana potion"]          =
	D2JSP_ITEM_NameToCodeList["minor mana potion"];
D2JSP_ITEM_NameToCodeList["strong mana potion"]          =
	D2JSP_ITEM_NameToCodeList["greater mana potion"];

// Rune synonyms
D2JSP_ITEM_NameToCodeList["el rune"]                     =
	D2JSP_ITEM_NameToCodeList["el"];
D2JSP_ITEM_NameToCodeList["eld rune"]                    =
	D2JSP_ITEM_NameToCodeList["eld"];
D2JSP_ITEM_NameToCodeList["tir rune"]                    =
	D2JSP_ITEM_NameToCodeList["tir"];
D2JSP_ITEM_NameToCodeList["nef rune"]                    =
	D2JSP_ITEM_NameToCodeList["nef"];
D2JSP_ITEM_NameToCodeList["eth rune"]                    =
	D2JSP_ITEM_NameToCodeList["eth"];
D2JSP_ITEM_NameToCodeList["ith rune"]                    =
	D2JSP_ITEM_NameToCodeList["ith"];
D2JSP_ITEM_NameToCodeList["tal rune"]                    =
	D2JSP_ITEM_NameToCodeList["tal"];
D2JSP_ITEM_NameToCodeList["ral rune"]                    =
	D2JSP_ITEM_NameToCodeList["ral"];
D2JSP_ITEM_NameToCodeList["ort rune"]                    =
	D2JSP_ITEM_NameToCodeList["ort"];
D2JSP_ITEM_NameToCodeList["thul rune"]                   =
	D2JSP_ITEM_NameToCodeList["thul"];
D2JSP_ITEM_NameToCodeList["amn rune"]                    =
	D2JSP_ITEM_NameToCodeList["amn"];
D2JSP_ITEM_NameToCodeList["sol rune"]                    =
	D2JSP_ITEM_NameToCodeList["sol"];
D2JSP_ITEM_NameToCodeList["shael rune"]                  =
	D2JSP_ITEM_NameToCodeList["shael"];
D2JSP_ITEM_NameToCodeList["dol rune"]                    =
	D2JSP_ITEM_NameToCodeList["dol"];
D2JSP_ITEM_NameToCodeList["hel rune"]                    =
	D2JSP_ITEM_NameToCodeList["hel"];
D2JSP_ITEM_NameToCodeList["io rune"]                     =
	D2JSP_ITEM_NameToCodeList["io"];
D2JSP_ITEM_NameToCodeList["lum rune"]                    =
	D2JSP_ITEM_NameToCodeList["lum"];
D2JSP_ITEM_NameToCodeList["ko rune"]                     =
	D2JSP_ITEM_NameToCodeList["ko"];
D2JSP_ITEM_NameToCodeList["fal rune"]                    =
	D2JSP_ITEM_NameToCodeList["fal"];
D2JSP_ITEM_NameToCodeList["lem rune"]                    =
	D2JSP_ITEM_NameToCodeList["lem"];
D2JSP_ITEM_NameToCodeList["pul rune"]                    =
	D2JSP_ITEM_NameToCodeList["pul"];
D2JSP_ITEM_NameToCodeList["um rune"]                     =
	D2JSP_ITEM_NameToCodeList["um"];
D2JSP_ITEM_NameToCodeList["mal rune"]                    =
	D2JSP_ITEM_NameToCodeList["mal"];
D2JSP_ITEM_NameToCodeList["ist rune"]                    =
	D2JSP_ITEM_NameToCodeList["ist"];
D2JSP_ITEM_NameToCodeList["gul rune"]                    =
	D2JSP_ITEM_NameToCodeList["gul"];
D2JSP_ITEM_NameToCodeList["vex rune"]                    =
	D2JSP_ITEM_NameToCodeList["vex"];
D2JSP_ITEM_NameToCodeList["ohm rune"]                    =
	D2JSP_ITEM_NameToCodeList["ohm"];
D2JSP_ITEM_NameToCodeList["lo rune"]                     =
	D2JSP_ITEM_NameToCodeList["lo"];
D2JSP_ITEM_NameToCodeList["sur rune"]                    =
	D2JSP_ITEM_NameToCodeList["sur"];
D2JSP_ITEM_NameToCodeList["ber rune"]                    =
	D2JSP_ITEM_NameToCodeList["ber"];
D2JSP_ITEM_NameToCodeList["jah rune"]                    =
	D2JSP_ITEM_NameToCodeList["jah"];
D2JSP_ITEM_NameToCodeList["cham rune"]                   =
	D2JSP_ITEM_NameToCodeList["cham"];
D2JSP_ITEM_NameToCodeList["zod rune"]                    =
	D2JSP_ITEM_NameToCodeList["zod"];
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_QuestItemCodeList    = new Array();
D2JSP_ITEM_QuestItemCodeList["hdm"] = true;
D2JSP_ITEM_QuestItemCodeList["hst"] = true;
D2JSP_ITEM_QuestItemCodeList["vip"] = true;
D2JSP_ITEM_QuestItemCodeList["msf"] = true;
D2JSP_ITEM_QuestItemCodeList["bks"] = true;
D2JSP_ITEM_QuestItemCodeList["bkd"] = true;
D2JSP_ITEM_QuestItemCodeList["g33"] = true;
D2JSP_ITEM_QuestItemCodeList["j34"] = true;
D2JSP_ITEM_QuestItemCodeList["g34"] = true;
D2JSP_ITEM_QuestItemCodeList["qf1"] = true;
D2JSP_ITEM_QuestItemCodeList["qf2"] = true;
D2JSP_ITEM_QuestItemCodeList["bbb"] = true;
D2JSP_ITEM_QuestItemCodeList["box"] = true;
D2JSP_ITEM_QuestItemCodeList["tr1"] = true;
D2JSP_ITEM_QuestItemCodeList["mss"] = true;
D2JSP_ITEM_QuestItemCodeList["ass"] = true;
D2JSP_ITEM_QuestItemCodeList["qey"] = true;
D2JSP_ITEM_QuestItemCodeList["ghr"] = true;
D2JSP_ITEM_QuestItemCodeList["qbr"] = true;
D2JSP_ITEM_QuestItemCodeList["hfh"] = true;
D2JSP_ITEM_QuestItemCodeList["0sc"] = true;
D2JSP_ITEM_QuestItemCodeList["tr2"] = true;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CATEGORY_ARMOR  = 0;
var D2JSP_ITEM_CATEGORY_WEAPON = 1;
var D2JSP_ITEM_CATEGORY_MISC   = 2;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CATEGORY_MINIMUM = D2JSP_ITEM_CATEGORY_ARMOR;
var D2JSP_ITEM_CATEGORY_MAXIMUM = D2JSP_ITEM_CATEGORY_MISC;
var D2JSP_ITEM_CATEGORY_COUNT   = (D2JSP_ITEM_CATEGORY_MAXIMUM + 1);
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CatagoryToNameList = [
	"armor",
	"weapon",
	"miscellaneous"
];
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_NameToCategoryList = new Array();
D2JSP_ITEM_NameToCategoryList["armor"]         = D2JSP_ITEM_CATEGORY_ARMOR;
D2JSP_ITEM_NameToCategoryList["armors"]        = D2JSP_ITEM_CATEGORY_ARMOR;
D2JSP_ITEM_NameToCategoryList["weapon"]        = D2JSP_ITEM_CATEGORY_WEAPON;
D2JSP_ITEM_NameToCategoryList["weapons"]       = D2JSP_ITEM_CATEGORY_WEAPON;
D2JSP_ITEM_NameToCategoryList["miscellaneous"] = D2JSP_ITEM_CATEGORY_MISC;
D2JSP_ITEM_NameToCategoryList["misc"]          = D2JSP_ITEM_CATEGORY_MISC;
D2JSP_ITEM_NameToCategoryList["miscell"]       = D2JSP_ITEM_CATEGORY_MISC;
D2JSP_ITEM_NameToCategoryList["miscellan"]     = D2JSP_ITEM_CATEGORY_MISC;
D2JSP_ITEM_NameToCategoryList["other"]         = D2JSP_ITEM_CATEGORY_MISC;
D2JSP_ITEM_NameToCategoryList["others"]        = D2JSP_ITEM_CATEGORY_MISC;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Create an associative array in which each element corresponds to an item
// category (weapon, armor, or miscellaneous) and contains an array of item
// codes which are in that category.
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CategoryToCodeList                         = new Array();
D2JSP_ITEM_CategoryToCodeList[D2JSP_ITEM_CATEGORY_ARMOR]  = new Array();
D2JSP_ITEM_CategoryToCodeList[D2JSP_ITEM_CATEGORY_WEAPON] = new Array();
D2JSP_ITEM_CategoryToCodeList[D2JSP_ITEM_CATEGORY_MISC]   = new Array();
for (this_prop in D2JSP_ITEM_ItemList) {
	tmp_cate = D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_CATEGORY];
	if (tmp_cate == "A")
		D2JSP_ITEM_CategoryToCodeList[D2JSP_ITEM_CATEGORY_ARMOR].push(this_prop);
	else if (tmp_cate == "W")
		D2JSP_ITEM_CategoryToCodeList[D2JSP_ITEM_CATEGORY_WEAPON].push(this_prop);
	else if (tmp_cate == "M")
		D2JSP_ITEM_CategoryToCodeList[D2JSP_ITEM_CATEGORY_MISC].push(this_prop);
}
delete this_prop;
delete tmp_cate;
//delay(10);
//runGC();
//delay(10);
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
/*
	Differences from the MPQ files:

	* The unique for item code 8lw is spelled 'Godstrike Arch' in the MPQ, but
	'Goldstrike Arch' in-game. It's been changed and a synonym created.

	* The unique for item code 8mx is spelled 'Pus Spiter' in the MPQ, but
	'Pus Spitter' in-game. It's been changed and a synonym created.

	* The unique for item code 8s8 is spelled 'Whichwild String' in the MPQ, but
	'Witchwild String' in-game. It's been changed and a synonym created.

	* The unique for item code 8ws is spelled 'Skullcollector' in the MPQ, but
	'Skull Collector' in-game. It's been changed and a synonym created.

	* The unique for item code 9gi is spelled 'The Minataur' in the MPQ, but
	'The Minotaur' in-game. It's been changed and a synonym created.

	* The unique for item code 9tw is spelled 'Cutthroat' in the MPQ, but
	'Bartuc's Cut-Throat' in-game. It's been changed and a synonym created.

	* The unique for item code 9mp is spelled 'Pompe's Wrath' in the MPQ, but
	'Pompeii's Wrath' in-game. It's been changed and a synonym created.

	* The unique for item code 9wd is spelled 'The Atlantian' in the MPQ, but
	'The Atlantean' in-game. It's been changed and a synonym created.

	* The unique for item code aar is spelled 'Victors Silk' in the MPQ, but
	'Silks of the Victor' in-game. It's been changed and a synonym created.

	* The unique for item code bar is spelled 'Dimoaks Hew' in the MPQ, but
	'Dimoak's Hew' in-game. It's been changed and a synonym created.

	* The unique for item code bld is spelled 'Irices Shard' in the MPQ, but
	'Spectral Shard' in-game. It's been changed and a synonym created.

	* The unique for item code brs is spelled 'Venomsward' in the MPQ, but
	'Venom Ward' in-game. It's been changed and a synonym created.

	* The unique for item code bsd is spelled 'Griswolds Edge' in the MPQ, but
	'Griswold's Edge' in-game. It's been changed and a synonym created.

	* The unique for item code btx is spelled 'The Chieftan' in the MPQ, but
	'The Chieftain' in-game. It's been changed and a synonym created.

	* The unique for item code cap is spelled 'War Bonnet' in the MPQ, but
	'Biggin's Bonnet' in-game. It's been changed and a synonym created.

	* The unique for item code cbw is spelled 'Piercerib' in the MPQ, but
	'Rogue's Bow' in-game. It's been changed and a synonym created.

	* The unique for item code cst is spelled 'Lazarus Spire' in the MPQ, but
	'Spire of Lazarus' in-game. It's been changed and a synonym created.

	* The unique for item code fla is spelled 'The Generals Tan Do Li Ga' in the
	MPQ, but 'The General's Tan Do Li Ga' in-game. It's been changed and a
	synonym created.

	* The unique for item code gis is spelled 'Kinemils Awl' in the MPQ, but
	'Kinemil's Awl' in-game. It's been changed and a synonym created.

	* The unique for item code gwn is spelled 'Umes Lament' in the MPQ, but
	'Ume's Lament' in-game. It's been changed and a synonym created.

	* The unique for item code lax is spelled 'Fechmars Axe' in the MPQ, but
	'Axe of Fechmar' in-game. It's been changed and a synonym created.

	* The unique for item code lbl is spelled 'Lenyms Cord' in the MPQ, but
	'Lenymo' in-game. It's been changed and a synonym created.

	* The unique for item code lea is spelled 'Blinkbats Form' in the MPQ, but
	'Blinkbat's Form' in-game. It's been changed and a synonym created.

	* The unique for item code mau is spelled 'Bonesob' in the MPQ, but
	'Bonesnap' in-game. It's been changed and a synonym created.

	* The unique for item code mpi is spelled 'Mindrend' in the MPQ, but
	'Skull Splitter' in-game. It's been changed and a synonym created.

	* The unique for item code rxb is spelled 'Doomspittle' in the MPQ, but
	'Doomslinger' in-game. It's been changed and a synonym created.

	* The unique for item code sbb is spelled 'Pullspite' in the MPQ, but
	'Stormstrike' in-game. It's been changed and a synonym created.

	* The unique for item code sbr is spelled 'Krintizs Skewer' in the MPQ, but
	'Skewer of Krintiz' in-game. It's been changed and a synonym created.

	* The unique for item code ssd is spelled 'Rixots Keen' in the MPQ, but
	'Rixot's Keen' in-game. It's been changed and a synonym created.

	* The unique for item code wnd is spelled 'Iros Torch' in the MPQ, but
	'Torch of Iro' in-game. It's been changed and a synonym created.

	* The unique for item code wsd is spelled 'Culwens Point' in the MPQ, but
	'Culwen's Point' in-game. It's been changed and a synonym created.

	* The unique for item code xap is spelled 'Peasent Crown' in the MPQ, but
	'Peasant Crown' in-game. It's been changed and a synonym created.

	* The unique for item code xhb is spelled 'Gorerider' in the MPQ, but
	'Gore Rider' in-game. It's been changed and a synonym created.

	* The unique for item code xhm is spelled 'Valkiry Wing' in the MPQ, but
	'Gore Rider' in-game. It's been changed and a synonym created.

	* The unique for item code xml is spelled 'Mosers Blessed Circle' in the
	MPQ, but 'Moser's Blessed Circle' in-game. It's been changed and a synonym
	created.

	* The unique for item code xng is spelled 'Spiritforge' in the MPQ, but
	'Spirit Forge' in-game. It's been changed and a synonym created.

	* The unique for item code xtb is spelled 'Wartraveler' in the MPQ, but
	'War Traveler' in-game. It's been changed and a synonym created.

	* The unique for item code xtg is spelled 'Lavagout' in the MPQ, but
	'Lava Gout' in-game. It's been changed and a synonym created.

	* The unique for item code xtp is spelled 'Que-Hegan's Wisdon' in the MPQ,
	but 'Que-Hegan's Wisdom' in-game. It's been changed and a synonym created.

	* The unique for item code xtu is spelled 'Ironpelt' in the MPQ, but
	'Iron Pelt' in-game. It's been changed and a synonym created.

	* The unique for item code ywn is spelled 'Maelstromwrath' in the MPQ, but
	'Maelstrom' in-game. It's been changed and a synonym created.

	* The unique for item code zhb is spelled 'Thudergod's Vigor' in the MPQ,
	but 'Thundergod's Vigor' in-game. It's been changed and a synonym created.

	* The unique for item code zmb is spelled 'Gloomstrap' in the MPQ,
	but 'Gloom's Trap' in-game. It's been changed and a synonym created.

	* The unique for item code xow is spelled 'Kerke's Sanctuary' in the MPQ,
	but 'Gerke's Sanctuary' in-game. It's been changed and a synonym created.

	* The unique for item code xts is spelled 'Radimant's Sphere' in the MPQ,
	but 'Radament's Sphere' in-game. It's been changed and a synonym created.

	* The unique for item code xla is spelled 'Skin of the Flayerd One' in the
	MPQ, but 'Skin of the Flayed One' in-game. It's been changed and a synonym
	created.

	* The unique for item code lbw is spelled 'Rimeraven' in the MPQ, but
	'Raven Claw' in-game. It's been changed and a synonym created.

*/
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_UniqueList = new Array();
	// Classic
D2JSP_ITEM_UniqueList["hax"] = "The Gnasher";
D2JSP_ITEM_UniqueList["axe"] = "Deathspade";
D2JSP_ITEM_UniqueList["2ax"] = "Bladebone";
//D2JSP_ITEM_UniqueList["mpi"] = "Mindrend";
D2JSP_ITEM_UniqueList["mpi"] = "Skull Splitter";
D2JSP_ITEM_UniqueList["wax"] = "Rakescar";
//D2JSP_ITEM_UniqueList["lax"] = "Fechmars Axe";
D2JSP_ITEM_UniqueList["lax"] = "Axe of Fechmar";
D2JSP_ITEM_UniqueList["bax"] = "Goreshovel";
//D2JSP_ITEM_UniqueList["btx"] = "The Chieftan";
D2JSP_ITEM_UniqueList["btx"] = "The Chieftain";
D2JSP_ITEM_UniqueList["gax"] = "Brainhew";
D2JSP_ITEM_UniqueList["gix"] = "The Humongous";
//D2JSP_ITEM_UniqueList["wnd"] = "Iros Torch";
D2JSP_ITEM_UniqueList["wnd"] = "Torch of Iro";
//D2JSP_ITEM_UniqueList["ywn"] = "Maelstromwrath";
D2JSP_ITEM_UniqueList["ywn"] = "Maelstrom";
D2JSP_ITEM_UniqueList["bwn"] = "Gravenspine";
//D2JSP_ITEM_UniqueList["gwn"] = "Umes Lament";
D2JSP_ITEM_UniqueList["gwn"] = "Ume's Lament";
D2JSP_ITEM_UniqueList["clb"] = "Felloak";
D2JSP_ITEM_UniqueList["scp"] = "Knell Striker";
D2JSP_ITEM_UniqueList["gsc"] = "Rusthandle";
D2JSP_ITEM_UniqueList["wsp"] = "Stormeye";
D2JSP_ITEM_UniqueList["spc"] = "Stoutnail";
D2JSP_ITEM_UniqueList["mac"] = "Crushflange";
D2JSP_ITEM_UniqueList["mst"] = "Bloodrise";
//D2JSP_ITEM_UniqueList["fla"] = "The Generals Tan Do Li Ga";
D2JSP_ITEM_UniqueList["fla"] = "The General's Tan Do Li Ga";
D2JSP_ITEM_UniqueList["whm"] = "Ironstone";
//D2JSP_ITEM_UniqueList["mau"] = "Bonesob";
D2JSP_ITEM_UniqueList["mau"] = "Bonesnap";
D2JSP_ITEM_UniqueList["gma"] = "Steeldriver";
//D2JSP_ITEM_UniqueList["ssd"] = "Rixots Keen";
D2JSP_ITEM_UniqueList["ssd"] = "Rixot's Keen";
D2JSP_ITEM_UniqueList["scm"] = "Blood Crescent";
//D2JSP_ITEM_UniqueList["sbr"] = "Krintizs Skewer";
D2JSP_ITEM_UniqueList["sbr"] = "Skewer of Krintiz";
D2JSP_ITEM_UniqueList["flc"] = "Gleamscythe";
D2JSP_ITEM_UniqueList["crs"] = "Azurewrath";
//D2JSP_ITEM_UniqueList["bsd"] = "Griswolds Edge";
D2JSP_ITEM_UniqueList["bsd"] = "Griswold's Edge";
D2JSP_ITEM_UniqueList["lsd"] = "Hellplague";
//D2JSP_ITEM_UniqueList["wsd"] = "Culwens Point";
D2JSP_ITEM_UniqueList["wsd"] = "Culwen's Point";
D2JSP_ITEM_UniqueList["2hs"] = "Shadowfang";
D2JSP_ITEM_UniqueList["clm"] = "Soulflay";
//D2JSP_ITEM_UniqueList["gis"] = "Kinemils Awl";
D2JSP_ITEM_UniqueList["gis"] = "Kinemil's Awl";
D2JSP_ITEM_UniqueList["bsw"] = "Blacktongue";
D2JSP_ITEM_UniqueList["flb"] = "Ripsaw";
D2JSP_ITEM_UniqueList["gsd"] = "The Patriarch";
D2JSP_ITEM_UniqueList["dgr"] = "Gull";
D2JSP_ITEM_UniqueList["dir"] = "The Diggler";
D2JSP_ITEM_UniqueList["kri"] = "The Jade Tan Do";
//D2JSP_ITEM_UniqueList["bld"] = "Irices Shard";
D2JSP_ITEM_UniqueList["bld"] = "Spectral Shard";
D2JSP_ITEM_UniqueList["spr"] = "The Dragon Chang";
D2JSP_ITEM_UniqueList["tri"] = "Razortine";
D2JSP_ITEM_UniqueList["brn"] = "Bloodthief";
D2JSP_ITEM_UniqueList["spt"] = "Lance of Yaggai";
D2JSP_ITEM_UniqueList["pik"] = "The Tannr Gorerod";
//D2JSP_ITEM_UniqueList["bar"] = "Dimoaks Hew";
D2JSP_ITEM_UniqueList["bar"] = "Dimoak's Hew";
D2JSP_ITEM_UniqueList["vou"] = "Steelgoad";
D2JSP_ITEM_UniqueList["scy"] = "Soul Harvest";
D2JSP_ITEM_UniqueList["pax"] = "The Battlebranch";
D2JSP_ITEM_UniqueList["hal"] = "Woestave";
D2JSP_ITEM_UniqueList["wsc"] = "The Grim Reaper";
D2JSP_ITEM_UniqueList["sst"] = "Bane Ash";
D2JSP_ITEM_UniqueList["lst"] = "Serpent Lord";
//D2JSP_ITEM_UniqueList["cst"] = "Lazarus Spire";
D2JSP_ITEM_UniqueList["cst"] = "Spire of Lazarus";
D2JSP_ITEM_UniqueList["bst"] = "The Salamander";
D2JSP_ITEM_UniqueList["wst"] = "The Iron Jang Bong";
D2JSP_ITEM_UniqueList["sbw"] = "Pluckeye";
D2JSP_ITEM_UniqueList["hbw"] = "Witherstring";
//D2JSP_ITEM_UniqueList["lbw"] = "Rimeraven";
D2JSP_ITEM_UniqueList["lbw"] = "Raven Claw";
//D2JSP_ITEM_UniqueList["cbw"] = "Piercerib";
D2JSP_ITEM_UniqueList["cbw"] = "Rogue's Bow";
//D2JSP_ITEM_UniqueList["sbb"] = "Pullspite";
D2JSP_ITEM_UniqueList["sbb"] = "Stormstrike";
D2JSP_ITEM_UniqueList["lbb"] = "Wizendraw";
D2JSP_ITEM_UniqueList["swb"] = "Hellclap";
D2JSP_ITEM_UniqueList["lwb"] = "Blastbark";
D2JSP_ITEM_UniqueList["lxb"] = "Leadcrow";
D2JSP_ITEM_UniqueList["mxb"] = "Ichorsting";
D2JSP_ITEM_UniqueList["hxb"] = "Hellcast";
//D2JSP_ITEM_UniqueList["rxb"] = "Doomspittle";
D2JSP_ITEM_UniqueList["rxb"] = "Doomslinger";
//D2JSP_ITEM_UniqueList["cap"] = "War Bonnet";
D2JSP_ITEM_UniqueList["cap"] = "Biggin's Bonnet";
D2JSP_ITEM_UniqueList["skp"] = "Tarnhelm";
D2JSP_ITEM_UniqueList["hlm"] = "Coif of Glory";
D2JSP_ITEM_UniqueList["fhl"] = "Duskdeep";
D2JSP_ITEM_UniqueList["bhm"] = "Wormskull";
D2JSP_ITEM_UniqueList["ghm"] = "Howltusk";
D2JSP_ITEM_UniqueList["crn"] = "Undead Crown";
D2JSP_ITEM_UniqueList["msk"] = "The Face of Horror";
D2JSP_ITEM_UniqueList["qui"] = "Greyform";
//D2JSP_ITEM_UniqueList["lea"] = "Blinkbats Form";
D2JSP_ITEM_UniqueList["lea"] = "Blinkbat's Form";
D2JSP_ITEM_UniqueList["hla"] = "The Centurion";
D2JSP_ITEM_UniqueList["stu"] = "Twitchthroe";
D2JSP_ITEM_UniqueList["rng"] = "Darkglow";
D2JSP_ITEM_UniqueList["scl"] = "Hawkmail";
D2JSP_ITEM_UniqueList["chn"] = "Sparking Mail";
//D2JSP_ITEM_UniqueList["brs"] = "Venomsward";
D2JSP_ITEM_UniqueList["brs"] = "Venom Ward";
D2JSP_ITEM_UniqueList["spl"] = "Iceblink";
D2JSP_ITEM_UniqueList["plt"] = "Boneflesh";
D2JSP_ITEM_UniqueList["fld"] = "Rockfleece";
D2JSP_ITEM_UniqueList["gth"] = "Rattlecage";
D2JSP_ITEM_UniqueList["ful"] = "Goldskin";
//D2JSP_ITEM_UniqueList["aar"] = "Victors Silk";
D2JSP_ITEM_UniqueList["aar"] = "Silks of the Victor";
D2JSP_ITEM_UniqueList["ltp"] = "Heavenly Garb";
D2JSP_ITEM_UniqueList["buc"] = "Pelta Lunata";
D2JSP_ITEM_UniqueList["sml"] = "Umbral Disk";
D2JSP_ITEM_UniqueList["lrg"] = "Stormguild";
D2JSP_ITEM_UniqueList["bsh"] = "Wall of the Eyeless";
D2JSP_ITEM_UniqueList["spk"] = "Swordback Hold";
D2JSP_ITEM_UniqueList["kit"] = "Steelclash";
D2JSP_ITEM_UniqueList["tow"] = "Bverrit Keep";
D2JSP_ITEM_UniqueList["gts"] = "The Ward";
D2JSP_ITEM_UniqueList["lgl"] = "The Hand of Broc";
D2JSP_ITEM_UniqueList["vgl"] = "Bloodfist";
D2JSP_ITEM_UniqueList["mgl"] = "Chance Guards";
D2JSP_ITEM_UniqueList["tgl"] = "Magefist";
D2JSP_ITEM_UniqueList["hgl"] = "Frostburn";
D2JSP_ITEM_UniqueList["lbt"] = "Hotspur";
D2JSP_ITEM_UniqueList["vbt"] = "Gorefoot";
D2JSP_ITEM_UniqueList["mbt"] = "Treads of Cthon";
D2JSP_ITEM_UniqueList["tbt"] = "Goblin Toe";
D2JSP_ITEM_UniqueList["hbt"] = "Tearhaunch";
//D2JSP_ITEM_UniqueList["lbl"] = "Lenyms Cord";
D2JSP_ITEM_UniqueList["lbl"] = "Lenymo";
D2JSP_ITEM_UniqueList["vbl"] = "Snakecord";
D2JSP_ITEM_UniqueList["mbl"] = "Nightsmoke";
D2JSP_ITEM_UniqueList["tbl"] = "Goldwrap";
D2JSP_ITEM_UniqueList["hbl"] = "Bladebuckle";
D2JSP_ITEM_UniqueList["amu"] = "Nokozan Relic";
D2JSP_ITEM_UniqueList["amu"] = "The Eye of Etlich";
D2JSP_ITEM_UniqueList["amu"] = "The Mahim-Oak Curio";
D2JSP_ITEM_UniqueList["rin"] = "Nagelring";
D2JSP_ITEM_UniqueList["rin"] = "Manald Heal";
D2JSP_ITEM_UniqueList["rin"] = "The Stone of Jordan";
D2JSP_ITEM_UniqueList["vip"] = "Amulet of the Viper";
D2JSP_ITEM_UniqueList["msf"] = "Staff of Kings";
D2JSP_ITEM_UniqueList["hst"] = "Horadric Staff";
D2JSP_ITEM_UniqueList["hfh"] = "Hell Forge Hammer";
D2JSP_ITEM_UniqueList["qf1"] = "KhalimFlail";
D2JSP_ITEM_UniqueList["qf2"] = "SuperKhalimFlail";
	// Expansion
D2JSP_ITEM_UniqueList["9ha"] = "Coldkill";
D2JSP_ITEM_UniqueList["9ax"] = "Butcher's Pupil";
D2JSP_ITEM_UniqueList["92a"] = "Islestrike";
//D2JSP_ITEM_UniqueList["9mp"] = "Pompe's Wrath";
D2JSP_ITEM_UniqueList["9mp"] = "Pompeii's Wrath";
D2JSP_ITEM_UniqueList["9wa"] = "Guardian Naga";
D2JSP_ITEM_UniqueList["9la"] = "Warlord's Trust";
D2JSP_ITEM_UniqueList["9ba"] = "Spellsteel";
D2JSP_ITEM_UniqueList["9bt"] = "Stormrider";
D2JSP_ITEM_UniqueList["9ga"] = "Boneslayer Blade";
//D2JSP_ITEM_UniqueList["9gi"] = "The Minataur";
D2JSP_ITEM_UniqueList["9gi"] = "The Minotaur";
D2JSP_ITEM_UniqueList["9wn"] = "Suicide Branch";
D2JSP_ITEM_UniqueList["9yw"] = "Carin Shard";
D2JSP_ITEM_UniqueList["9bw"] = "Arm of King Leoric";
D2JSP_ITEM_UniqueList["9gw"] = "Blackhand Key";
D2JSP_ITEM_UniqueList["9cl"] = "Dark Clan Crusher";
D2JSP_ITEM_UniqueList["9sc"] = "Zakarum's Hand";
D2JSP_ITEM_UniqueList["9qs"] = "The Fetid Sprinkler";
D2JSP_ITEM_UniqueList["9ws"] = "Hand of Blessed Light";
D2JSP_ITEM_UniqueList["9sp"] = "Fleshrender";
D2JSP_ITEM_UniqueList["9ma"] = "Sureshrill Frost";
D2JSP_ITEM_UniqueList["9mt"] = "Moonfall";
D2JSP_ITEM_UniqueList["9fl"] = "Baezil's Vortex";
D2JSP_ITEM_UniqueList["9wh"] = "Earthshaker";
D2JSP_ITEM_UniqueList["9m9"] = "Bloodtree Stump";
D2JSP_ITEM_UniqueList["9gm"] = "The Gavel of Pain";
D2JSP_ITEM_UniqueList["9ss"] = "Bloodletter";
D2JSP_ITEM_UniqueList["9sm"] = "Coldsteel Eye";
D2JSP_ITEM_UniqueList["9sb"] = "Hexfire";
D2JSP_ITEM_UniqueList["9fc"] = "Blade of Ali Baba";
D2JSP_ITEM_UniqueList["9cr"] = "Ginther's Rift";
D2JSP_ITEM_UniqueList["9bs"] = "Headstriker";
D2JSP_ITEM_UniqueList["9ls"] = "Plague Bearer";
//D2JSP_ITEM_UniqueList["9wd"] = "The Atlantian";
D2JSP_ITEM_UniqueList["9wd"] = "The Atlantean";
D2JSP_ITEM_UniqueList["92h"] = "Crainte Vomir";
D2JSP_ITEM_UniqueList["9cm"] = "Bing Sz Wang";
D2JSP_ITEM_UniqueList["9gs"] = "The Vile Husk";
D2JSP_ITEM_UniqueList["9b9"] = "Cloudcrack";
D2JSP_ITEM_UniqueList["9fb"] = "Todesfaelle Flamme";
D2JSP_ITEM_UniqueList["9gd"] = "Swordguard";
D2JSP_ITEM_UniqueList["9dg"] = "Spineripper";
D2JSP_ITEM_UniqueList["9di"] = "Heart Carver";
D2JSP_ITEM_UniqueList["9kr"] = "Blackbog's Sharp";
D2JSP_ITEM_UniqueList["9bl"] = "Stormspike";
D2JSP_ITEM_UniqueList["9sr"] = "The Impaler";
D2JSP_ITEM_UniqueList["9tr"] = "Kelpie Snare";
D2JSP_ITEM_UniqueList["9br"] = "Soulfeast Tine";
D2JSP_ITEM_UniqueList["9st"] = "Hone Sundan";
D2JSP_ITEM_UniqueList["9p9"] = "Spire of Honor";
D2JSP_ITEM_UniqueList["9b7"] = "The Meat Scraper";
D2JSP_ITEM_UniqueList["9vo"] = "Blackleach Blade";
D2JSP_ITEM_UniqueList["9s8"] = "Athena's Wrath";
D2JSP_ITEM_UniqueList["9pa"] = "Pierre Tombale Couant";
D2JSP_ITEM_UniqueList["9h9"] = "Husoldal Evo";
D2JSP_ITEM_UniqueList["9wc"] = "Grim's Burning Dead";
D2JSP_ITEM_UniqueList["8ss"] = "Razorswitch";
D2JSP_ITEM_UniqueList["8ls"] = "Ribcracker";
D2JSP_ITEM_UniqueList["8cs"] = "Chromatic Ire";
D2JSP_ITEM_UniqueList["8bs"] = "Warpspear";
//D2JSP_ITEM_UniqueList["8ws"] = "Skullcollector";
D2JSP_ITEM_UniqueList["8ws"] = "Skull Collector";
D2JSP_ITEM_UniqueList["8sb"] = "Skystrike";
D2JSP_ITEM_UniqueList["8hb"] = "Riphook";
D2JSP_ITEM_UniqueList["8lb"] = "Kuko Shakaku";
D2JSP_ITEM_UniqueList["8cb"] = "Endlesshail";
//D2JSP_ITEM_UniqueList["8s8"] = "Whichwild String";
D2JSP_ITEM_UniqueList["8s8"] = "Witchwild String";
D2JSP_ITEM_UniqueList["8l8"] = "Cliffkiller";
D2JSP_ITEM_UniqueList["8sw"] = "Magewrath";
//D2JSP_ITEM_UniqueList["8lw"] = "Godstrike Arch";
D2JSP_ITEM_UniqueList["8lw"] = "Goldstrike Arch";
D2JSP_ITEM_UniqueList["8lx"] = "Langer Briser";
//D2JSP_ITEM_UniqueList["8mx"] = "Pus Spiter";
D2JSP_ITEM_UniqueList["8mx"] = "Pus Spitter";
D2JSP_ITEM_UniqueList["8hx"] = "Buriza-Do Kyanon";
D2JSP_ITEM_UniqueList["8rx"] = "Demon Machine";
	// Expansion Armor
//D2JSP_ITEM_UniqueList["xap"] = "Peasent Crown";
D2JSP_ITEM_UniqueList["xap"] = "Peasant Crown";
D2JSP_ITEM_UniqueList["xkp"] = "Rockstopper";
D2JSP_ITEM_UniqueList["xlm"] = "Stealskull";
D2JSP_ITEM_UniqueList["xhl"] = "Darksight Helm";
//D2JSP_ITEM_UniqueList["xhm"] = "Valkiry Wing";
D2JSP_ITEM_UniqueList["xhm"] = "Valkyrie Wing";
D2JSP_ITEM_UniqueList["xrn"] = "Crown of Thieves";
D2JSP_ITEM_UniqueList["xsk"] = "Blackhorn's Face";
D2JSP_ITEM_UniqueList["xh9"] = "Vampiregaze";
D2JSP_ITEM_UniqueList["xui"] = "The Spirit Shroud";
D2JSP_ITEM_UniqueList["xea"] = "Skin of the Vipermagi";
//D2JSP_ITEM_UniqueList["xla"] = "Skin of the Flayerd One";
D2JSP_ITEM_UniqueList["xla"] = "Skin of the Flayed One";
//D2JSP_ITEM_UniqueList["xtu"] = "Ironpelt";
D2JSP_ITEM_UniqueList["xtu"] = "Iron Pelt";
//D2JSP_ITEM_UniqueList["xng"] = "Spiritforge";
D2JSP_ITEM_UniqueList["xng"] = "Spirit Forge";
D2JSP_ITEM_UniqueList["xcl"] = "Crow Caw";
D2JSP_ITEM_UniqueList["xhn"] = "Shaftstop";
D2JSP_ITEM_UniqueList["xrs"] = "Duriel's Shell";
D2JSP_ITEM_UniqueList["xpl"] = "Skullder's Ire";
D2JSP_ITEM_UniqueList["xlt"] = "Guardian Angel";
D2JSP_ITEM_UniqueList["xld"] = "Toothrow";
D2JSP_ITEM_UniqueList["xth"] = "Atma's Wail";
D2JSP_ITEM_UniqueList["xul"] = "Black Hades";
D2JSP_ITEM_UniqueList["xar"] = "Corpsemourn";
//D2JSP_ITEM_UniqueList["xtp"] = "Que-Hegan's Wisdon";
D2JSP_ITEM_UniqueList["xtp"] = "Que-Hegan's Wisdom";
D2JSP_ITEM_UniqueList["xuc"] = "Visceratuant";
//D2JSP_ITEM_UniqueList["xml"] = "Mosers Blessed Circle";
D2JSP_ITEM_UniqueList["xml"] = "Moser's Blessed Circle";
D2JSP_ITEM_UniqueList["xrg"] = "Stormchaser";
D2JSP_ITEM_UniqueList["xit"] = "Tiamat's Rebuke";
//D2JSP_ITEM_UniqueList["xow"] = "Kerke's Sanctuary";
D2JSP_ITEM_UniqueList["xow"] = "Gerke's Sanctuary";
//D2JSP_ITEM_UniqueList["xts"] = "Radimant's Sphere";
D2JSP_ITEM_UniqueList["xts"] = "Radament's Sphere";
D2JSP_ITEM_UniqueList["xsh"] = "Lidless Wall";
D2JSP_ITEM_UniqueList["xpk"] = "Lance Guard";
D2JSP_ITEM_UniqueList["xlg"] = "Venom Grip";
D2JSP_ITEM_UniqueList["xvg"] = "Gravepalm";
D2JSP_ITEM_UniqueList["xmg"] = "Ghoulhide";
//D2JSP_ITEM_UniqueList["xtg"] = "Lavagout";
D2JSP_ITEM_UniqueList["xtg"] = "Lava Gout";
D2JSP_ITEM_UniqueList["xhg"] = "Hellmouth";
D2JSP_ITEM_UniqueList["xlb"] = "Infernostride";
D2JSP_ITEM_UniqueList["xvb"] = "Waterwalk";
D2JSP_ITEM_UniqueList["xmb"] = "Silkweave";
//D2JSP_ITEM_UniqueList["xtb"] = "Wartraveler";
D2JSP_ITEM_UniqueList["xtb"] = "War Traveler";
//D2JSP_ITEM_UniqueList["xhb"] = "Gorerider";
D2JSP_ITEM_UniqueList["xhb"] = "Gore Rider";
D2JSP_ITEM_UniqueList["zlb"] = "String of Ears";
D2JSP_ITEM_UniqueList["zvb"] = "Razortail";
//D2JSP_ITEM_UniqueList["zmb"] = "Gloomstrap";
D2JSP_ITEM_UniqueList["zmb"] = "Gloom's Trap";
D2JSP_ITEM_UniqueList["ztb"] = "Snowclash";
//D2JSP_ITEM_UniqueList["zhb"] = "Thudergod's Vigor";
D2JSP_ITEM_UniqueList["zhb"] = "Thundergod's Vigor";
	// Expansion Elite Uniques
D2JSP_ITEM_UniqueList["uap"] = "Harlequin Crest";
D2JSP_ITEM_UniqueList["uhm"] = "Veil of Steel";
D2JSP_ITEM_UniqueList["utu"] = "The Gladiator's Bane";
D2JSP_ITEM_UniqueList["upl"] = "Arkaine's Valor";
D2JSP_ITEM_UniqueList["uml"] = "Blackoak Shield";
D2JSP_ITEM_UniqueList["uit"] = "Stormshield";
D2JSP_ITEM_UniqueList["7bt"] = "Hellslayer";
D2JSP_ITEM_UniqueList["7ga"] = "Messerschmidt's Reaver";
D2JSP_ITEM_UniqueList["7mt"] = "Baranar's Star";
D2JSP_ITEM_UniqueList["7wh"] = "Schaefer's Hammer";
D2JSP_ITEM_UniqueList["7gm"] = "The Cranium Basher";
D2JSP_ITEM_UniqueList["7cr"] = "Lightsabre";
D2JSP_ITEM_UniqueList["7b7"] = "Doombringer";
D2JSP_ITEM_UniqueList["7gd"] = "The Grandfather";
D2JSP_ITEM_UniqueList["7dg"] = "Wizardspike";
D2JSP_ITEM_UniqueList["rin"] = "Constricting Ring";
D2JSP_ITEM_UniqueList["7wc"] = "Stormspire";
D2JSP_ITEM_UniqueList["6l7"] = "Eaglehorn";
D2JSP_ITEM_UniqueList["6lw"] = "Windforce";
	// Expansion Rings and Amulets
D2JSP_ITEM_UniqueList["rin"] = "Bul Katho's Wedding Band";
D2JSP_ITEM_UniqueList["amu"] = "The Cat's Eye";
D2JSP_ITEM_UniqueList["amu"] = "The Rising Sun";
D2JSP_ITEM_UniqueList["amu"] = "Crescent Moon";
D2JSP_ITEM_UniqueList["amu"] = "Mara's Kaleidoscope";
D2JSP_ITEM_UniqueList["amu"] = "Atma's Scarab";
D2JSP_ITEM_UniqueList["rin"] = "Dwarf Star";
D2JSP_ITEM_UniqueList["rin"] = "Raven Frost";
D2JSP_ITEM_UniqueList["amu"] = "Highlord's Wrath";
D2JSP_ITEM_UniqueList["amu"] = "Saracen's Chance";
	// Expansion Class Specific
D2JSP_ITEM_UniqueList["baa"] = "Arreat's Face";
D2JSP_ITEM_UniqueList["nea"] = "Homunculus";
D2JSP_ITEM_UniqueList["ama"] = "Titan's Revenge";
D2JSP_ITEM_UniqueList["am7"] = "Lycander's Aim";
D2JSP_ITEM_UniqueList["am9"] = "Lycander's Flank";
D2JSP_ITEM_UniqueList["oba"] = "The Oculus";
D2JSP_ITEM_UniqueList["pa9"] = "Herald of Zakarum";
//D2JSP_ITEM_UniqueList["9tw"] = "Cutthroat";
D2JSP_ITEM_UniqueList["9tw"] = "Bartuc's Cut-Throat";
D2JSP_ITEM_UniqueList["dra"] = "Jalal's Mane";
D2JSP_ITEM_UniqueList["9ta"] = "The Scalper";
/*		Not used as of 1.09
D2JSP_ITEM_UniqueList["0"] = "Bloodmoon";
D2JSP_ITEM_UniqueList["0"] = "Djinnslayer";
*/
D2JSP_ITEM_UniqueList["9tk"] = "Deathbit";
/*		Not used as of 1.09
D2JSP_ITEM_UniqueList["0"] = "Warshrike";
D2JSP_ITEM_UniqueList["0"] = "Gutsiphon";
D2JSP_ITEM_UniqueList["0"] = "Razoredge";
D2JSP_ITEM_UniqueList["0"] = "Gore Ripper";
D2JSP_ITEM_UniqueList["0"] = "Demonlimb";
D2JSP_ITEM_UniqueList["0"] = "Steelshade";
D2JSP_ITEM_UniqueList["0"] = "Tomb Reaver";
D2JSP_ITEM_UniqueList["0"] = "Deaths's Web";
D2JSP_ITEM_UniqueList["0"] = "Nature's Peace";
D2JSP_ITEM_UniqueList["0"] = "Horazon's Chalice";
D2JSP_ITEM_UniqueList["0"] = "Seraph's Hymn";
D2JSP_ITEM_UniqueList["0"] = "Zakarum's Salvation";
D2JSP_ITEM_UniqueList["0"] = "Fleshripper";
D2JSP_ITEM_UniqueList["0"] = "Odium";
D2JSP_ITEM_UniqueList["0"] = "Horizon's Tornado";
D2JSP_ITEM_UniqueList["0"] = "Stone Crusher";
D2JSP_ITEM_UniqueList["0"] = "Jadetalon";
D2JSP_ITEM_UniqueList["0"] = "Shadowdancer";
D2JSP_ITEM_UniqueList["0"] = "Cerebus";
D2JSP_ITEM_UniqueList["0"] = "Tyrael's Might";
D2JSP_ITEM_UniqueList["0"] = "Souldrain";
D2JSP_ITEM_UniqueList["0"] = "Runemaster";
D2JSP_ITEM_UniqueList["0"] = "Deathcleaver";
D2JSP_ITEM_UniqueList["0"] = "Executioner's Justice";
D2JSP_ITEM_UniqueList["0"] = "Stoneraven";
D2JSP_ITEM_UniqueList["0"] = "Leviathan";
D2JSP_ITEM_UniqueList["0"] = "Larzuk's Champion";
D2JSP_ITEM_UniqueList["0"] = "Wisp";
D2JSP_ITEM_UniqueList["0"] = "Gargoyle's Bite";
D2JSP_ITEM_UniqueList["0"] = "Lacerator";
D2JSP_ITEM_UniqueList["0"] = "Mang Song's Lesson";
D2JSP_ITEM_UniqueList["0"] = "Viperfork";
D2JSP_ITEM_UniqueList["0"] = "Blood Chalice";
D2JSP_ITEM_UniqueList["0"] = "Ethereal Edge";
D2JSP_ITEM_UniqueList["0"] = "The Long Rod";
D2JSP_ITEM_UniqueList["0"] = "Demonhorn's Edge";
D2JSP_ITEM_UniqueList["0"] = "The Ensanguinator";
D2JSP_ITEM_UniqueList["0"] = "The Reaper's Toll";
D2JSP_ITEM_UniqueList["0"] = "Spiritkeeper";
D2JSP_ITEM_UniqueList["0"] = "Hellrack";
D2JSP_ITEM_UniqueList["0"] = "Alma Negra";
D2JSP_ITEM_UniqueList["0"] = "Darkforge Spawn";
D2JSP_ITEM_UniqueList["0"] = "Widowmaker";
D2JSP_ITEM_UniqueList["0"] = "Bloodraven's Charge";
D2JSP_ITEM_UniqueList["0"] = "Ghostflame";
D2JSP_ITEM_UniqueList["0"] = "Shadowkiller";
D2JSP_ITEM_UniqueList["0"] = "Gimmershred";
D2JSP_ITEM_UniqueList["0"] = "Griffon's Eye";
D2JSP_ITEM_UniqueList["0"] = "Windhammer";
D2JSP_ITEM_UniqueList["0"] = "Thunderstroke";
D2JSP_ITEM_UniqueList["0"] = "Giantmaimer";
D2JSP_ITEM_UniqueList["0"] = "Demon's Arch";
D2JSP_ITEM_UniqueList["0"] = "Boneflame";
D2JSP_ITEM_UniqueList["0"] = "Steelpillar";
D2JSP_ITEM_UniqueList["0"] = "Nightwing's Veil";
D2JSP_ITEM_UniqueList["0"] = "Crown of Ages";
D2JSP_ITEM_UniqueList["0"] = "Andariel's Visage";
D2JSP_ITEM_UniqueList["0"] = "Darkfear";
D2JSP_ITEM_UniqueList["0"] = "Dragonscale";
D2JSP_ITEM_UniqueList["0"] = "Steel Carapice";
D2JSP_ITEM_UniqueList["0"] = "Gillian's Brazier";
D2JSP_ITEM_UniqueList["0"] = "Ravenlore";
D2JSP_ITEM_UniqueList["0"] = "Boneshade";
D2JSP_ITEM_UniqueList["0"] = "Nethercrow";
D2JSP_ITEM_UniqueList["0"] = "Flamebellow";
D2JSP_ITEM_UniqueList["0"] = "Fathom";
D2JSP_ITEM_UniqueList["0"] = "Wolfhowl";
D2JSP_ITEM_UniqueList["0"] = "Spirit Ward";
D2JSP_ITEM_UniqueList["0"] = "Kira's Guardian";
D2JSP_ITEM_UniqueList["0"] = "Ormus' Robes";
D2JSP_ITEM_UniqueList["0"] = "Gheed's Fortune";
D2JSP_ITEM_UniqueList["0"] = "Stormlash";
D2JSP_ITEM_UniqueList["0"] = "Halaberd's Reign";
D2JSP_ITEM_UniqueList["0"] = "Warriv's Warder";
D2JSP_ITEM_UniqueList["0"] = "Spike Thorn";
D2JSP_ITEM_UniqueList["0"] = "Dracul's Grasp";
D2JSP_ITEM_UniqueList["0"] = "Frostwind";
D2JSP_ITEM_UniqueList["0"] = "Templar's Might";
D2JSP_ITEM_UniqueList["0"] = "Eschuta's temper";
D2JSP_ITEM_UniqueList["0"] = "Firelizard's Talons";
D2JSP_ITEM_UniqueList["0"] = "Sandstorm Trek";
D2JSP_ITEM_UniqueList["0"] = "Marrowwalk";
D2JSP_ITEM_UniqueList["0"] = "Heaven's Light";
D2JSP_ITEM_UniqueList["0"] = "Merman's Speed";
D2JSP_ITEM_UniqueList["0"] = "Arachnid Mesh";
*/
D2JSP_ITEM_UniqueList["uvc"] = "Nosferatu's Coil";
/*		Not used as of 1.09
D2JSP_ITEM_UniqueList["0"] = "Metalgrid";
D2JSP_ITEM_UniqueList["0"] = "Verdugo's Hearty Cord";
D2JSP_ITEM_UniqueList["0"] = "Sigurd's Staunch";
D2JSP_ITEM_UniqueList["0"] = "Carrion Wind";
D2JSP_ITEM_UniqueList["0"] = "Giantskull";
D2JSP_ITEM_UniqueList["0"] = "Ironward";
*/
//delay(1);
//runGC();
//delay(1);
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_UniqueNameList = new Array();
for (var this_prop in D2JSP_ITEM_UniqueList) {
	D2JSP_ITEM_UniqueNameList[D2JSP_ITEM_UniqueList[this_prop].toLowerCase()] =
		this_prop;
}
//delay(10);
//runGC();
//delay(10);
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// Some common unique synonyms...
D2JSP_ITEM_UniqueNameList["chances"]          = D2JSP_ITEM_UniqueNameList["chance guards"];
D2JSP_ITEM_UniqueNameList["frostburns"]       = D2JSP_ITEM_UniqueNameList["frostburn"];
D2JSP_ITEM_UniqueNameList["frosties"]         = D2JSP_ITEM_UniqueNameList["frostburn"];
D2JSP_ITEM_UniqueNameList["frostie"]          = D2JSP_ITEM_UniqueNameList["frostburn"];
D2JSP_ITEM_UniqueNameList["frosty"]           = D2JSP_ITEM_UniqueNameList["frostburn"];
D2JSP_ITEM_UniqueNameList["frostys"]          = D2JSP_ITEM_UniqueNameList["frostburn"];
D2JSP_ITEM_UniqueNameList["nokozan"]          = D2JSP_ITEM_UniqueNameList["nokozan relic"];
D2JSP_ITEM_UniqueNameList["etlich"]           = D2JSP_ITEM_UniqueNameList["the eye of etlich"];
D2JSP_ITEM_UniqueNameList["mahim-oak"]        = D2JSP_ITEM_UniqueNameList["the mahim-oak curio"];
D2JSP_ITEM_UniqueNameList["mahim oak"]        = D2JSP_ITEM_UniqueNameList["the mahim-oak curio"];
D2JSP_ITEM_UniqueNameList["nagel"]            = D2JSP_ITEM_UniqueNameList["nagelring"];
D2JSP_ITEM_UniqueNameList["manald"]           = D2JSP_ITEM_UniqueNameList["manald heal"];
D2JSP_ITEM_UniqueNameList["soj"]              = D2JSP_ITEM_UniqueNameList["the stone of jordan"];
D2JSP_ITEM_UniqueNameList["ali baba"]         = D2JSP_ITEM_UniqueNameList["blade of ali baba"];
D2JSP_ITEM_UniqueNameList["pierre tombale"]   = D2JSP_ITEM_UniqueNameList["pierre tombale couant"];
D2JSP_ITEM_UniqueNameList["kuko"]             = D2JSP_ITEM_UniqueNameList["kuko shakaku"];
D2JSP_ITEM_UniqueNameList["witchwild"]        = D2JSP_ITEM_UniqueNameList["witchwild string"];
D2JSP_ITEM_UniqueNameList["goldstrike"]       = D2JSP_ITEM_UniqueNameList["goldstrike arch"];
D2JSP_ITEM_UniqueNameList["buriza-do"]        = D2JSP_ITEM_UniqueNameList["buriza-do kyanon"];
D2JSP_ITEM_UniqueNameList["buriza do"]        = D2JSP_ITEM_UniqueNameList["buriza-do kyanon"];
D2JSP_ITEM_UniqueNameList["buriza"]           = D2JSP_ITEM_UniqueNameList["buriza-do kyanon"];
D2JSP_ITEM_UniqueNameList["burrito"]          = D2JSP_ITEM_UniqueNameList["buriza-do kyanon"];
D2JSP_ITEM_UniqueNameList["blackhorn's"]      = D2JSP_ITEM_UniqueNameList["blackhorn's face"];
D2JSP_ITEM_UniqueNameList["gaze"]             = D2JSP_ITEM_UniqueNameList["vampiregaze"];
D2JSP_ITEM_UniqueNameList["vipermagi"]        = D2JSP_ITEM_UniqueNameList["skin of the vipermagi"];
D2JSP_ITEM_UniqueNameList["viper"]            = D2JSP_ITEM_UniqueNameList["skin of the vipermagi"];
D2JSP_ITEM_UniqueNameList["shaft"]            = D2JSP_ITEM_UniqueNameList["shaftstop"];
D2JSP_ITEM_UniqueNameList["duriel's"]         = D2JSP_ITEM_UniqueNameList["duriel's shell"];
D2JSP_ITEM_UniqueNameList["skullder's"]       = D2JSP_ITEM_UniqueNameList["skullder's ire"];
D2JSP_ITEM_UniqueNameList["que-hegan's"]      = D2JSP_ITEM_UniqueNameList["que-hegan's wisdom"];
D2JSP_ITEM_UniqueNameList["moser's"]          = D2JSP_ITEM_UniqueNameList["moser's blessed circle"];
D2JSP_ITEM_UniqueNameList["tiamat's"]         = D2JSP_ITEM_UniqueNameList["tiamat's rebuke"];
D2JSP_ITEM_UniqueNameList["gerke's"]          = D2JSP_ITEM_UniqueNameList["gerke's sanctuary"];
D2JSP_ITEM_UniqueNameList["radament's"]       = D2JSP_ITEM_UniqueNameList["radament's sphere"];
D2JSP_ITEM_UniqueNameList["lidless"]          = D2JSP_ITEM_UniqueNameList["lidless wall"];
D2JSP_ITEM_UniqueNameList["war trav"]         = D2JSP_ITEM_UniqueNameList["war traveler"];
D2JSP_ITEM_UniqueNameList["war travs"]        = D2JSP_ITEM_UniqueNameList["war traveler"];
D2JSP_ITEM_UniqueNameList["travs"]            = D2JSP_ITEM_UniqueNameList["war traveler"];
D2JSP_ITEM_UniqueNameList["string"]           = D2JSP_ITEM_UniqueNameList["string of ears"];
D2JSP_ITEM_UniqueNameList["thundergod's"]     = D2JSP_ITEM_UniqueNameList["thundergod's vigor"];
D2JSP_ITEM_UniqueNameList["t-god's"]          = D2JSP_ITEM_UniqueNameList["thundergod's vigor"];
D2JSP_ITEM_UniqueNameList["t god's"]          = D2JSP_ITEM_UniqueNameList["thundergod's vigor"];
D2JSP_ITEM_UniqueNameList["tgod's"]           = D2JSP_ITEM_UniqueNameList["thundergod's vigor"];
D2JSP_ITEM_UniqueNameList["harley"]           = D2JSP_ITEM_UniqueNameList["harlequin crest"];
D2JSP_ITEM_UniqueNameList["harly"]            = D2JSP_ITEM_UniqueNameList["harlequin crest"];
D2JSP_ITEM_UniqueNameList["veil"]             = D2JSP_ITEM_UniqueNameList["veil of steel"];
D2JSP_ITEM_UniqueNameList["glad's bane"]      = D2JSP_ITEM_UniqueNameList["the gladiator's bane"];
D2JSP_ITEM_UniqueNameList["bane"]             = D2JSP_ITEM_UniqueNameList["the gladiator's bane"];
D2JSP_ITEM_UniqueNameList["arkaine's"]        = D2JSP_ITEM_UniqueNameList["arkaine's valor"];
D2JSP_ITEM_UniqueNameList["valor"]            = D2JSP_ITEM_UniqueNameList["arkaine's valor"];
D2JSP_ITEM_UniqueNameList["black oak shield"] = D2JSP_ITEM_UniqueNameList["blackoak shield"];
D2JSP_ITEM_UniqueNameList["black oak"]        = D2JSP_ITEM_UniqueNameList["blackoak shield"];
D2JSP_ITEM_UniqueNameList["storm"]            = D2JSP_ITEM_UniqueNameList["stormshield"];
D2JSP_ITEM_UniqueNameList["messerschmidt's"]  = D2JSP_ITEM_UniqueNameList["messerschmidt's reaver"];
D2JSP_ITEM_UniqueNameList["baranar's"]        = D2JSP_ITEM_UniqueNameList["baranar's star"];
D2JSP_ITEM_UniqueNameList["schaefer's"]       = D2JSP_ITEM_UniqueNameList["schaefer's hammer"];
D2JSP_ITEM_UniqueNameList["doom"]             = D2JSP_ITEM_UniqueNameList["doombringer"];
D2JSP_ITEM_UniqueNameList["wiz"]              = D2JSP_ITEM_UniqueNameList["wizardspike"];
D2JSP_ITEM_UniqueNameList["eagle"]            = D2JSP_ITEM_UniqueNameList["eaglehorn"];
D2JSP_ITEM_UniqueNameList["windy"]            = D2JSP_ITEM_UniqueNameList["windforce"];
D2JSP_ITEM_UniqueNameList["mara's"]           = D2JSP_ITEM_UniqueNameList["mara's kaleidoscope"];
D2JSP_ITEM_UniqueNameList["atma's"]           = D2JSP_ITEM_UniqueNameList["atma's scarab"];
D2JSP_ITEM_UniqueNameList["dwarf"]            = D2JSP_ITEM_UniqueNameList["dwarf star"];
D2JSP_ITEM_UniqueNameList["raven"]            = D2JSP_ITEM_UniqueNameList["raven frost"];
D2JSP_ITEM_UniqueNameList["highlord's"]       = D2JSP_ITEM_UniqueNameList["highlord's wrath"];
D2JSP_ITEM_UniqueNameList["saracen's"]        = D2JSP_ITEM_UniqueNameList["saracen's chance"];
D2JSP_ITEM_UniqueNameList["arreat's"]         = D2JSP_ITEM_UniqueNameList["arreat's face"];
D2JSP_ITEM_UniqueNameList["titan's"]          = D2JSP_ITEM_UniqueNameList["titan's revenge"];
D2JSP_ITEM_UniqueNameList["lycander's"]       = D2JSP_ITEM_UniqueNameList["lycander's aim"];
D2JSP_ITEM_UniqueNameList["occy"]             = D2JSP_ITEM_UniqueNameList["the oculus"];
D2JSP_ITEM_UniqueNameList["herald"]           = D2JSP_ITEM_UniqueNameList["herald of zakarum"];
D2JSP_ITEM_UniqueNameList["hoz"]              = D2JSP_ITEM_UniqueNameList["herald of zakarum"];
D2JSP_ITEM_UniqueNameList["bartuc's"]         = D2JSP_ITEM_UniqueNameList["bartuc's cut-throat"];
D2JSP_ITEM_UniqueNameList["jalal's"]          = D2JSP_ITEM_UniqueNameList["jalal's mane"];
D2JSP_ITEM_UniqueNameList["nos coil"]         = D2JSP_ITEM_UniqueNameList["nosferatu's coil"];
D2JSP_ITEM_UniqueNameList["nosferatu's"]      = D2JSP_ITEM_UniqueNameList["nosferatu's coil"];
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
//		Quest item synonyms...
D2JSP_ITEM_UniqueNameList["staff of the kings"]          =
	D2JSP_ITEM_UniqueNameList["staff of kings"];
D2JSP_ITEM_UniqueNameList["shaft of the horadric staff"] =
	D2JSP_ITEM_UniqueNameList["staff of kings"];
D2JSP_ITEM_UniqueNameList["viper amulet"]                =
	D2JSP_ITEM_UniqueNameList["amulet of the viper"];
D2JSP_ITEM_UniqueNameList["top of the horadric staff"]   =
	D2JSP_ITEM_UniqueNameList["amulet of the viper"];
//		Other item synonyms...
D2JSP_ITEM_UniqueNameList["godstrike arch"]              =
	D2JSP_ITEM_UniqueNameList["goldstrike arch"];
D2JSP_ITEM_UniqueNameList["pus spiter"]                  =
	D2JSP_ITEM_UniqueNameList["pus spitter"];
D2JSP_ITEM_UniqueNameList["whichwild string"]            =
	D2JSP_ITEM_UniqueNameList["witchwild string"];
D2JSP_ITEM_UniqueNameList["skullcollector"]              =
	D2JSP_ITEM_UniqueNameList["skull collector"];
D2JSP_ITEM_UniqueNameList["the minataur"]                =
	D2JSP_ITEM_UniqueNameList["the minotaur"];
D2JSP_ITEM_UniqueNameList["cutthroat"]                   =
	D2JSP_ITEM_UniqueNameList["bartuc's cut-throat"];
D2JSP_ITEM_UniqueNameList["pompe's wrath"]               =
	D2JSP_ITEM_UniqueNameList["pompeii's wrath"];
D2JSP_ITEM_UniqueNameList["the atlantian"]               =
	D2JSP_ITEM_UniqueNameList["the atlantean"];
D2JSP_ITEM_UniqueNameList["victors silks"]               =
	D2JSP_ITEM_UniqueNameList["silks of the victor"];
D2JSP_ITEM_UniqueNameList["dimoaks hew"]                 =
	D2JSP_ITEM_UniqueNameList["dimoak's hew"];
D2JSP_ITEM_UniqueNameList["irices shard"]                =
	D2JSP_ITEM_UniqueNameList["spectral shard"];
D2JSP_ITEM_UniqueNameList["venomsward"]                  =
	D2JSP_ITEM_UniqueNameList["venom ward"];
D2JSP_ITEM_UniqueNameList["griswolds edge"]              =
	D2JSP_ITEM_UniqueNameList["griswold's edge"];
D2JSP_ITEM_UniqueNameList["the chieftan"]                =
	D2JSP_ITEM_UniqueNameList["the chieftain"];
D2JSP_ITEM_UniqueNameList["war bonnet"]                  =
	D2JSP_ITEM_UniqueNameList["biggin's bonnet"];
D2JSP_ITEM_UniqueNameList["piercerib"]                   =
	D2JSP_ITEM_UniqueNameList["rogue's bow"];
D2JSP_ITEM_UniqueNameList["lazarus spire"]               =
	D2JSP_ITEM_UniqueNameList["spire of lazarus"];
D2JSP_ITEM_UniqueNameList["the generals tan do li ga"]   =
	D2JSP_ITEM_UniqueNameList["the general's tan do li ga"];
D2JSP_ITEM_UniqueNameList["kinemils awl"]                =
	D2JSP_ITEM_UniqueNameList["kinemil's awl"];
D2JSP_ITEM_UniqueNameList["umes lament"]                 =
	D2JSP_ITEM_UniqueNameList["ume's lament"];
D2JSP_ITEM_UniqueNameList["fechmars axe"]                =
	D2JSP_ITEM_UniqueNameList["axe of fechmar"];
D2JSP_ITEM_UniqueNameList["lenyms cord"]                 =
	D2JSP_ITEM_UniqueNameList["lenymo"];
D2JSP_ITEM_UniqueNameList["blinkbats form"]              =
	D2JSP_ITEM_UniqueNameList["blinkbat's form"];
D2JSP_ITEM_UniqueNameList["bonesob"]                     =
	D2JSP_ITEM_UniqueNameList["bonesnap"];
D2JSP_ITEM_UniqueNameList["doomspittle"]                 =
	D2JSP_ITEM_UniqueNameList["doomslinger"];
D2JSP_ITEM_UniqueNameList["pullspite"]                   =
	D2JSP_ITEM_UniqueNameList["stormstrike"];
D2JSP_ITEM_UniqueNameList["krintizs skewer"]             =
	D2JSP_ITEM_UniqueNameList["skewer of krintiz"];
D2JSP_ITEM_UniqueNameList["rixots keen"]                 =
	D2JSP_ITEM_UniqueNameList["rixot's keen"];
D2JSP_ITEM_UniqueNameList["iros torch"]                  =
	D2JSP_ITEM_UniqueNameList["torch of iro"];
D2JSP_ITEM_UniqueNameList["culwens point"]               =
	D2JSP_ITEM_UniqueNameList["culwen's point"];
D2JSP_ITEM_UniqueNameList["peasent crown"]               =
	D2JSP_ITEM_UniqueNameList["peasant crown"];
D2JSP_ITEM_UniqueNameList["gorerider"]                   =
	D2JSP_ITEM_UniqueNameList["gore rider"];
D2JSP_ITEM_UniqueNameList["valkiry wing"]                =
	D2JSP_ITEM_UniqueNameList["valkyrie wing"];
D2JSP_ITEM_UniqueNameList["mosers blessed circle"]       =
	D2JSP_ITEM_UniqueNameList["moser's blessed circle"];
D2JSP_ITEM_UniqueNameList["spiritforge"]                 =
	D2JSP_ITEM_UniqueNameList["spirit forge"];
D2JSP_ITEM_UniqueNameList["wartraveler"]                 =
	D2JSP_ITEM_UniqueNameList["war traveler"];
D2JSP_ITEM_UniqueNameList["lavagout"]                    =
	D2JSP_ITEM_UniqueNameList["lava gout"];
D2JSP_ITEM_UniqueNameList["que-hegan's wisdon"]          =
	D2JSP_ITEM_UniqueNameList["que-hegan's wisdom"];
D2JSP_ITEM_UniqueNameList["ironpelt"]                    =
	D2JSP_ITEM_UniqueNameList["iron pelt"];
D2JSP_ITEM_UniqueNameList["maelstromwrath"]              =
	D2JSP_ITEM_UniqueNameList["maelstrom"];
D2JSP_ITEM_UniqueNameList["thudergod's vigor"]           =
	D2JSP_ITEM_UniqueNameList["thundergod's vigor"];
D2JSP_ITEM_UniqueNameList["gloomstrap"]                  =
	D2JSP_ITEM_UniqueNameList["gloom's trap"];
D2JSP_ITEM_UniqueNameList["kerke's sanctuary"]           =
	D2JSP_ITEM_UniqueNameList["gerke's sanctuary"];
D2JSP_ITEM_UniqueNameList["radimant's sphere"]           =
	D2JSP_ITEM_UniqueNameList["radament's sphere"];
D2JSP_ITEM_UniqueNameList["skin of the flayerd one"]     =
	D2JSP_ITEM_UniqueNameList["skin of the flayed one"];
D2JSP_ITEM_UniqueNameList["rimeraven"]                   =
	D2JSP_ITEM_UniqueNameList["raven claw"];
// ////////////////////////////////////////////////////////////////////////////
//delay(1);
//runGC();
//delay(1);

// ////////////////////////////////////////////////////////////////////////////
// Finalize the synonyms by extracting some canonical equivalents...
for (var this_prop in D2JSP_ITEM_UniqueNameList) {
	if (this_prop.indexOf(" ") > -1) {
		this_name = this_prop;
		this_name = this_name.replace(/\'s /, "s ");
		if (this_name != this_prop)
			D2JSP_ITEM_UniqueNameList[this_name] = D2JSP_ITEM_UniqueNameList[this_prop];
		this_name = this_prop;
		this_name = this_name.replace(/\'s /, " ");
		if (this_name != this_prop)
			D2JSP_ITEM_UniqueNameList[this_name] = D2JSP_ITEM_UniqueNameList[this_prop];
		this_name = this_prop;
		this_name = this_name.replace(/^the /, "");
		if (this_name != this_prop)
			D2JSP_ITEM_UniqueNameList[this_name] = D2JSP_ITEM_UniqueNameList[this_prop];
		this_name = this_prop;
		this_name = this_name.replace(/ the /, " ");
		if (this_name != this_prop)
			D2JSP_ITEM_UniqueNameList[this_name] = D2JSP_ITEM_UniqueNameList[this_prop];
		this_name = this_prop;
		this_name = this_name.replace(/ of /, " ");
		if (this_name != this_prop)
			D2JSP_ITEM_UniqueNameList[this_name] = D2JSP_ITEM_UniqueNameList[this_prop];
	}
}
delete this_name;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
/*
	Differences from the MPQ files:

	* All of the items in what is called 'McAuley's Folly' set in the MPQ are
	named 'Sander's' in-game. They've been changed to 'Sander's' here and the
	appropriate synonyms created.

	* The belt in the set 'Tal Rasha's Wrappings' is listed in the MPQ as
	'Tal Rasha's Fire-Spun Cloth'. This is obviously a typo for the in-game
	'Tal Rasha's Fine-Spun Cloth'. They name has been changed here and a
	synonym set up for 'Tal Rasha's Fire-Spun Cloth'.

	* The armor in the set 'Tal Rasha's Wrappings' is listed in the MPQ as
	'Tal Rasha's Howling Wind'. The in-game name is 'Tal Rasha's Guardianship'.
	They name has been changed here and a synonym set up for 'Tal Rasha's
	Howling Wind'.

	* The jagged star in the set 'Aldur's Watchtower' is named 'Aldur's Gauntlet'
	in the  MPQ, but 'Aldur's Rhythm' in-game. It's been changed and a synonym
	created.

	* The belt in the set 'Hwanin's Majesty' is named 'Hwanin's Seal' in the 
	MPQ, but 'Hwanin's Blessing' in-game. It's been changed and a synonym
	created.

	* The shield in the 'Heaven's Brethern' set is named 'Heaven's Taebaek' in
	the MPQ, but 'Taebaek's Glory' in-game. The name has been changed and a
	synonym created.

	* The armor in the 'The Disciple' set is named 'Spiritual Custodian' in the
	MPQ, but 'Dark Adherent' in-game. The name has been changed and a
	synonym created.

	* The shield in the 'Orphan's Call' set is named 'Wihtstan's Guard' in the
	MPQ, but 'Whitstan's Guard' in-game. The name has been changed and a
	synonym created.

	* The boots in the 'Cow King's Leathers' set is named 'Cow King's Hoofs' in
	the MPQ, but 'Cow King's Hooves' in-game. The name has been changed and a
	synonym created.

*/
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_SetList = new Array();
// Set item number 1
D2JSP_ITEM_SetList["civerb's ward"]                  = ["lrg", 1, "Civerb's Ward",                 "Civerb's Vestments"];
D2JSP_ITEM_SetList["hsarus' iron heel"]              = ["mbt", 1, "Hsarus' Iron Heel",             "Hsarus' Defense"];
D2JSP_ITEM_SetList["cleglaw's tooth"]                = ["lsd", 1, "Cleglaw's Tooth",               "Cleglaw's Brace"];
D2JSP_ITEM_SetList["iratha's collar"]                = ["amu", 1, "Iratha's Collar",               "Iratha's Finery"];
D2JSP_ITEM_SetList["isenhart's lightbrand"]          = ["bsd", 1, "Isenhart's Lightbrand",         "Isenhart's Armory"];
D2JSP_ITEM_SetList["vidala's barb"]                  = ["lbb", 1, "Vidala's Barb",                 "Vidala's Rig"];
D2JSP_ITEM_SetList["milabrega's orb"]                = ["kit", 1, "Milabrega's Orb",               "Milabrega's Regalia"];
D2JSP_ITEM_SetList["cathan's rule"]                  = ["bst", 1, "Cathan's Rule",                 "Cathan's Traps"];
D2JSP_ITEM_SetList["tancred's crowbill"]             = ["mpi", 1, "Tancred's Crowbill",            "Tancred's Battlegear"];
D2JSP_ITEM_SetList["sigon's visor"]                  = ["ghm", 1, "Sigon's Visor",                 "Sigon's Complete Steel"];
D2JSP_ITEM_SetList["infernal cranium"]               = ["cap", 1, "Infernal Cranium",              "Infernal Tools"];
D2JSP_ITEM_SetList["berserker's headgear"]           = ["hlm", 1, "Berserker's Headgear",          "Berserker's Garb"];
D2JSP_ITEM_SetList["death's hand"]                   = ["lgl", 1, "Death's Hand",                  "Death's Disguise"];
D2JSP_ITEM_SetList["angelic sickle"]                 = ["sbr", 1, "Angelic Sickle",                "Angelical Raiment"];
D2JSP_ITEM_SetList["arctic horn"]                    = ["swb", 1, "Arctic Horn",                   "Arctic Gear"];
D2JSP_ITEM_SetList["arcanna's sign"]                 = ["amu", 1, "Arcanna's Sign",                "Arcanna's Tricks"];
D2JSP_ITEM_SetList["natalya's totem"]                = ["xh9", 1, "Natalya's Totem",               "Natalya's Odium"];
D2JSP_ITEM_SetList["aldur's stony gaze"]             = ["dr8", 1, "Aldur's Stony Gaze",            "Aldur's Watchtower"];
D2JSP_ITEM_SetList["immortal king's will"]           = ["ba5", 1, "Immortal King's Will",          "Immortal King"];
//D2JSP_ITEM_SetList["tal rasha's fire-spun cloth"]    = ["zmb", 1, "Tal Rasha's Fire-Spun Cloth",   "Tal Rasha's Wrappings"];
D2JSP_ITEM_SetList["tal rasha's fine-spun cloth"]    = ["zmb", 1, "Tal Rasha's Fine-Spun Cloth",   "Tal Rasha's Wrappings"];
D2JSP_ITEM_SetList["griswold's valor"]               = ["urn", 1, "Griswold's Valor",              "Griswold's Legacy"];
D2JSP_ITEM_SetList["trang-oul's guise"]              = ["uh9", 1, "Trang-Oul's Guise",             "Trang-Oul's Avatar"];
D2JSP_ITEM_SetList["m'avina's true sight"]           = ["ci3", 1, "M'avina's True Sight",          "M'avina's Battle Hymn"];
D2JSP_ITEM_SetList["telling of beads"]               = ["amu", 1, "Telling of Beads",              "The Disciple"];
D2JSP_ITEM_SetList["dangoon's teaching"]             = ["7ma", 1, "Dangoon's Teaching",            "Heaven's Brethren"];
D2JSP_ITEM_SetList["guillaume's face"]               = ["xhm", 1, "Guillaume's Face",              "Orphan's Call"];
D2JSP_ITEM_SetList["hwanin's splendor"]              = ["xrn", 1, "Hwanin's Splendor",             "Hwanin's Majesty"];
D2JSP_ITEM_SetList["sazabi's cobalt redeemer"]       = ["7ls", 1, "Sazabi's Cobalt Redeemer",      "Sazabi's Grand Tribute"];
D2JSP_ITEM_SetList["bul-kathos' sacred charge"]      = ["7gd", 1, "Bul-Kathos' Sacred Charge",     "Bul-Kathos' Children"];
D2JSP_ITEM_SetList["cow king's horns"]               = ["xap", 1, "Cow King's Horns",              "Cow King's Leathers"];
D2JSP_ITEM_SetList["naj's puzzler"]                  = ["6cs", 1, "Naj's Puzzler",                 "Naj's Ancient Set"];
//D2JSP_ITEM_SetList["mcauley's paragon"]              = ["cap", 1, "McAuley's Paragon",             "McAuley's Folly"];
D2JSP_ITEM_SetList["sander's paragon"]               = ["cap", 1, "Sander's Paragon",              "Sander's Folly"];
// Set item number 2
D2JSP_ITEM_SetList["civerb's icon"]                  = ["amu", 2, "Civerb's Icon",                 "Civerb's Vestments"];
D2JSP_ITEM_SetList["hsarus' iron fist"]              = ["buc", 2, "Hsarus' Iron Fist",             "Hsarus' Defense"];
D2JSP_ITEM_SetList["cleglaw's claw"]                 = ["sml", 2, "Cleglaw's Claw",                "Cleglaw's Brace"];
D2JSP_ITEM_SetList["iratha's cuff"]                  = ["tgl", 2, "Iratha's Cuff",                 "Iratha's Finery"];
D2JSP_ITEM_SetList["isenhart's parry"]               = ["gts", 2, "Isenhart's Parry",              "Isenhart's Armory"];
D2JSP_ITEM_SetList["vidala's fetlock"]               = ["tbt", 2, "Vidala's Fetlock",              "Vidala's Rig"];
D2JSP_ITEM_SetList["milabrega's rod"]                = ["wsp", 2, "Milabrega's Rod",               "Milabrega's Regalia"];
D2JSP_ITEM_SetList["cathan's mesh"]                  = ["chn", 2, "Cathan's Mesh",                 "Cathan's Traps"];
D2JSP_ITEM_SetList["tancred's spine"]                = ["ful", 2, "Tancred's Spine",               "Tancred's Battlegear"];
D2JSP_ITEM_SetList["sigon's shelter"]                = ["gth", 2, "Sigon's Shelter",               "Sigon's Complete Steel"];
D2JSP_ITEM_SetList["infernal torch"]                 = ["gwn", 2, "Infernal Torch",                "Infernal Tools"];
D2JSP_ITEM_SetList["berserker's hauberk"]            = ["spl", 2, "Berserker's Hauberk",           "Berserker's Garb"];
D2JSP_ITEM_SetList["death's guard"]                  = ["lbl", 2, "Death's Guard",                 "Death's Disguise"];
D2JSP_ITEM_SetList["angelic mantle"]                 = ["rng", 2, "Angelic Mantle",                "Angelical Raiment"];
D2JSP_ITEM_SetList["arctic furs"]                    = ["qui", 2, "Arctic Furs",                   "Arctic Gear"];
D2JSP_ITEM_SetList["arcanna's deathwand"]            = ["wst", 2, "Arcanna's Deathwand",           "Arcanna's Tricks"];
D2JSP_ITEM_SetList["natalya's mark"]                 = ["7qr", 2, "Natalya's Mark",                "Natalya's Odium"];
D2JSP_ITEM_SetList["aldur's deception"]              = ["uul", 2, "Aldur's Deception",             "Aldur's Watchtower"];
D2JSP_ITEM_SetList["immortal king's soul cage"]      = ["uar", 2, "Immortal King's Soul Cage",     "Immortal King"];
D2JSP_ITEM_SetList["tal rasha's adjudication"]       = ["amu", 2, "Tal Rasha's Adjudication",      "Tal Rasha's Wrappings"];
D2JSP_ITEM_SetList["griswold's heart"]               = ["xar", 2, "Griswold's Heart",              "Griswold's Legacy"];
D2JSP_ITEM_SetList["trang-oul's scales"]             = ["xul", 2, "Trang-Oul's Scales",            "Trang-Oul's Avatar"];
D2JSP_ITEM_SetList["m'avina's embrace"]              = ["uld", 2, "M'avina's Embrace",             "M'avina's Battle Hymn"];
D2JSP_ITEM_SetList["laying of hands"]                = ["ulg", 2, "Laying of Hands",               "The Disciple"];
//D2JSP_ITEM_SetList["heaven's taebaek"]               = ["uts", 2, "Heaven's Taebaek",              "Heaven's Brethren"];
D2JSP_ITEM_SetList["taebaek's glory"]                = ["uts", 2, "Taebaek's Glory",               "Heaven's Brethren"];
D2JSP_ITEM_SetList["wilhelm's pride"]                = ["ztb", 2, "Wilhelm's Pride",               "Orphan's Call"];
D2JSP_ITEM_SetList["hwanin's refuge"]                = ["xcl", 2, "Hwanin's Refuge",               "Hwanin's Majesty"];
D2JSP_ITEM_SetList["sazabi's ghost liberator"]       = ["upl", 2, "Sazabi's Ghost Liberator",      "Sazabi's Grand Tribute"];
D2JSP_ITEM_SetList["bul-kathos' tribal guardian"]    = ["7wd", 2, "Bul-Kathos' Tribal Guardian",   "Bul-Kathos' Children"];
D2JSP_ITEM_SetList["cow king's hide"]                = ["stu", 2, "Cow King's Hide",               "Cow King's Leathers"];
D2JSP_ITEM_SetList["naj's light plate"]              = ["ult", 2, "Naj's Light Plate",             "Naj's Ancient Set"];
//D2JSP_ITEM_SetList["mcauley's riprap"]               = ["vbt", 2, "McAuley's Riprap",              "McAuley's Folly"];
D2JSP_ITEM_SetList["sander's riprap"]                = ["vbt", 2, "Sander's Riprap",               "Sander's Folly"];
// Set item number 3
D2JSP_ITEM_SetList["civerb's cudgel"]                = ["gsc", 3, "Civerb's Cudgel",               "Civerb's Vestments"];
D2JSP_ITEM_SetList["hsarus' iron stay"]              = ["mbl", 3, "Hsarus' Iron Stay",             "Hsarus' Defense"];
D2JSP_ITEM_SetList["cleglaw's pincers"]              = ["mgl", 3, "Cleglaw's Pincers",             "Cleglaw's Brace"];
D2JSP_ITEM_SetList["iratha's coil"]                  = ["crn", 3, "Iratha's Coil",                 "Iratha's Finery"];
D2JSP_ITEM_SetList["isenhart's case"]                = ["brs", 3, "Isenhart's Case",               "Isenhart's Armory"];
D2JSP_ITEM_SetList["vidala's ambush"]                = ["lea", 3, "Vidala's Ambush",               "Vidala's Rig"];
D2JSP_ITEM_SetList["milabrega's diadem"]             = ["crn", 3, "Milabrega's Diadem",            "Milabrega's Regalia"];
D2JSP_ITEM_SetList["cathan's visage"]                = ["msk", 3, "Cathan's Visage",               "Cathan's Traps"];
D2JSP_ITEM_SetList["tancred's hobnails"]             = ["lbt", 3, "Tancred's Hobnails",            "Tancred's Battlegear"];
D2JSP_ITEM_SetList["sigon's gage"]                   = ["hgl", 3, "Sigon's Gage",                  "Sigon's Complete Steel"];
D2JSP_ITEM_SetList["infernal sign"]                  = ["tbl", 3, "Infernal Sign",                 "Infernal Tools"];
D2JSP_ITEM_SetList["berserker's hatchet"]            = ["2ax", 3, "Berserker's Hatchet",           "Berserker's Garb"];
D2JSP_ITEM_SetList["death's touch"]                  = ["wsd", 3, "Death's Touch",                 "Death's Disguise"];
D2JSP_ITEM_SetList["angelic halo"]                   = ["rin", 3, "Angelic Halo",                  "Angelical Raiment"];
D2JSP_ITEM_SetList["arctic binding"]                 = ["vbl", 3, "Arctic Binding",                "Arctic Gear"];
D2JSP_ITEM_SetList["arcanna's head"]                 = ["skp", 3, "Arcanna's Head",                "Arcanna's Tricks"];
D2JSP_ITEM_SetList["natalya's shadow"]               = ["ucl", 3, "Natalya's Shadow",              "Natalya's Odium"];
//D2JSP_ITEM_SetList["aldur's gauntlet"]               = ["9mt", 3, "Aldur's Gauntlet",              "Aldur's Watchtower"];
D2JSP_ITEM_SetList["aldur's rhythm"]                 = ["9mt", 3, "Aldur's Rhythm",                "Aldur's Watchtower"];
D2JSP_ITEM_SetList["immortal king's detail"]         = ["zhb", 3, "Immortal King's Detail",        "Immortal King"];
D2JSP_ITEM_SetList["tal rasha's lidless eye"]        = ["oba", 3, "Tal Rasha's Lidless Eye",       "Tal Rasha's Wrappings"];
D2JSP_ITEM_SetList["griswolds's redemption"]         = ["7ws", 3, "Griswolds's Redemption",        "Griswold's Legacy"];
D2JSP_ITEM_SetList["trang-oul's wing"]               = ["ne9", 3, "Trang-Oul's Wing",              "Trang-Oul's Avatar"];
D2JSP_ITEM_SetList["m'avina's icy clutch"]           = ["xtg", 3, "M'avina's Icy Clutch",          "M'avina's Battle Hymn"];
D2JSP_ITEM_SetList["rite of passage"]                = ["xlb", 3, "Rite of Passage",               "The Disciple"];
D2JSP_ITEM_SetList["haemosu's adament"]              = ["xrs", 3, "Haemosu's Adament",             "Heaven's Brethren"];
D2JSP_ITEM_SetList["magnus' skin"]                   = ["xvg", 3, "Magnus' Skin",                  "Orphan's Call"];
//D2JSP_ITEM_SetList["hwanin's seal"]                  = ["mbl", 3, "Hwanin's Seal",                 "Hwanin's Majesty"];
D2JSP_ITEM_SetList["hwanin's blessing"]              = ["mbl", 3, "Hwanin's Blessing",             "Hwanin's Majesty"];
D2JSP_ITEM_SetList["sazabi's mental sheath"]         = ["xhl", 3, "Sazabi's Mental Sheath",        "Sazabi's Grand Tribute"];
//D2JSP_ITEM_SetList["cow king's hoofs"]               = ["vbt", 3, "Cow King's Hoofs",              "Cow King's Leathers"];
D2JSP_ITEM_SetList["cow king's hooves"]              = ["vbt", 3, "Cow King's Hooves",             "Cow King's Leathers"];
D2JSP_ITEM_SetList["naj's circlet"]                  = ["ci0", 3, "Naj's Circlet",                 "Naj's Ancient Set"];
//D2JSP_ITEM_SetList["mcauley's taboo"]                = ["vgl", 3, "McAuley's Taboo",               "McAuley's Folly"];
D2JSP_ITEM_SetList["sander's taboo"]                 = ["vgl", 3, "Sander's Taboo",                "Sander's Folly"];
// Set item number 4
D2JSP_ITEM_SetList["iratha's cord"]                  = ["tbl", 4, "Iratha's Cord",                 "Iratha's Finery"];
D2JSP_ITEM_SetList["isenhart's horns"]               = ["fhl", 4, "Isenhart's Horns",              "Isenhart's Armory"];
D2JSP_ITEM_SetList["vidala's snare"]                 = ["amu", 4, "Vidala's Snare",                "Vidala's Rig"];
D2JSP_ITEM_SetList["milabrega's robe"]               = ["aar", 4, "Milabrega's Robe",              "Milabrega's Regalia"];
D2JSP_ITEM_SetList["cathan's sigil"]                 = ["amu", 4, "Cathan's Sigil",                "Cathan's Traps"];
D2JSP_ITEM_SetList["tancred's weird"]                = ["amu", 4, "Tancred's Weird",               "Tancred's Battlegear"];
D2JSP_ITEM_SetList["sigon's sabot"]                  = ["hbt", 4, "Sigon's Sabot",                 "Sigon's Complete Steel"];
D2JSP_ITEM_SetList["angelic wings"]                  = ["amu", 4, "Angelic Wings",                 "Angelical Raiment"];
D2JSP_ITEM_SetList["arctic mitts"]                   = ["tgl", 4, "Arctic Mitts",                  "Arctic Gear"];
D2JSP_ITEM_SetList["arcanna's flesh"]                = ["ltp", 4, "Arcanna's Flesh",               "Arcanna's Tricks"];
D2JSP_ITEM_SetList["natalya's soul"]                 = ["xmb", 4, "Natalya's Soul",                "Natalya's Odium"];
D2JSP_ITEM_SetList["aldur's advance"]                = ["xtb", 4, "Aldur's Advance",               "Aldur's Watchtower"];
D2JSP_ITEM_SetList["immortal king's forge"]          = ["xhg", 4, "Immortal King's Forge",         "Immortal King"];
//D2JSP_ITEM_SetList["tal rasha's howling wind"]       = ["uth", 4, "Tal Rasha's Howling Wind",      "Tal Rasha's Wrappings"];
D2JSP_ITEM_SetList["tal rasha's guardianship"]       = ["uth", 4, "Tal Rasha's Guardianship",      "Tal Rasha's Wrappings"];
D2JSP_ITEM_SetList["griswold's honor"]               = ["paf", 4, "Griswold's Honor",              "Griswold's Legacy"];
D2JSP_ITEM_SetList["trang-oul's claws"]              = ["xmg", 4, "Trang-Oul's Claws",             "Trang-Oul's Avatar"];
D2JSP_ITEM_SetList["m'avina's tenet"]                = ["zvb", 4, "M'avina's Tenet",               "M'avina's Battle Hymn"];
//D2JSP_ITEM_SetList["spiritual custodian"]            = ["uui", 4, "Spiritual Custodian",           "The Disciple"];
D2JSP_ITEM_SetList["dark adherent"]                  = ["uui", 4, "Dark Adherent",                 "The Disciple"];
D2JSP_ITEM_SetList["ondal's almighty"]               = ["uhm", 4, "Ondal's Almighty",              "Heaven's Brethren"];
//D2JSP_ITEM_SetList["wihtstan's guard"]               = ["xml", 4, "Wihtstan's Guard",              "Orphan's Call"];
D2JSP_ITEM_SetList["whitstan's guard"]               = ["xml", 4, "Whitstan's Guard",              "Orphan's Call"];
D2JSP_ITEM_SetList["hwanin's justice"]               = ["9vo", 4, "Hwanin's Justice",              "Hwanin's Majesty"];
//D2JSP_ITEM_SetList["mcauley's superstition"]         = ["bwn", 4, "McAuley's Superstition",        "McAuley's Folly"];
D2JSP_ITEM_SetList["sander's superstition"]          = ["bwn", 4, "Sander's Superstition",         "Sander's Folly"];
// Set item number 5
D2JSP_ITEM_SetList["cathan's seal"]                  = ["rin", 5, "Cathan's Seal",                 "Cathan's Traps"];
D2JSP_ITEM_SetList["tancred's skull"]                = ["bhm", 5, "Tancred's Skull",               "Tancred's Battlegear"];
D2JSP_ITEM_SetList["sigon's wrap"]                   = ["hbl", 5, "Sigon's Wrap",                  "Sigon's Complete Steel"];
D2JSP_ITEM_SetList["immortal king's pillar"]         = ["xhb", 5, "Immortal King's Pillar",        "Immortal King"];
D2JSP_ITEM_SetList["tal rasha's horadric crest"]     = ["xsk", 5, "Tal Rasha's Horadric Crest",    "Tal Rasha's Wrappings"];
D2JSP_ITEM_SetList["trang-oul's girth"]              = ["utc", 5, "Trang-Oul's Girth",             "Trang-Oul's Avatar"];
D2JSP_ITEM_SetList["m'avina's caster"]               = ["amc", 5, "M'avina's Caster",              "M'avina's Battle Hymn"];
D2JSP_ITEM_SetList["credendum"]                      = ["umc", 5, "Credendum",                     "The Disciple"];
// Set item number 6
D2JSP_ITEM_SetList["sigon's guard"]                  = ["tow", 6, "Sigon's Guard",                 "Sigon's Complete Steel"];
D2JSP_ITEM_SetList["immortal king's stone crusher"]  = ["7m7", 6, "Immortal King's Stone Crusher", "Immortal King"];
// ////////////////////////////////////////////////////////////////////////////
//delay(1);
//runGC();
//delay(1);

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// This constructs the mapping of item codes to set canonical names...
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_SetItemCodeList = new Array();
var D2JSP_ITEM_SetItemNameList = new Array();
var D2JSP_ITEM_SetNameList     = new Array();
for (this_prop in D2JSP_ITEM_SetList) {
	D2JSP_ITEM_SetItemNameList[this_prop] = this_prop;
	this_code = D2JSP_ITEM_SetList[this_prop][D2JSP_ITEM_SET_ELEMENT_CODE];
	this_name = D2JSP_ITEM_SetList[this_prop][D2JSP_ITEM_SET_ELEMENT_SET_NAME];
	if (!(this_code in D2JSP_ITEM_SetItemCodeList))
		D2JSP_ITEM_SetItemCodeList[this_code] = new Array();
	D2JSP_ITEM_SetItemCodeList[this_code].push(this_prop);
	if (!(this_name.toLowerCase() in D2JSP_ITEM_SetNameList))
		D2JSP_ITEM_SetNameList[this_name.toLowerCase()] = new Array();
	D2JSP_ITEM_SetNameList[this_name.toLowerCase()].push(this_prop);
}
delete this_prop;
delete this_code;
delete this_name;
//delay(10);
//runGC();
//delay(10);
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Create various set synonyms...
// ////////////////////////////////////////////////////////////////////////////
	// Set item names
D2JSP_ITEM_SetItemNameList["mcauley's paragon"]           =
	D2JSP_ITEM_SetItemNameList["sander's paragon"];
D2JSP_ITEM_SetItemNameList["mcauley's riprap"]            =
	D2JSP_ITEM_SetItemNameList["sander's riprap"];
D2JSP_ITEM_SetItemNameList["mcauley's taboo"]             =
	D2JSP_ITEM_SetItemNameList["sander's taboo"];
D2JSP_ITEM_SetItemNameList["mcauley's superstition"]      =
	D2JSP_ITEM_SetItemNameList["sander's superstition"];
D2JSP_ITEM_SetItemNameList["tal rasha's fire-spun cloth"] =
	D2JSP_ITEM_SetItemNameList["tal rasha's fine-spun cloth"];
D2JSP_ITEM_SetItemNameList["tal rasha's howling wind"]    =
	D2JSP_ITEM_SetItemNameList["tal rasha's guardianship"];
D2JSP_ITEM_SetItemNameList["aldur's gauntlet"]            =
	D2JSP_ITEM_SetItemNameList["aldur's rhythm"];
D2JSP_ITEM_SetItemNameList["hwanin's seal"]               =
	D2JSP_ITEM_SetItemNameList["hwanin's blessing"];
D2JSP_ITEM_SetItemNameList["heaven's taebaek"]            =
	D2JSP_ITEM_SetItemNameList["taebaek's glory"];
D2JSP_ITEM_SetItemNameList["spiritual custodian"]         =
	D2JSP_ITEM_SetItemNameList["dark adherent"];
D2JSP_ITEM_SetItemNameList["wihtstan's guard"]            =
	D2JSP_ITEM_SetItemNameList["whitstan's guard"];
D2JSP_ITEM_SetItemNameList["cow king's hoofs"]            =
	D2JSP_ITEM_SetItemNameList["cow king's hooves"];
	// Set names
D2JSP_ITEM_SetNameList["mcauley's folly"]                 =
	D2JSP_ITEM_SetNameList["sander's folly"];
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEMLOC_INVENTORY = 0;
var D2JSP_ITEMLOC_CUBE      = 3;
var D2JSP_ITEMLOC_STASH     = 4;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_SIZE_MAX_X = 2;
var D2JSP_ITEM_SIZE_MAX_Y = 4;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CONT_SRC_INVENTORY = 0;
var D2JSP_ITEM_CONT_SRC_STASH     = 1;
var D2JSP_ITEM_CONT_SRC_CUBE      = 2;
var D2JSP_ITEM_CONT_SRC_COUNT     = 3;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CONT_MINIMUM       = D2JSP_ITEM_CONT_SRC_INVENTORY;
var D2JSP_ITEM_CONT_MAXIMUM       = D2JSP_ITEM_CONT_SRC_CUBE;
var D2JSP_ITEM_CONT_COUNT         = (D2JSP_ITEM_CONT_MAXIMUM + 1);
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CLICK_BUTTON_LEFT        = 0;
var D2JSP_ITEM_CLICK_BUTTON_RIGHT       = 1;
var D2JSP_ITEM_CLICK_BUTTON_LEFT_SHIFT  = 2;
var D2JSP_ITEM_CLICK_BUTTON_RIGHT_SHIFT = 3;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CLICK_CONTAINER_INVENTORY    = 0;
var D2JSP_ITEM_CLICK_CONTAINER_PLAYER_TRADE = 1;
var D2JSP_ITEM_CLICK_CONTAINER_CUBE         = 3;
var D2JSP_ITEM_CLICK_CONTAINER_STASH        = 4;
var D2JSP_ITEM_CLICK_CONTAINER_BELT         = 5;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_GOLD_MOVE_INV_TO_GROUND = 1;
var D2JSP_ITEM_GOLD_MOVE_INV_TO_TRADE  = 2;
var D2JSP_ITEM_GOLD_MOVE_INV_TO_STASH  = 3;
var D2JSP_ITEM_GOLD_MOVE_STASH_TO_INV  = 4;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CONT_SourceData = [
	["Inventory", D2JSP_ITEMLOC_INVENTORY, 10, 4],
	["Stash",     D2JSP_ITEMLOC_STASH,      6, 8],
	["Cube",      D2JSP_ITEMLOC_CUBE,       3, 4]
];
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CONT_SizeData = [
	[1, 1],	// Scrolls, potions, rings, amulets, small charms, jewels, gems...
	[1, 2],	// Tomes, large (medium) charms, daggers...
	[1, 3],	// Grand charms, javelins, et cetera...
	[1, 4],	// Champion swords, et cetera...
	[2, 1],	// Belts
	[2, 2],	// Helms, boots, gloves...
	[2, 3],	// Body armor, short bows, et cetera...
	[2, 4]	// Polearms, spears, et cetera...
];
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_CONT_SIZE_1_X_1 = 0;
var D2JSP_ITEM_CONT_SIZE_1_X_2 = 1;
var D2JSP_ITEM_CONT_SIZE_1_X_3 = 2;
var D2JSP_ITEM_CONT_SIZE_1_X_4 = 3;
var D2JSP_ITEM_CONT_SIZE_2_X_1 = 4;
var D2JSP_ITEM_CONT_SIZE_2_X_2 = 5;
var D2JSP_ITEM_CONT_SIZE_2_X_3 = 6;
var D2JSP_ITEM_CONT_SIZE_2_X_4 = 7;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
/*
	CODE NOTE: To be removed.
var D2JSP_ITEM_PerLevelMaxStashGold = [
	[  1,  9,   50000 ],
	[ 10, 19,  100000 ],
	[ 20, 29,  150000 ],
	[ 30, 30,  200000 ],
	[ 31, 31,  800000 ],
	[ 32, 33,  850000 ],
	[ 34, 35,  900000 ],
	[ 36, 37,  950000 ],
	[ 38, 39, 1000000 ],
	[ 40, 41, 1050000 ],
	[ 42, 43, 1100000 ],
	[ 44, 45, 1150000 ],
	[ 46, 47, 1200000 ],
	[ 48, 49, 1250000 ],
	[ 50, 51, 1300000 ],
	[ 52, 53, 1350000 ],
	[ 54, 55, 1400000 ],
	[ 56, 57, 1450000 ],
	[ 58, 59, 1500000 ],
	[ 60, 61, 1550000 ],
	[ 62, 63, 1600000 ],
	[ 64, 65, 1650000 ],
	[ 66, 67, 1700000 ],
	[ 68, 69, 1750000 ],
	[ 70, 71, 1800000 ],
	[ 72, 73, 1850000 ],
	[ 74, 75, 1900000 ],
	[ 76, 77, 1950000 ],
	[ 78, 79, 2000000 ],
	[ 80, 81, 2050000 ],
	[ 82, 83, 2100000 ],
	[ 84, 85, 2150000 ],
	[ 86, 87, 2200000 ],
	[ 88, 89, 2250000 ],
	[ 90, 91, 2300000 ],
	[ 92, 93, 2350000 ],
	[ 94, 95, 2400000 ],
	[ 96, 97, 2450000 ],
	[ 98, 99, 2500000 ]
];
*/
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Ripped-off from Scavenger's multi-bot...
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_COLOR_WHITE  = D2JSP_UTIL_COLOR_WHITE;
var D2JSP_ITEM_COLOR_GREEN  = D2JSP_UTIL_COLOR_GREEN;
var D2JSP_ITEM_COLOR_BLUE   = D2JSP_UTIL_COLOR_BLUE;
var D2JSP_ITEM_COLOR_GOLD   = D2JSP_UTIL_COLOR_GOLD;
var D2JSP_ITEM_COLOR_GOLD2  = D2JSP_UTIL_COLOR_GOLD2;
var D2JSP_ITEM_COLOR_GRAY   = D2JSP_UTIL_COLOR_GRAY;
var D2JSP_ITEM_COLOR_ORANGE = D2JSP_UTIL_COLOR_ORANGE;
var D2JSP_ITEM_COLOR_YELLOW = D2JSP_UTIL_COLOR_YELLOW;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_COLORED_ITEM_NAME_MAX = 52;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Data used in belt management...
// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_BeltCellUpgrades = new Array();
D2JSP_ITEM_BeltCellUpgrades["hp1"] = ["hp2", "hp3", "rvs", "hp4", "hp5", "rvl"];
D2JSP_ITEM_BeltCellUpgrades["hp2"] = ["hp3", "rvs", "hp4", "hp5", "rvl"];
D2JSP_ITEM_BeltCellUpgrades["hp3"] = ["rvs", "hp4", "hp5", "rvl"];
D2JSP_ITEM_BeltCellUpgrades["hp4"] = ["hp5", "rvl"];
D2JSP_ITEM_BeltCellUpgrades["hp5"] = ["rvl"];
D2JSP_ITEM_BeltCellUpgrades["mp1"] = ["mp2", "mp3", "rvs", "mp4", "mp5", "rvl"];
D2JSP_ITEM_BeltCellUpgrades["mp2"] = ["mp3", "rvs", "mp4", "mp5", "rvl"];
D2JSP_ITEM_BeltCellUpgrades["mp3"] = ["rvs", "mp4", "mp5", "rvl"];
D2JSP_ITEM_BeltCellUpgrades["mp4"] = ["mp5", "rvl"];
D2JSP_ITEM_BeltCellUpgrades["mp5"] = ["rvl"];
D2JSP_ITEM_BeltCellUpgrades["rvs"] = ["rvl"];
D2JSP_ITEM_BeltCellUpgrades["rvl"] = new Array();
D2JSP_ITEM_BeltCellUpgrades["isc"] = new Array();
D2JSP_ITEM_BeltCellUpgrades["tsc"] = new Array();
D2JSP_ITEM_BeltCellUpgrades["yps"] = new Array();
D2JSP_ITEM_BeltCellUpgrades["vps"] = new Array();
D2JSP_ITEM_BeltCellUpgrades["wms"] = new Array();

var D2JSP_ITEM_BeltCellPriorities = [
	"rvl",
	"hp5",
	"mp5",
	"hp4",
	"mp4",
	"rvs",
	"hp3",
	"mp3",
	"hp2",
	"mp2",
	"hp1",
	"mp1",
	"isc",
	"tsc",
	"yps",
	"vps",
	"wms"
];

var D2JSP_ITEM_BeltCellPotList = new Array();
D2JSP_ITEM_BeltCellPotList["rvl"] = 0;
D2JSP_ITEM_BeltCellPotList["hp5"] = 0;
D2JSP_ITEM_BeltCellPotList["mp5"] = 0;
D2JSP_ITEM_BeltCellPotList["hp4"] = 0;
D2JSP_ITEM_BeltCellPotList["mp4"] = 0;
D2JSP_ITEM_BeltCellPotList["rvs"] = 0;
D2JSP_ITEM_BeltCellPotList["hp3"] = 0;
D2JSP_ITEM_BeltCellPotList["mp3"] = 0;
D2JSP_ITEM_BeltCellPotList["hp2"] = 0;
D2JSP_ITEM_BeltCellPotList["mp2"] = 0;
D2JSP_ITEM_BeltCellPotList["hp1"] = 0;
D2JSP_ITEM_BeltCellPotList["mp1"] = 0;
D2JSP_ITEM_BeltCellPotList["yps"] = 0;
D2JSP_ITEM_BeltCellPotList["vps"] = 0;
D2JSP_ITEM_BeltCellPotList["wms"] = 0;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
var D2JSP_ITEM_STORE_TabList = [
	"Armor tab",
	"Weapons tab 1",
	"Weapons tab 2",
	"Miscellaneous tab"
];
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_UniqueItemNameParseToName(in_name)
{
	var tmp_name = D2JSP_ITEM_UniqueItemNameParseToCode(in_name);

	return((tmp_name != null) ? D2JSP_ITEM_UniqueList[tmp_name] : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_UniqueItemNameParseToCode(in_name)
{
	var tmp_name = D2JSP_UTIL_FORMAT_OneSpace(D2JSP_UTIL_FORMAT_Trim(
							in_name + "")).toLowerCase();

	return((tmp_name in D2JSP_ITEM_UniqueNameList) ?
		D2JSP_ITEM_UniqueNameList[tmp_name] : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_SetItemNameParseToName(in_name)
{
	var tmp_name = D2JSP_UTIL_FORMAT_OneSpace(D2JSP_UTIL_FORMAT_Trim(
							in_name + "")).toLowerCase();

	return((tmp_name in D2JSP_ITEM_SetItemNameList) ?
		D2JSP_ITEM_SetList[D2JSP_ITEM_SetItemNameList[tmp_name]]
		[D2JSP_ITEM_SET_ELEMENT_ITEM_NAME] : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_SetItemNameParseToCode(in_name)
{
	var tmp_name = D2JSP_ITEM_SetItemNameParseToName(in_name).toLowerCase();

	return((tmp_name != null) ?
		D2JSP_ITEM_SetList[tmp_name][D2JSP_ITEM_SET_ELEMENT_CODE] : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_SetNameParseToItemNameList(in_name)
{
	var tmp_name = D2JSP_UTIL_FORMAT_OneSpace(D2JSP_UTIL_FORMAT_Trim(
							in_name + "")).toLowerCase();

	return((tmp_name in D2JSP_ITEM_SetNameList) ?
		D2JSP_UTIL_GEN_CloneObject(D2JSP_ITEM_SetNameList[tmp_name]) : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_SetNameParseToItemCodeList(in_name)
{
	var out_list      = null;
	var tmp_name_list = D2JSP_ITEM_SetNameParseToItemNameList(in_name);
	var count_1;

	if (tmp_name_list != null) {
		for (count_1 = 0; count_1 < tmp_name_list.length; count_1++)
			out_list.push(D2JSP_UTIL_GEN_CloneObject(
				D2JSP_ITEM_SetList[tmp_name_list[count_1]]
				[D2JSP_ITEM_SET_ELEMENT_CODE]));
	}

	return(out_list);
}
// ////////////////////////////////////////////////////////////////////////////

// Work-around for unidentifed rare affix bug in core.
// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemPrefix(in_item)
{
	return(((in_item.getFlag(D2JSP_ITEMFLAG_IDENTIFIED) ||
		(in_item.quality != D2JSP_ITEM_QUALITY_RARE)) &&
		(in_item.quality != D2JSP_ITEM_QUALITY_SET) &&
		(in_item.quality != D2JSP_ITEM_QUALITY_UNIQUE)) ? in_item.prefix : "");
}
// ////////////////////////////////////////////////////////////////////////////

// Work-around for unidentifed rare affix bug in core.
// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemSuffix(in_item)
{
	return(((in_item.getFlag(D2JSP_ITEMFLAG_IDENTIFIED) ||
		(in_item.quality != D2JSP_ITEM_QUALITY_RARE)) &&
		(in_item.quality != D2JSP_ITEM_QUALITY_SET) &&
		(in_item.quality != D2JSP_ITEM_QUALITY_UNIQUE)) ? in_item.suffix : "");
}
// ////////////////////////////////////////////////////////////////////////////

// Work-around for embedded line-feed in the Book of Skill name (perhaps others)
// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemName(in_item)
{
	var tmp_name = in_item.name;

	tmp_name = tmp_name.replace(/^.+(\x0a)/g, "");

	return(tmp_name);
}
// ////////////////////////////////////////////////////////////////////////////

// Work-around for unidentifed rare affix bug in core.
// Added work-around for embedded carriage-returns and color information in
// 29+ core versions.
// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemFName(in_item)
{
/*
	return((in_item.getFlag(D2JSP_ITEMFLAG_IDENTIFIED) ||
		(in_item.quality != D2JSP_ITEM_QUALITY_RARE)) ? in_item.fname :
		in_item.name);
*/
	var tmp_fname = (in_item.getFlag(D2JSP_ITEMFLAG_IDENTIFIED) ||
		(in_item.quality != D2JSP_ITEM_QUALITY_RARE)) ? in_item.fname :
		in_item.name;

	tmp_fname = tmp_fname.replace(/^.+(\x0a)/g, "");
	tmp_fname = tmp_fname.replace(/\xff+(c\d)/g, "");

	return(tmp_fname);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemXSize(in_item)
{
	return((parseFloat(me.version) < 0.3316) ? in_item.xsize :
		D2JSP_UTIL_GetBaseStatItem(in_item, D2JSP_BASE_ITEMS_INVWIDTH));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemYSize(in_item)
{
	return((parseFloat(me.version) < 0.3316) ? in_item.ysize :
		D2JSP_UTIL_GetBaseStatItem(in_item, D2JSP_BASE_ITEMS_INVHEIGHT));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemType(in_item)
{
	return((parseFloat(me.version) < 0.3316) ? in_item.itemtype :
		D2JSP_UTIL_GetBaseStatItem(in_item, D2JSP_BASE_ITEMS_TYPE));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemCategory(in_item)
{
	return((in_item.code in D2JSP_ITEM_ItemList) ?
		D2JSP_ITEM_ItemList[in_item.code][D2JSP_ITEM_ELEMENT_CATEGORY] : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_IsValidCode(item_code)
{
	return((typeof(D2JSP_ITEM_ItemList[item_code.toLowerCase()]) == "object") ?
		true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CodeToName(item_code)
{
	var tmp = D2JSP_ITEM_ItemList[item_code.toLowerCase()];

	return((typeof(tmp) == "object") ? tmp[D2JSP_ITEM_ELEMENT_NAME] : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CodeToType(item_code)
{
	var tmp = D2JSP_ITEM_ItemList[item_code.toLowerCase()];

	return((typeof(tmp) == "object") ? tmp[D2JSP_ITEM_ELEMENT_ITEMTYPE] : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_NameToCode(item_name)
{
	var tmp = D2JSP_ITEM_NameToCodeList[item_name.toLowerCase()];

	return((typeof(tmp) ==  "string") ? tmp : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_MaxGoldInInventory(level)
{
	var max_gold_in_stash = 0;
	var count_1;

	level = (arguments.length) ? level : me.getStat(D2JSP_STAT_LEVEL);
	level = Math.floor((level < 1) ? 1 : ((level > 99) ? 99 : level));

	return(level * 10000);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_MaxGoldInStash(level)
{
/*
	CODE NOTE: To be removed.
	var max_gold_in_stash = 0;
	var count_1;

	level = (arguments.length) ? level : me.getStat(D2JSP_STAT_LEVEL);
	level = Math.floor((level < 1) ? 1 : ((level > 99) ? 99 : level));

	for (count_1 = 0; count_1 < D2JSP_ITEM_PerLevelMaxStashGold.length;
		count_1++) {
		if ((level >= D2JSP_ITEM_PerLevelMaxStashGold[count_1][0]) && 
			(level <= D2JSP_ITEM_PerLevelMaxStashGold[count_1][1])) {
			max_gold_in_stash = D2JSP_ITEM_PerLevelMaxStashGold[count_1][2];
			break;
		}
	}

	return(max_gold_in_stash);
*/

	level = (arguments.length) ? level : me.getStat(D2JSP_STAT_LEVEL);
	level = Math.floor((level < 1) ? 1 : ((level > 99) ? 99 : level));

	return((level > 30) ? ((Math.floor(level / 2) + 1) * 50000) :
		((Math.floor(level / 10) + 1) * 50000));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_MyGoldTotal()
{
	return(me.getStat(D2JSP_STAT_GOLD) + me.getStat(D2JSP_STAT_GOLDBANK));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_MyGoldMax()
{
	return(D2JSP_ITEM_MaxGoldInInventory() + D2JSP_ITEM_MaxGoldInStash());
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CanMoveExcessGoldToStash()
{
	return((me.getStat(D2JSP_STAT_GOLD) &&
		(me.getStat(D2JSP_STAT_GOLDBANK) < D2JSP_ITEM_MaxGoldInStash())) ?
		Math.min(me.getStat(D2JSP_STAT_GOLD),
			D2JSP_ITEM_MaxGoldInStash() - me.getStat(D2JSP_STAT_GOLDBANK)) : 0);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_ShouldMoveExcessGoldToStash()
{
	var gold_to_move = D2JSP_ITEM_CanMoveExcessGoldToStash();

	if (gold_to_move) {
		var max_gold_inventory = D2JSP_ITEM_MaxGoldInInventory();
		var max_gold_stash     = D2JSP_ITEM_MaxGoldInStash();
		var max_gold_total     = max_gold_inventory + max_gold_stash;
		var now_gold_inventory = me.getStat(D2JSP_STAT_GOLD);
		var now_gold_stash     = me.getStat(D2JSP_STAT_GOLDBANK);
		var add_gold_inventory = max_gold_inventory - now_gold_inventory;
		var add_gold_stash     = max_gold_stash - now_gold_stash;
		// If the amount of gold to move is high enough, always move it...
		if (((max_gold_total <= 1000000) && (gold_to_move >= 50000)) ||
			 (gold_to_move >= 100000))
{
	D2JSP_UTIL_LOG_GetALog().logInfo("GOLD MOVE 1: to move = " + gold_to_move);
			;
}
		// If there is no gold in the stash, move it...
		else if (!now_gold_stash)
{
	D2JSP_UTIL_LOG_GetALog().logInfo("GOLD MOVE 2: stash is empty");
			;
}
		// If the gold to be moved is greater than 25% of the maximum
		// which can be held in the inventory, move it...
		else if (gold_to_move > (max_gold_inventory / 4))
{
	D2JSP_UTIL_LOG_GetALog().logInfo("GOLD MOVE 3: to move = " + gold_to_move +
		", max inventory gold / 4 = " + (max_gold_inventory / 4));
			;
}
		// If the gold to be moved is greater than 10% of the maximum
		// which can be held in the stash, move it...
		else if (gold_to_move > (max_gold_stash / 10))
{
	D2JSP_UTIL_LOG_GetALog().logInfo("GOLD MOVE 4: to move = " + gold_to_move +
		", max stash / 10 = " + (max_gold_stash / 10));
			;
}
		// If the gold to be moved is greater than 5% of the current gold in
		// the stash, move it...
		else if (gold_to_move > (now_gold_stash / 20))
{
	D2JSP_UTIL_LOG_GetALog().logInfo("GOLD MOVE 5: to move = " + gold_to_move +
		", now stash / 20 = " + (now_gold_stash / 20));
			;
}
		// If the gold to be moved will top-off the stash, move the gold...
		else if (gold_to_move >= add_gold_stash)
{
	D2JSP_UTIL_LOG_GetALog().logInfo("GOLD MOVE 6: to move = " + gold_to_move +
		">= add stash = " + add_gold_stash);
			;
}
		else
			gold_to_move = 0;
	}

	return(gold_to_move);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_ItemToFullName(in_item)
{
	var item_prefix;
	var item_suffix;

	if (in_item.code != "gld") {
		if (in_item.quality >= D2JSP_ITEM_QUALITY_MAGIC) {
			item_prefix = D2JSP_ITEM_GetItemPrefix(in_item);
			item_suffix = D2JSP_ITEM_GetItemSuffix(in_item);
		}
		if (in_item.quality != D2JSP_ITEM_QUALITY_CRAFTED)
			return(D2JSP_ITEM_QualityToName(in_item.quality) + " " +
				((item_prefix) ? (item_prefix + " ") : "") +
				in_item.name + ((item_suffix) ? (" " + item_suffix) : ""));
		else
			return(D2JSP_ITEM_QualityToName(in_item.quality) + " " +
				((item_prefix) ? (item_prefix + " ") : "") +
				((item_suffix) ? (item_suffix + " ") : "") + in_item.name);
	}
	else
		return(in_item.getStat(D2JSP_STAT_GOLD) + " gold");
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_FixFName(in_item)
{
	var this_fname = D2JSP_ITEM_GetItemFName(in_item);

	if (typeof(this_fname) == "string") {
		this_fname = D2JSP_UTIL_FORMAT_Trim(this_fname.replace(/\(null\)/g, ""));
		if ((in_item.quality == D2JSP_ITEM_QUALITY_RARE) ||
			(in_item.quality == D2JSP_ITEM_QUALITY_CRAFTED))
			this_fname += " " + in_item.name;
	}
	else
		this_fname = "";

	return(this_fname);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_IsValidQuality(quality_number)
{
	return(((quality_number >= D2JSP_ITEM_QUALITY_MINIMUM) &&
		(quality_number <= D2JSP_ITEM_QUALITY_MAXIMUM)) ? true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_QualityToName(quality_number)
{
	return((D2JSP_ITEM_IsValidQuality(quality_number)) ?
		D2JSP_ITEM_QUALITY_QualityToNameList[quality_number] : "*INVALID*");
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_NameToQuality(quality_name)
{
	var quality_name = quality_name.toLowerCase();

	return(((quality_name == "low") || (quality_name == "lowquality") ||
		(quality_name == "crude") || (quality_name == "cracked") ||
		(quality_name == "damaged")) ? D2JSP_ITEM_QUALITY_LOW_QUALITY :
		((typeof(D2JSP_ITEM_QUALITY_NameToQualityList[quality_name]) ==
		"number") ? D2JSP_ITEM_QUALITY_NameToQualityList[quality_name] : -1));
/*
	return((typeof(D2JSP_ITEM_QUALITY_NameToQualityList
		[quality_name.toLowerCase()]) == "number") ?
		D2JSP_ITEM_QUALITY_NameToQualityList[quality_name.toLowerCase()] : -1);
*/
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_QualityParseToNumber(in_quality)
{
	var tmp_number;
	var tmp_data;

	in_quality = D2JSP_UTIL_FORMAT_Trim(in_quality + "");
	tmp_data   = in_quality;
	tmp_data   = tmp_data.replace(/^\s+|\s+$/g, "");
	tmp_data   = tmp_data.replace(/\s+/g, "_");
	tmp_data   = tmp_data.replace(/^[^A-Za-z_]|[^A-Za-z0-9_]/g, "");
	tmp_data   = (tmp_data != "") ? tmp_data : "\"\"";

	if (D2JSP_UTIL_FORMAT_IsDigit(in_quality)) {
		tmp_number = parseInt(in_quality, 10);
		return((D2JSP_ITEM_IsValidQuality(tmp_number)) ? tmp_number : -1);
	}
	else if (eval("((typeof(D2JSP_ITEM_QUALITY_" + tmp_data.toUpperCase() +
		") == \"number\") ? true : false)"))
		return(eval("D2JSP_ITEM_QUALITY_" + tmp_data.toUpperCase()));
	else if (eval("((typeof(" + tmp_data.toUpperCase() +
		") == \"number\") ? true : false)"))
		return(eval(tmp_data.toUpperCase()));
	else
		return(D2JSP_ITEM_NameToQuality(in_quality));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_QualityParseToName(in_quality)
{
	var tmp_number = D2JSP_ITEM_QualityParseToNumber(in_quality);

	return(D2JSP_ITEM_QualityToName(tmp_number));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_IsValidItemClass(itemclass_number)
{
	return(((itemclass_number >= D2JSP_ITEM_CLASS_MINIMUM) &&
		(itemclass_number <= D2JSP_ITEM_CLASS_MAXIMUM)) ? true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemClass(in_obj)
{
	return(((in_obj.itemclass == null) ||
		(typeof(in_obj.itemclass) != "number")) ? 0 : in_obj.itemclass);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_ItemClassToName(itemclass_number)
{
	return((D2JSP_ITEM_IsValidItemClass(itemclass_number)) ?
		D2JSP_ITEM_CLASS_ClassToNameList[itemclass_number] : "*INVALID*");
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_NameToItemClass(itemclass_name)
{
	itemclass_name = itemclass_name.toLowerCase();

	return((itemclass_name == "norm") ? D2JSP_ITEM_CLASS_NORMAL :
		((itemclass_name == "except") || (itemclass_name == "exception")) ?
		D2JSP_ITEM_CLASS_EXCEPTIONAL :
		(typeof(D2JSP_ITEM_CLASS_NameToClassList[itemclass_name]) ==
		"number") ? D2JSP_ITEM_CLASS_NameToClassList[itemclass_name] : -1);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_ItemClassParseToNumber(in_itemclass)
{
	var tmp_number;
	var tmp_name;
	var tmp_data;

	in_itemclass = D2JSP_UTIL_FORMAT_Trim(in_itemclass + "");
	tmp_data     = in_itemclass;
	tmp_data     = tmp_data.replace(/^\s+|\s+$/g, "");
	tmp_data     = tmp_data.replace(/\s+/g, "_");
	tmp_data     = tmp_data.replace(/^[^A-Za-z_]|[^A-Za-z0-9_]/g, "");
	tmp_data     = (tmp_data != "") ? tmp_data : "\"\"";

	if (D2JSP_UTIL_FORMAT_IsDigit(in_itemclass)) {
		tmp_number = parseInt(in_itemclass, 10);
		return((D2JSP_ITEM_IsValidItemClass(tmp_number)) ? tmp_number : -1);
	}
	else if (eval("((typeof(D2JSP_ITEM_CLASS_" + tmp_data.toUpperCase() +
		") == \"number\") ? true : false)"))
		return(eval("D2JSP_ITEM_CLASS_" + tmp_data.toUpperCase()));
	else if (eval("((typeof(" + tmp_data.toUpperCase() +
		") == \"number\") ? true : false)"))
		return(eval(tmp_data.toUpperCase()));
	else
		return(D2JSP_ITEM_NameToItemClass(in_itemclass));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_ItemClassParseToName(in_itemclass)
{
	var tmp_number = D2JSP_ITEM_ItemClassParseToNumber(in_itemclass);

	return(D2JSP_ITEM_ItemClassToName(tmp_number));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_IsValidCategory(category_number)
{
	return(((category_number >= D2JSP_ITEM_CATEGORY_MINIMUM) &&
		(category_number <= D2JSP_ITEM_CATEGORY_MAXIMUM)) ? true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CategoryToName(category_number)
{
	return((D2JSP_ITEM_IsValidCategory(category_number)) ?
		D2JSP_ITEM_CategoryToNameList[category_number] : "*INVALID*");
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_NameToCategory(category_name)
{
	var category_name = category_name.toLowerCase();

	return((typeof(D2JSP_ITEM_NameToCategoryList[category_name]) ==
		"number") ? D2JSP_ITEM_NameToCategoryList[category_name] : -1);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CategoryParseToNumber(in_category)
{
	var tmp_number;
	var tmp_name;
	var tmp_data;

	in_category = D2JSP_UTIL_FORMAT_Trim(in_category + "");
	tmp_data    = in_category;
	tmp_data    = tmp_data.replace(/^\s+|\s+$/g, "");
	tmp_data    = tmp_data.replace(/\s+/g, "_");
	tmp_data    = tmp_data.replace(/^[^A-Za-z_]|[^A-Za-z0-9_]/g, "");
	tmp_data    = (tmp_data != "") ? tmp_data : "\"\"";

	if (D2JSP_UTIL_FORMAT_IsDigit(in_category)) {
		tmp_number = parseInt(in_category, 10);
		return((D2JSP_ITEM_IsValidCategory(tmp_number)) ? tmp_number : -1);
	}
	else if (eval("((typeof(D2JSP_ITEM_CATEGORY_" + tmp_data.toUpperCase() +
		") == \"number\") ? true : false)"))
		return(eval("D2JSP_ITEM_CATEGORY_" + tmp_data.toUpperCase()));
	else if (eval("((typeof(" + tmp_data.toUpperCase() +
		") == \"number\") ? true : false)"))
		return(eval(tmp_data.toUpperCase()));
	else
		return(D2JSP_ITEM_NameToCategory(in_category));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CategoryParseToName(in_category)
{
	var tmp_number = D2JSP_ITEM_CategoryParseToNumber(in_category);

	return(D2JSP_ITEM_CategoryToName(tmp_number));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasScrollOfInifuss()
{
	return(D2JSP_ITEM_HasItem("bks"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasKeyToTheCairnStones()
{
	return(D2JSP_ITEM_HasItem("bkd"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasWirtsLeg()
{
	return(D2JSP_ITEM_HasItem("leg"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasHoradricMalus()
{
	return(D2JSP_ITEM_HasItem("hdm"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasBookOfSkill()
{
	return(D2JSP_ITEM_HasItem("ass"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasHoradricCube()
{
	return(D2JSP_ITEM_HasItem("box"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HoradricCubeIsStored()
{
	var cube_location = D2JSP_ITEM_HoradricCubeLocation();

	return(((cube_location == D2JSP_ITEMLOC_INVENTORY) ||
		(cube_location == D2JSP_ITEMLOC_STASH)) ? true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HoradricCubeLocation()
{
	var this_obj = getUnit(D2JSP_UTIL_GETUNIT_ITEM, "Horadric Cube");

	return((!this_obj) ? - 1 : this_obj.itemloc);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasHoradricScroll()
{
	return(D2JSP_ITEM_HasItem("tr1"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasStaffOfKings()
{
	return(D2JSP_ITEM_HasItem("msf"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasViperAmulet()
{
	return(D2JSP_ITEM_HasItem("vip"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasHoradricStaff()
{
	return(D2JSP_ITEM_HasItem("hst"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasGidbinn()
{
	return(D2JSP_ITEM_HasItem("g33"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasJadeFigurine()
{
	return(D2JSP_ITEM_HasItem("j34"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasGoldenBird()
{
	return(D2JSP_ITEM_HasItem("g34"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasKhalimsEye()
{
	return(D2JSP_ITEM_HasItem("qey"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasKhalimsHeart()
{
	return(D2JSP_ITEM_HasItem("qhr"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasKhalimsBrain()
{
	return(D2JSP_ITEM_HasItem("qbr"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasLamEsensTome()
{
	return(D2JSP_ITEM_HasItem("bbb"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasKhalimsFlail()
{
	return(D2JSP_ITEM_HasItem("qf1"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasKhalimsWill()
{
	return(D2JSP_ITEM_HasItem("qf2"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasSoulStone()
{
	return(D2JSP_ITEM_HasItem("mss"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasHellforgeHammer()
{
	return(D2JSP_ITEM_HasItem("hfh"));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_HasItem(item_spec)
{
	var results_data= D2JSP_OBJ_IterateItem(null, D2JSP_OBJ_FilterParentMe,
		D2JSP_OBJ_ActionStop, item_spec);

	return((results_data[D2JSP_OBJ_ACTION_COUNT]) ?
		results_data[D2JSP_OBJ_LAST_OBJECT] : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_IsQuestItem(item_spec)
{
	return(D2JSP_ITEM_IsQuestItemCode(item_spec.code));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_IsQuestItemCode(item_code)
{
	return((item_code in D2JSP_ITEM_QuestItemCodeList) ? true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_IsValidTomeCode(tome_name)
{
	return(((tome_name == "ibk") || (tome_name == "tbk")) ? true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_IsValidScrollCode(scroll_name)
{
	return(((scroll_name == "isc") || (scroll_name == "tsc")) ? true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_TomeToScrollCode(tome_name)
{
	return((tome_name == "ibk") ? "isc" : (tome_name == "tbk") ? "tsc" : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_STORE_TabCodeToName(tab_code)
{
	return(((tab_code != null) && (tab_code >= 0) &&
		(tab_code < D2JSP_ITEM_STORE_TabList.length)) ?
		D2JSP_ITEM_STORE_TabList[tab_code] : null);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_IsValid(container_src)
{
	return(((container_src >= 0) &&
		(container_src < D2JSP_ITEM_CONT_SourceData.length)) ?
		true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_IsValidMap(container_src, container_map)
{
	var count_1;

	if ((arguments.length < 2) || (!D2JSP_ITEM_CONT_IsValid(container_src)) ||
		(!D2JSP_UTIL_GEN_TypeOfArrayIndexed(container_map)) ||
		(container_map.length !=
			D2JSP_ITEM_CONT_SourceData[container_src][3]))
		return(false);

	for (count_1 = 0; count_1 < container_map.length; count_1++) {
		if (container_map[count_1].length !=
			D2JSP_ITEM_CONT_SourceData[container_src][2])
			return(false);
	}

	return(true);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_IsValidMapList(container_map_list)
{
	var count_1;

	if ((arguments.length != 1) ||
		(!D2JSP_UTIL_GEN_TypeOfArrayIndexed(container_map_list)) ||
		(container_map_list.length != D2JSP_ITEM_CONT_COUNT))
		return(false);

	for (count_1 = 0; count_1 < D2JSP_ITEM_CONT_COUNT; count_1++) {
		if (!D2JSP_ITEM_CONT_IsValidMap(count_1, container_map_list[count_1]))
			return(false);
	}

	return(true);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_ToName(container_src)
{
	return((D2JSP_ITEM_CONT_IsValid(container_src)) ?
		D2JSP_ITEM_CONT_SourceData[container_src][0] : "*INVALID*");
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_BuildMapEmptyList()
{
	var container_map_list = new Array(D2JSP_ITEM_CONT_COUNT);
	var count_1;

	for (count_1 = D2JSP_ITEM_CONT_MINIMUM; count_1 <= D2JSP_ITEM_CONT_MAXIMUM;
		count_1++)
		container_map_list[count_1] = D2JSP_ITEM_CONT_BuildMapEmpty(count_1);

	return(container_map_list);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_BuildMapEmpty(container_src)
{
	var container_map = null;
	var count_1;
	var count_2;

	if (D2JSP_ITEM_CONT_IsValid(container_src)) {
		container_map =
			new Array(D2JSP_ITEM_CONT_SourceData[container_src][3]);
		for (count_1 = 0; count_1 < container_map.length; count_1++) {
			container_map[count_1] =
				new Array(D2JSP_ITEM_CONT_SourceData[container_src][2]);
			for (count_2 = 0; count_2 < container_map[count_1].length; count_2++)
				container_map[count_1][count_2] = 0;
		}
	}

	return(container_map);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_BuildMapList()
{
	var container_map_list = new Array(D2JSP_ITEM_CONT_COUNT);
	var count_1;

	for (count_1 = D2JSP_ITEM_CONT_MINIMUM; count_1 <= D2JSP_ITEM_CONT_MAXIMUM;
		count_1++)
		container_map_list[count_1] = D2JSP_ITEM_CONT_BuildMap(count_1);

	return(container_map_list);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_BuildMap(container_src)
{
	var container_map = null;
	var my_name       = new String(me.name);
	var this_parent;
	var this_item;
	var count_1;
	var count_2;

	if (D2JSP_ITEM_CONT_IsValid(container_src)) {
		container_map =
			new Array(D2JSP_ITEM_CONT_SourceData[container_src][3]);
		for (count_1 = 0; count_1 < container_map.length; count_1++) {
			container_map[count_1] =
				new Array(D2JSP_ITEM_CONT_SourceData[container_src][2]);
			for (count_2 = 0; count_2 < container_map[count_1].length; count_2++)
				container_map[count_1][count_2] = 0;
		}
		this_item = getUnit(D2JSP_UTIL_GETUNIT_ITEM);
		if (this_item) {
			do {
				this_parent = this_item.getParent();
				if (this_parent && (this_parent.name == me.name) &&
					(this_item.mode == D2JSP_MODE_ITEM_INVEN_STASH_CUBE_STORE) &&
					(this_item.itemloc ==
					D2JSP_ITEM_CONT_SourceData[container_src][1])) {
					var xsize = D2JSP_ITEM_GetItemXSize(this_item);
					var ysize = D2JSP_ITEM_GetItemYSize(this_item);
					for (count_1 = 0; count_1 < ysize; count_1++) {
						for (count_2 = 0; count_2 < xsize; count_2++)
							container_map[this_item.y + count_1]
								[this_item.x + count_2] = 1;
					}
				}
			} while (this_item && this_item.getNext());
		}
	}

	return(container_map);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_LogMapList(container_map_list, out_func)
{
	var count_1;

	container_map_list = (container_map_list != null) ? container_map_list :
		D2JSP_ITEM_CONT_BuildMapList();

	for (count_1 = 0; count_1 < D2JSP_ITEM_CONT_COUNT; count_1++)
		D2JSP_ITEM_CONT_LogMap(count_1, container_map_list[count_1], out_func);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_LogMap(container_src, container_map, out_func)
{
	var out_list   = new Array();
	var tmp_string = "--------------------";
	var count_1;
	var count_2;
	var row;

	out_list.push(D2JSP_ITEM_CONT_ToName(container_src));
	out_list.push("+"+tmp_string.substr(0, container_map[0].length)+"+");

	for (count_1 = 0; count_1 < container_map.length; count_1++) {
		row = "";
		for (count_2 = 0; count_2 < container_map[count_1].length; count_2++)
			row += ((container_map[count_1][count_2]) ? "X" : " ");
		out_list.push("|" + row + "|");
	}

	out_list.push("+"+tmp_string.substr(0, container_map[0].length)+"+");

	for (count_1 = 0; count_1 < out_list.length; count_1++) {
		if (out_func == null)
			D2JSP_UTIL_LOG_GetALog().logInfoQuiet(out_list[count_1]);
		else if (out_func instanceof D2JSP_UTIL_Log)
			out_func.logInfoQuiet(out_list[count_1]);
		else if (typeof(out_func) != "function")
			out_func.writeLine(out_list[count_1]);
		else
			out_func(out_list[count_1]);
	}
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_ItemMove(this_item, container_map_list, container_src,
	iter_count, iter_time)
{
	var item_destination;
	var count_1;
	var stash_obj;

	if ((arguments.length < 2) || (arguments.length > 3) ||
		(!D2JSP_ITEM_CONT_IsValidMapList(container_map_list)))
		return(null);

	// If a container has been specified, and the item's already in that
	// container, we're done.
	if ((arguments.length == 3) &&
		(container_src == D2JSP_ITEM_CONT_ItemContainer(this_item)))
		return([container_src, this_item.x, this_item.y]);

	// If the container specified is the Horadric Cube, and the player
	// doesn't have one, we can't proceed.
	if ((container_src == D2JSP_ITEM_CONT_SRC_CUBE) &&
		(!D2JSP_ITEM_HasHoradricCube()))
		return(null)

	// If no valid contaner was specified and the item is already in a
	// container, we try to put the item into some other container.
	if (((arguments.length < 3) || (!D2JSP_ITEM_CONT_IsValid(container_src))) &&
		D2JSP_ITEM_CONT_ItemIsContained(this_item)) {
		for (count_1 = 0; count_1 < D2JSP_ITEM_CONT_COUNT; count_1++) {
			if (count_1 != D2JSP_ITEM_CONT_ItemContainer(this_item)) {
				if ((item_destination = D2JSP_ITEM_CONT_FindSpaceForItem(this_item,
					container_map_list, count_1)) != null)
					break;
			}
		}
	}
	else											// Otherwise, find a place for it.
		item_destination = D2JSP_ITEM_CONT_FindSpaceForItem(this_item,
			container_map_list, container_src);

	if (item_destination)
		item_destination = D2JSP_ITEM_CONT_ItemMoveTo(this_item,
			item_destination[0], item_destination[1], item_destination[2],
			iter_count, iter_time);

	return(item_destination);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_ItemMoveTo(this_item, container_src, move_x,
	move_y, iter_count, iter_time)
{
	var item_dest;
	var count_1;

	if ((arguments.length < 4) || (!D2JSP_ITEM_CONT_IsValid(container_src)))
		return(null);

	iter_count = ((iter_count == undefined) || (!iter_count)) ?
		100 : ((iter_count < 0) ? Number.MAX_VALUE : iter_count);
	iter_time  = ((iter_time == undefined) || (iter_time < 1)) ? 50 : iter_time;

	for (count_1 = 0; count_1 < iter_count; count_1++) {
		if (this_item.mode == D2JSP_MODE_ITEM_ON_CURSOR)
			break;
		clickItem(D2JSP_ITEM_CLICK_BUTTON_LEFT, this_item);
		delay(iter_time);
	}
	if (this_item.mode != D2JSP_MODE_ITEM_ON_CURSOR)
		return(null);

	for (count_1 = 0; count_1 < iter_count; count_1++) {
		if (this_item.mode != D2JSP_MODE_ITEM_ON_CURSOR)
			break;
		clickItem(D2JSP_ITEM_CLICK_BUTTON_LEFT, move_x, move_y,
			D2JSP_ITEM_CONT_SourceData[container_src][1]);
		delay(iter_time);
	}
	if (this_item.mode == D2JSP_MODE_ITEM_ON_CURSOR)
		return(null);

	return([container_src, move_x, move_y]);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_FindSpaceForItem(this_item, container_map_list,
	container_src)
{
	return(D2JSP_ITEM_CONT_FindSpace(D2JSP_ITEM_GetItemXSize(this_item),
		D2JSP_ITEM_GetItemYSize(this_item), container_map_list, container_src));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_FindSpace(x_size, y_size, container_map_list,
	container_src)
{
	var free_location = null;
	var count_1;

	if ((arguments.length < 3) || (arguments.length > 4) ||
		(!D2JSP_ITEM_CONT_IsValidMapList(container_map_list)))
		return(free_location);

	if ((arguments.length < 4) || (!D2JSP_ITEM_CONT_IsValid(container_src))) {
		for (count_1 = 0; count_1 < D2JSP_ITEM_CONT_COUNT; count_1++) {
			if ((free_location = D2JSP_ITEM_CONT_FindSpaceBasic(x_size, y_size,
				count_1, container_map_list[count_1])) != null)
				break;
		}
	}
	else
		free_location = D2JSP_ITEM_CONT_FindSpaceBasic(x_size, y_size,
			container_src, container_map_list[container_src]);

	return(free_location);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_FindSpaceBasic(x_size, y_size, container_src,
	container_map)
{
	var free_location = null;
	var count_1;
	var count_2;
	var count_3;
	var count_4;
	var max_x;
	var max_y;
	var start_position_ok;
	var this_position_ok;

	if ((arguments.length < 4) ||
		(!D2JSP_ITEM_CONT_IsValidMap(container_src, container_map)) ||
		(x_size < 0) || (x_size > D2JSP_ITEM_CONT_SourceData[container_src][2]) ||
		(y_size < 0) || (y_size > D2JSP_ITEM_CONT_SourceData[container_src][3]))
		return(null);

	max_x = D2JSP_ITEM_CONT_SourceData[container_src][2] - x_size;
	max_y = D2JSP_ITEM_CONT_SourceData[container_src][3] - y_size;
	start_position_ok = false;

	for (count_1 = 0; count_1 <= max_y; count_1++) {
		for (count_2 = 0; count_2 <= max_x; count_2++) {
			if (!container_map[count_1][count_2]) {
				this_position_ok = true;
				for (count_3 = 0; count_3 < y_size; count_3++) {
					for (count_4 = 0; count_4 < x_size; count_4++) {
						if (container_map[count_1 + count_3][count_2 + count_4]) {
							this_position_ok = false;
							break;
						}
					}
					if (!this_position_ok)
						break;
				}
				if (this_position_ok)
					start_position_ok = true;
			}
			if (start_position_ok) {
				free_location = [container_src, count_2, count_1];
				break;
			}
		}
		if (start_position_ok)
			break;
	}

	return(free_location);
}
// ////////////////////////////////////////////////////////////////////////////

// Note: MUST be called AFTER the item is actually placed into the container.
// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_AddToMapListItem(this_item, container_map_list)
{
	return(D2JSP_ITEM_CONT_UpdateMapListItem(this_item, container_map_list, 1));
}
// ////////////////////////////////////////////////////////////////////////////

// Note: MUST be called BEFORE the item is actually removed from the
// container.
// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_RemoveFromMapListItem(this_item, container_map_list)
{
	return(D2JSP_ITEM_CONT_UpdateMapListItem(this_item, container_map_list, 0));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_UpdateMapListItem(this_item, container_map_list,
	update_value)
{
	var count_1;

	if ((arguments.length == 3) &&
		D2JSP_ITEM_CONT_IsValidMapList(container_map_list) &&
		this_item && this_item.getParent() &&
		(this_item.getParent().name == me.name) &&
		(this_item.mode == D2JSP_MODE_ITEM_INVEN_STASH_CUBE_STORE) &&
		D2JSP_ITEM_CONT_ItemIsContained(this_item) &&
		D2JSP_ITEM_CONT_IsValid(D2JSP_ITEM_CONT_ItemContainer(this_item)))
		return(D2JSP_ITEM_CONT_UpdateMapList(this_item.x, this_item.y,
			D2JSP_ITEM_GetItemXSize(this_item), D2JSP_ITEM_GetItemYSize(this_item),
			D2JSP_ITEM_CONT_ItemContainer(this_item), container_map_list,
			update_value));

	return(false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_UpdateMapList(x_coord, y_coord, x_size, y_size,
	container_src, container_map_list, update_value)
{
	var count_1;
	var count_2;

	if ((arguments.length == 7) && D2JSP_ITEM_CONT_IsValid(container_src) &&
		D2JSP_ITEM_CONT_IsValidMapList(container_map_list) &&
		(x_coord >= 0) && (y_coord >= 0) && (x_size >= 0) && (y_size >= 0) &&
		((x_coord + x_size) <= D2JSP_ITEM_CONT_SourceData[container_src][2]) &&
		((y_coord + y_size) <= D2JSP_ITEM_CONT_SourceData[container_src][3])) {
		update_value = (update_value) ? 1 : 0;
		for (count_1 = 0; count_1 < y_size; count_1++) {
			for (count_2 = 0; count_2 < x_size; count_2++) {
				if (container_map_list[container_src][y_coord + count_1]
					[x_coord + count_2] == update_value)
					return(false);
				container_map_list[container_src][y_coord + count_1]
					[x_coord + count_2] = update_value;
			}
		}
		return(true);
	}

	return(false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_ItemIsContained(this_item)
{
	return((D2JSP_ITEM_CONT_IsValid(D2JSP_ITEM_CONT_ItemContainer(this_item))) ?
		true : false);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_ItemContainer(this_item)
{
	return((this_item.itemloc == D2JSP_ITEMLOC_INVENTORY) ?
		D2JSP_ITEM_CONT_SRC_INVENTORY :
	  ((this_item.itemloc == D2JSP_ITEMLOC_CUBE) ?
		D2JSP_ITEM_CONT_SRC_CUBE :
	  ((this_item.itemloc == D2JSP_ITEMLOC_STASH) ?
		D2JSP_ITEM_CONT_SRC_STASH : -1)));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_GetAvailableSpace(container_map_list)
{
	var size_list = new Array(D2JSP_ITEM_CONT_SizeData.length);

	if (container_map_list == null)
		container_map_list = D2JSP_ITEM_CONT_BuildMapList();
	else if (!D2JSP_ITEM_CONT_IsValidMapList(container_map_list))
		return(null);

	for (var count_1 = 0; count_1 < D2JSP_ITEM_CONT_SizeData.length; count_1++) {
		var tmp_container_map_list = D2JSP_UTIL_GEN_CloneObject(container_map_list);
		size_list[count_1]         = [0, new Array(D2JSP_ITEM_CONT_COUNT)];
		for (var count_2 = 0; count_2 < D2JSP_ITEM_CONT_COUNT; count_2++) {
			var free_location;
			size_list[count_1][1][count_2] = 0;
			if ((count_2 == D2JSP_ITEM_CONT_SRC_CUBE) &&
				(!D2JSP_ITEM_HasHoradricCube()))
				break;
			do {
				free_location =
					D2JSP_ITEM_CONT_FindSpace(D2JSP_ITEM_CONT_SizeData[count_1][0],
					D2JSP_ITEM_CONT_SizeData[count_1][1], tmp_container_map_list,
					count_2);
				if (free_location) {
					D2JSP_ITEM_CONT_UpdateMapList(free_location[1], free_location[2],
						D2JSP_ITEM_CONT_SizeData[count_1][0],
						D2JSP_ITEM_CONT_SizeData[count_1][1], count_2,
						tmp_container_map_list, 1);
					size_list[count_1][0]++;
					size_list[count_1][1][count_2]++;
				}
			} while (free_location);
		}
	}

	return(size_list);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_HasAvailableSpace(x_size, y_size, container_src,
	container_map_list)
{
	var free_location = null;

	if ((x_size > 0) && (x_size <= 10) && (y_size > 0) && (y_size <= 8) &&
		((container_map_list == null) ||
		D2JSP_ITEM_CONT_IsValidMapList(container_map_list))) {
		if (container_map_list == null)
			container_map_list = D2JSP_ITEM_CONT_BuildMapList();
		if (container_src == null) {
			for (var count_1 = 0; count_1 < D2JSP_ITEM_CONT_SRC_COUNT; count_1++) {
				if ((free_location = D2JSP_ITEM_CONT_HasAvailableSpace(x_size,
					y_size, count_1, container_map_list)) != null)
					break;
			}
		}
		else if (D2JSP_ITEM_CONT_IsValid(container_src))
			free_location = D2JSP_ITEM_CONT_FindSpaceBasic(x_size, y_size,
				container_src, container_map_list[container_src]);
	}

	return(free_location);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_CountAvailableSpaces(container_src, container_map_list)
{
	var available_spaces = 0;

	if (D2JSP_ITEM_CONT_IsValid(container_src)) {
		var size_list = D2JSP_ITEM_CONT_GetAvailableSpace(container_map_list);
		available_spaces = size_list[container_src][0];
	}

	return(available_spaces);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_CONT_GetContainerItemList(container_src)
{
	var out_list = new Array();

	if (D2JSP_ITEM_CONT_IsValid(container_src)) {
		var this_item  = getUnit(D2JSP_UTIL_GETUNIT_ITEM);
		if (this_item) {
			do {
				var this_parent = this_item.getParent();
				if (this_parent && (this_parent.name == me.name) &&
					(this_item.mode == D2JSP_MODE_ITEM_INVEN_STASH_CUBE_STORE) &&
					(this_item.itemloc ==
					D2JSP_ITEM_CONT_SourceData[container_src][1]))
					out_list.push(new D2JSP_ITEM_Spec(this_item));
			} while (this_item && this_item.getNext());
		}
	}

	return(out_list);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemListForParent(parent_name)
{
	var out_list = new Array();

	var this_item = getUnit(D2JSP_UTIL_GETUNIT_ITEM);

	if (this_item) {
		do {
			var this_parent = this_item.getParent();
			if (this_parent && (this_parent.name == parent_name))
				out_list.push(new D2JSP_ITEM_Spec(this_item));
		} while (this_item && this_item.getNext());
	}

	return(out_list);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_GetItemNameColor(item_obj)
{
	var color_string;

	switch (item_obj.quality) {
		case D2JSP_ITEM_QUALITY_CRAFTED	:
			color_string = D2JSP_ITEM_COLOR_ORANGE;
			break;
		case D2JSP_ITEM_QUALITY_UNIQUE	:
			color_string = D2JSP_ITEM_COLOR_GOLD2;
			break;
		case D2JSP_ITEM_QUALITY_RARE		:
			color_string = D2JSP_ITEM_COLOR_YELLOW;
			break;
		case D2JSP_ITEM_QUALITY_SET		:
			color_string = D2JSP_ITEM_COLOR_GREEN;
			break;
		case D2JSP_ITEM_QUALITY_MAGIC		:
			color_string = D2JSP_ITEM_COLOR_BLUE;
			break;
		default:
			if (item_obj.getFlag(D2JSP_ITEMFLAG_RUNEWORD))
				color_string = D2JSP_ITEM_COLOR_GOLD;
			else if (item_obj.getFlag(D2JSP_ITEMFLAG_SOCKETED) ||
				item_obj.getFlag(D2JSP_ITEMFLAG_ETHEREAL))
				color_string = D2JSP_ITEM_COLOR_GRAY;
			else
				color_string = D2JSP_ITEM_COLOR_WHITE;
			break;
	}

	return(color_string);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_ColorItemFullName(item_obj)
{
	return(D2JSP_ITEM_GetItemNameColor(item_obj) +
		D2JSP_ITEM_ItemToFullName(item_obj) + D2JSP_UTIL_COLOR_WHITE);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_ColorItemFixFName(item_obj)
{
	return(D2JSP_ITEM_GetItemNameColor(item_obj) +
		D2JSP_ITEM_FixFName(item_obj) + D2JSP_UTIL_COLOR_WHITE);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// The D2JSP_ITEM_Spec object contains the data describing an item to be
// subjected to various types of inventory operations and the methods for
// managing those operations.
// ////////////////////////////////////////////////////////////////////////////
// The D2JSP_ITEM_Spec constructor
function D2JSP_ITEM_Spec(in_obj, other)
{
	if (in_obj) {
		var in_parent         = in_obj.getParent();
		this.code             = in_obj.code;
		this.parent_name      = (in_parent) ? in_parent.name : "";
		this.container        = D2JSP_ITEM_CONT_ItemContainer(in_obj);
		this.itemloc          = in_obj.itemloc;
		this.original_x       = in_obj.x;
		this.original_y       = in_obj.y;
		this.x                = (in_obj.mode == D2JSP_MODE_ITEM_IN_BELT) ?
										(in_obj.x % 4) : in_obj.x;
		this.y                = (in_obj.mode == D2JSP_MODE_ITEM_IN_BELT) ?
										Math.floor(in_obj.y / 4) : in_obj.y;
		this.xsize            = D2JSP_ITEM_GetItemXSize(in_obj);
		this.ysize            = D2JSP_ITEM_GetItemYSize(in_obj);
		this.quality          = in_obj.quality;
		this.itemclass        = D2JSP_ITEM_GetItemClass(in_obj);
		this.mode             = in_obj.mode;
		this.is_identified    = (in_obj.getFlag(D2JSP_ITEMFLAG_IDENTIFIED)) ?
											true : false;
		this.is_in_socket     = (in_obj.mode == D2JSP_MODE_ITEM_SOCKETED_IN_ITEM)?
											true : false;
//		this.id_flag          = (id_flag) ? true : false;
//		this.cursor_item_flag = (cursor_item_flag) ? true : false;
//		this.isf_item_flag    = (isf_item_flag) ? true : false;
		this.other            = D2JSP_UTIL_GEN_CloneObject(other);
		this.fullNameColor    = D2JSP_ITEM_ColorItemFullName(in_obj);
		this.fixedFName       = D2JSP_ITEM_FixFName(in_obj);
		this.find_key         = this.code + "|" + this.itemloc + "|" +
			this.original_x + "|" + this.original_y + "|" + this.quality + "|" +
			this.itemclass;
		this.unique_key       = ((in_parent) ? in_parent.name : "NO_PARENT") +
			"|" + this.find_key;
	}

	this.findItem         = D2JSP_ITEM_Spec_findItem;
	this.findItemExpected = D2JSP_ITEM_Spec_findItemExpected;
	this.findItemBasic    = D2JSP_ITEM_Spec_findItemBasic;
	this.waitForMovement  = D2JSP_ITEM_Spec_waitForMovement;
	this.toDelaySpec      = D2JSP_ITEM_Spec_toDelaySpec;
	this.toString         = D2JSP_ITEM_Spec_toString;

/*
	else {
		this.code             = null;
		this.parent_name      = null;
		this.container        = null;
		this.itemloc          = null;
		this.x                = null;
		this.y                = null;
		this.xsize            = null;
		this.ysize            = null;
		this.quality          = null;
		this.itemclass        = null;
		this.mode             = null;
		this.is_identified    = null;
		this.id_flag          = null;
		this.cursor_item_flag = null;
		this.isf_item_flag    = null;
		this.other            = null;
		this.fullNameColor    = null;
		this.fixedFName       = null;
	}
*/

	//--------------------------------------------------------------------------
	// The basic functionality to locate a unit object using the D2JSP_ITEM_Spec.
	function D2JSP_ITEM_Spec_findItemBasic(itemloc) {
		var this_obj;
		var this_parent;

		itemloc  = (itemloc != null) ? itemloc : this.itemloc;

		this_obj = getUnit(D2JSP_UTIL_GETUNIT_ITEM, this.code);

		if (this_obj) {
			do {
				this_parent = this_obj.getParent();
				if (this_parent && (this_parent.name == this.parent_name) &&
					(this_obj.itemloc == itemloc) &&
					(this_obj.code == this.code) &&
					(this_obj.quality == this.quality) &&
					(this_obj.x == this.x) &&
					(this_obj.y == this.y))
					return(this_obj);
			} while (this_obj && this_obj.getNext(this.code));
		}

		return(null);
	}

	//--------------------------------------------------------------------------
	// Iterative functionality to locate a unit object using the D2JSP_ITEM_Spec.
	function D2JSP_ITEM_Spec_findItem(iter_count, iter_time) {
		var this_obj;
		var count_1;

		iter_count = (iter_count > 0) ? iter_count : 20;
		iter_time  = (iter_time > 0) ? iter_time : 50;

		for (count_1 = 0; count_1 < iter_count; count_1++) {
			if ((this_obj = this.findItemBasic(this.itemloc)) != null)
				return(this_obj);
			delay(iter_time);
		}

		return(null);
	}

	//--------------------------------------------------------------------------
	// Iterative functionality to locate a unit using the D2JSP_ITEM_Spec.
	// Displays a log error if not found.
	function D2JSP_ITEM_Spec_findItemExpected(action_text, iter_count,
		iter_time) {
		var this_obj = this.findItem(iter_count, iter_time);

		if (!this_obj)
			D2JSP_UTIL_LOG_GetALog().logError("Unable to locate the " +
				this.fullNameColor + " " + action_text + " in the " +
				D2JSP_ITEM_CONT_ToName(this.container) + " at coordinates [" +
				this.x + ", " + this.y + "].");

		return(this_obj);
	}

	//--------------------------------------------------------------------------
	// Iterative functionality to determine when an unit object to be moved
	// departs its current location as recorded in the D2JSP_ITEM_Spec.
	function D2JSP_ITEM_Spec_waitForMovement(itemloc, iter_count, iter_time) {
		var end_time;

		itemloc    = (itemloc != null) ? itemloc : this.itemloc;
		iter_count = (iter_count > 0) ? iter_count : 20;
		iter_time  = (iter_time > 0) ? iter_time : 50;

		end_time   = (new Date()).valueOf() + (iter_count * iter_time);

		while ((new Date()).valueOf() < end_time) {
			if (!this.findItemBasic(itemloc))
				return(true);
			D2JSP_UTIL_GEN_FuzzyDelay(iter_time);
		}

		return(false);
	}

	//--------------------------------------------------------------------------
	function D2JSP_ITEM_Spec_toDelaySpec() {
		return(this.code + "\t" + this.x + "\t" + this.y + "\t" + this.quality +
			"\t" + this.itemclass);
	}

	//--------------------------------------------------------------------------
	// Used only in debugging this code.
	function D2JSP_ITEM_Spec_toString() {
		return([this.code, this.fixedFName, this.itemloc, this.container,
			this.x, this.y, this.xsize, this.ysize, this.mode, this.quality,
			this.itemclass] + "");
	}

	//--------------------------------------------------------------------------
	function D2JSP_ITEM_Spec_isEqual(item_1, item_2) {
/*
		return(((item_1.code == item_2.code) &&
			(item_1.itemloc == item_2.itemloc) && (item_1.x == item_2.x) &&
			(item_1.y == item_2.y) && (item_1.xsize == item_2.xsize) &&
			(item_1.ysize == item_2.ysize) && (item_1.quality == item_2.quality) &&
			(item_1.itemclass == item_2.itemclass)) ? true : false);
*/
	//	ADF NOTE: The itemclass member is not compared because it doesn't work
	// for rings or amulets...
		return(((item_1.code == item_2.code) &&
			(item_1.itemloc == item_2.itemloc) && (item_1.x == item_2.x) &&
			(item_1.y == item_2.y) && (item_1.xsize == item_2.xsize) &&
			(item_1.ysize == item_2.ysize) && (item_1.quality == item_2.quality)) ?
			true : false);
	}
}
// ////////////////////////////////////////////////////////////////////////////

/*
	CODE NOTE: Example of JS inheritance which supports:
		<derived-instance> = <typeof derived-class> AND
		<derived-instance> = <typeof parent-class>
function DerivedClass(in_obj, id_flag, cursor_item_flag, isf_item_flag, other)
{
	this.__BASECLASS__DerivedClass__ = D2JSP_ITEM_Spec;
	this.__BASECLASS__DerivedClass__(in_obj, id_flag, cursor_item_flag,
		isf_item_flag, other);
}
DerivedClass.prototype = new D2JSP_ITEM_Spec;
*/

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// CODE NOTE: Will replace the ISF_SISpec
// The XISF_SISpec object contains the data describing an item to be stashed or
// sold and methods for managing that operation.
// ////////////////////////////////////////////////////////////////////////////
// The XISF_SISpec constructor
function XISF_SISpec(in_obj, id_flag, cursor_item_flag, isf_item_flag, other)
{
	this.__BASECLASS__XISF_SISpec__ = D2JSP_ITEM_Spec;
	this.__BASECLASS__XISF_SISpec__(in_obj, other);

	this.id_flag          = (id_flag)          ? true : false;
	this.cursor_item_flag = (cursor_item_flag) ? true : false;
	this.isf_item_flag    = (isf_item_flag)    ? true : false;

	this.toString         = XISF_SISpec_toString;

	function XISF_SISpec_toString() {
		return([this.code, this.fixedFName, this.itemloc, this.container,
			this.x, this.y, this.xsize, this.ysize, this.mode, this.quality,
			this.itemclass, this.id_flag, this.cursor_item_flag,
			this.isf_item_flag] + "");
	}

}
XISF_SISpec.prototype = new D2JSP_ITEM_Spec;
// ////////////////////////////////////////////////////////////////////////////

delay(1);
runGC();
delay(1);

} // if (typeof(D2JSP_INCLUDE_GUARD_Items_d2l) == "undefined") {

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
//
//	Regression tests. Change the conditional to 'true' to run.
//
// ////////////////////////////////////////////////////////////////////////////
if (false) {
function main()
{
	var item_count           = 0;
	var item_type_count      = 0;
	var item_type_code_count = 0;
	var item_name_count      = 0;
	var prop_list;
	var tmp_list;
	var error_list;
	var error_src;
	var this_prop;
	var tmp_string;
	var count_1;
	var count_2;
	var file_name = "output\\RegressionTest._D2JSP_Items.d2l.txt";
	var file_handle;

	print("Writing '_D2JSP_Items.d2l' regression test output file to '" +
		file_name + "'.");

	file_handle = fileOpen(file_name, 1);

	if (!file_handle) {
		print(D2JSP_UTIL_COLOR_RED + "Unable to open file '" + file_name +
			"' for writing!");
		quit();
	}

	//	////////////////////////////////////////////////////////////////////////
	// Emit the item list...
	prop_list = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Complete Item List");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_ItemList)
		prop_list.push(this_prop);
	prop_list.sort();
//	for (this_prop in D2JSP_ITEM_ItemList) {
	for (count_1 = 0; count_1 < prop_list.length; count_1++) {
		this_prop = prop_list[count_1];
		file_handle.writeLine(this_prop + "\t= [" +
			D2JSP_ITEM_ItemList[this_prop].join("\t") + "]");
		item_count++;
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Items: " + item_count);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the item code to item type mapping list...
	prop_list = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Complete Mapping to Item Types List");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_ItemTypeList)
		prop_list.push(this_prop);
	prop_list.sort();
//	for (this_prop in D2JSP_ITEM_ItemTypeList) {
	for (count_1 = 0; count_1 < prop_list.length; count_1++) {
		this_prop = prop_list[count_1];
		file_handle.writeLine(this_prop + "\t= " +
			D2JSP_ITEM_ItemTypeList[this_prop].length + "\t = [" +
			D2JSP_ITEM_ItemTypeList[this_prop].join("\t") + "]");
		item_type_count++;
		item_type_code_count += D2JSP_ITEM_ItemTypeList[this_prop].length;
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Item Types         : " + item_type_count);
	file_handle.writeLine("Number of Items in Item Types: " + item_type_code_count);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the item name to item code mapping list...
	prop_list = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Complete of Item Names to Item Codes");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_NameToCodeList)
		prop_list.push(this_prop);
	prop_list.sort();
//	for (this_prop in D2JSP_ITEM_NameToCodeList) {
	for (count_1 = 0; count_1 < prop_list.length; count_1++) {
		this_prop = prop_list[count_1];
		file_handle.writeLine(D2JSP_UTIL_FORMAT_LJust(this_prop, 30) + " = " +
			D2JSP_ITEM_NameToCodeList[this_prop]);
		item_name_count++;
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Item Names: " + item_name_count);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the item category list...
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Item Category to Item Code Mapping");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (count_1 = D2JSP_ITEM_CATEGORY_MINIMUM;
		count_1 <= D2JSP_ITEM_CATEGORY_MAXIMUM; count_1++)
		file_handle.writeLine(D2JSP_UTIL_FORMAT_LJust(
			D2JSP_ITEM_CatagoryToNameList[count_1], 15) + " = " +
			D2JSP_ITEM_CategoryToCodeList[count_1].length +
			"\t= [" + D2JSP_ITEM_CategoryToCodeList[count_1].join(" ") + "]");
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Item Catagories: " +
		D2JSP_ITEM_CATEGORY_COUNT);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the item by category list...
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Item List By Category Mapping");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (count_1 = D2JSP_ITEM_CATEGORY_MINIMUM;
		count_1 <= D2JSP_ITEM_CATEGORY_MAXIMUM; count_1++) {
		for (count_2 = 0; count_2 < D2JSP_ITEM_CategoryToCodeList[count_1].length;
			count_2++) {
			var tmp_code = D2JSP_ITEM_CategoryToCodeList[count_1][count_2];
			file_handle.writeLine(D2JSP_UTIL_FORMAT_LJust(
				D2JSP_ITEM_CatagoryToNameList[count_1], 15) + " : " + tmp_code +
				" = " + D2JSP_ITEM_ItemList[tmp_code][D2JSP_ITEM_ELEMENT_NAME]);
		}
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Item Catagories: " +
		D2JSP_ITEM_CATEGORY_COUNT);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Item List By Item Class Mapping");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	var prop_list = new Array();
	for (this_prop in D2JSP_ITEM_ItemList)
		prop_list.push(this_prop);
	prop_list.sort();
	for (count_1 = D2JSP_ITEM_CLASS_MINIMUM;
		count_1 <= D2JSP_ITEM_CLASS_MAXIMUM; count_1++) {
		file_handle.writeLine(D2JSP_ITEM_CLASS_ClassToNameList[count_1] + ":");
		file_handle.writeLine(D2JSP_UTIL_FORMAT_LJust("", 12, "-"));
		for (count_2 = 0; count_2 < prop_list.length; count_2++) {
			this_prop = prop_list[count_1];
			if (D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_ITEMCLASS] ==
				count_1)
				file_handle.writeLine(this_prop + "\t= " +
					D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_NAME]);
		}
		D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the unique item list...
	prop_list = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Unique Item List");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_UniqueList)
		prop_list.push(this_prop);
	prop_list.sort();
	for (count_1 = 0; count_1 < prop_list.length; count_1++) {
		this_prop = prop_list[count_1];
		file_handle.writeLine(this_prop + " = " +
			D2JSP_ITEM_UniqueList[this_prop]);
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Unique Items: " + prop_list.length);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the unique item name list...
	prop_list = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Unique Item Name List");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_UniqueNameList)
		prop_list.push(this_prop);
	prop_list.sort();
	for (count_1 = 0; count_1 < prop_list.length; count_1++) {
		this_prop = prop_list[count_1];
		this_name = D2JSP_ITEM_UniqueNameList[this_prop];
		file_handle.writeLine(D2JSP_UTIL_FORMAT_LJust(this_prop, 30) + " = " +
				this_name + " = " + D2JSP_ITEM_UniqueList[this_name]);
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Unique Item Names: " + prop_list.length);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the set item list...
	prop_list = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Set Item List");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_SetList)
		prop_list.push(this_prop);
	prop_list.sort();
	for (count_1 = 0; count_1 < prop_list.length; count_1++) {
		this_prop = prop_list[count_1];
		file_handle.writeLine(
			D2JSP_UTIL_FORMAT_LJust(D2JSP_ITEM_SetList[this_prop]
			[D2JSP_ITEM_SET_ELEMENT_ITEM_NAME], 30) + " = " +
			D2JSP_ITEM_SetList[this_prop][D2JSP_ITEM_SET_ELEMENT_CODE] + " ---> " +
			D2JSP_ITEM_SetList[this_prop][D2JSP_ITEM_SET_ELEMENT_SET_NAME]);
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Set Items: " + prop_list.length);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the set item code list...
	prop_list = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Set Item Code List");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_SetItemCodeList)
		prop_list.push(this_prop);
	prop_list.sort();
	for (count_1 = 0; count_1 < prop_list.length; count_1++) {
		this_prop = prop_list[count_1];
		for (count_2 = 0; count_2 < D2JSP_ITEM_SetItemCodeList[this_prop].length;
			count_2++) {
			this_name = D2JSP_ITEM_SetItemCodeList[this_prop][count_2];
			file_handle.writeLine(((!count_2) ? this_prop : "   ") + " = " +
				D2JSP_ITEM_SetList[this_name][D2JSP_ITEM_SET_ELEMENT_ITEM_NAME]);
		}
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Set Item Codes: " + prop_list.length);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the set item name list...
	prop_list = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Set Item Name List");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_SetItemNameList)
		prop_list.push(this_prop);
	prop_list.sort();
	for (count_1 = 0; count_1 < prop_list.length; count_1++) {
		this_prop = prop_list[count_1];
		this_name = D2JSP_ITEM_SetItemNameList[this_prop];
		file_handle.writeLine(D2JSP_UTIL_FORMAT_LJust(this_prop, 30) + " = " +
				D2JSP_ITEM_SetList[this_name][D2JSP_ITEM_SET_ELEMENT_ITEM_NAME]);
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Set Item Names: " + prop_list.length);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Emit the set name list...
	prop_list = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Set Name List");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_SetNameList)
		prop_list.push(this_prop);
	prop_list.sort();
	for (count_1 = 0; count_1 < prop_list.length; count_1++) {
		this_prop = prop_list[count_1];
		for (count_2 = 0; count_2 < D2JSP_ITEM_SetNameList[this_prop].length;
			count_2++) {
			this_name = D2JSP_ITEM_SetNameList[this_prop][count_2];
			file_handle.writeLine(
				D2JSP_UTIL_FORMAT_LJust((!count_2) ? this_prop : "", 30) + " = " +
				D2JSP_ITEM_SetList[this_name][D2JSP_ITEM_SET_ELEMENT_ITEM_NAME]);
		}
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Set Names: " + prop_list.length);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Check for duplicate item names...
	error_list  = new Array();
	tmp_list    = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Duplicate Item Names");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_ItemList) {
		if (typeof(tmp_list[D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_NAME].
			toLowerCase()]) == "undefined")
			tmp_list[D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_NAME].
				toLowerCase()] = new Array();
		else
			error_list.push(D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_NAME]);
		tmp_list[D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_NAME].
			toLowerCase()].push(this_prop);
	}
	for (count_1 = 0; count_1 < error_list.length; count_1++)
		file_handle.writeLine("Duplicate item name '" +
			error_list[count_1] + "' encountered. Item codes are: [" +
			tmp_list[error_list[count_1].toLowerCase()] + "]");
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Duplicate Item Names: " +
		error_list.length);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	if (error_list.length)
		print(D2JSP_UTIL_COLOR_RED + error_list.length + " duplicate item " +
			"names were found. See log file '" + file_name + "' for details.");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Check for invalid type codes...
	error_list  = new Array();
	tmp_list    = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Invalid Item Type Codes");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	for (this_prop in D2JSP_ITEM_ItemList) {
		if (!D2JSP_ITEMTYPE_NameIsValid(D2JSP_ITEM_ItemList[this_prop]
			[D2JSP_ITEM_ELEMENT_ITEMTYPE])) {
			if (typeof(tmp_list[D2JSP_ITEM_ItemList[this_prop]
				[D2JSP_ITEM_ELEMENT_ITEMTYPE]]) == "undefined")
				tmp_list[D2JSP_ITEM_ItemList[this_prop]
					[D2JSP_ITEM_ELEMENT_ITEMTYPE]] = new Array();
			tmp_list[D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_ITEMTYPE]].
				push(this_prop);
			error_list.push(D2JSP_ITEM_ItemList[this_prop]
				[D2JSP_ITEM_ELEMENT_ITEMTYPE]);
		}
	}
	for (count_1 = 0; count_1 < error_list.length; count_1++)
		file_handle.writeLine("Invalid item type '" +
			error_list[count_1] + "' encountered. Item codes are: [" +
			tmp_list[error_list[count_1]] + "]");
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Invalid Item Types: " +
		error_list.length);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	if (error_list.length)
		print(D2JSP_UTIL_COLOR_RED + error_list.length + " invalid item " +
			"types were found. See log file '" + file_name + "' for details.");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	// Check for potential name resolution conflicts...
	error_list  = new Array();
	error_src   = new Array();
	tmp_list    = new Array();
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Potential Name Resolution Conflicts");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	// First the item codes...
	for (this_prop in D2JSP_ITEM_ItemList) {
		if (typeof(tmp_list[this_prop]) == "undefined")
			tmp_list[this_prop] = new Array();
		else
			error_list.push(this_prop);
		tmp_list[this_prop].push("Item code '" + this_prop + "' (item name = '" +
			D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_NAME] + "')");
	}
	// Then the item names...
	for (this_prop in D2JSP_ITEM_ItemList) {
		tmp_string = D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_NAME].
			toLowerCase();
		if (typeof(tmp_list[tmp_string]) == "undefined")
			tmp_list[tmp_string] = new Array();
		else
			error_list.push(tmp_string);
		tmp_list[tmp_string].push("Item name '" +
			D2JSP_ITEM_ItemList[this_prop][D2JSP_ITEM_ELEMENT_NAME] +
			"' (item code = '" + this_prop + "')");
	}
	// Then the item type codes...
	for (this_prop in D2JSP_ITEMTYPE_NameToTypeList) {
		tmp_string = this_prop.toLowerCase();
		if (typeof(tmp_list[tmp_string]) == "undefined")
			tmp_list[tmp_string] = new Array();
		else
			error_list.push(tmp_string);
		tmp_list[tmp_string].push("Item type code '" + this_prop +
			"' (item type name = '" + D2JSP_ITEMTYPE_NameToText(tmp_string) +
			"')");
	}
	// Finally, the item type names...
	for (count_1 = 0; count_1 < D2JSP_ITEMTYPE_TypeToTextList.length; count_1++){
		tmp_string = D2JSP_ITEMTYPE_TypeToTextList[count_1].toLowerCase();
		if (typeof(tmp_list[tmp_string]) == "undefined")
			tmp_list[tmp_string] = new Array();
		else
			error_list.push(tmp_string);
		tmp_list[tmp_string].push("Item type name '" +
			D2JSP_ITEMTYPE_TypeToTextList[count_1] + "' (item type code '" +
			 D2JSP_ITEMTYPE_TypeToNameList[count_1] + "')");
	}
	for (count_1 = 0; count_1 < error_list.length; count_1++) {
		file_handle.writeLine("Potential name resolution conflict for string '" +
			error_list[count_1] + "'. Sources are:");
		for (count_2 = 0; count_2 < tmp_list[error_list[count_1]].length;
			count_2++)
			file_handle.writeLine("-->" + D2JSP_UTIL_FORMAT_RJust(count_2 + 1, 10) +
				" " + tmp_list[error_list[count_1]][count_2]);
	}
	D2JSP_ITEM_TEST_WriteSep(file_handle, "-");
	file_handle.writeLine("Number of Potential Name Resolution Conflicts: " +
		error_list.length);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	if (error_list.length)
		print(D2JSP_UTIL_COLOR_YELLOW + error_list.length + " potential name " +
			"resolution conflicts were found. See log file '" + file_name +
			"' for details.");
	//	////////////////////////////////////////////////////////////////////////

	//	////////////////////////////////////////////////////////////////////////
	//	Show the space available for items of various sizes...
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("Space Available for Items of Various Sizes");
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine(
		D2JSP_UTIL_FORMAT_LJust("Item Size Space Available", 30) + " " +
		D2JSP_UTIL_FORMAT_LJust("Total", 5) + " " +
		D2JSP_UTIL_FORMAT_LJust(D2JSP_ITEM_CONT_SourceData[0][0],
			D2JSP_ITEM_CONT_SourceData[0][0].length) + " " +
		D2JSP_UTIL_FORMAT_LJust(D2JSP_ITEM_CONT_SourceData[1][0],
			D2JSP_ITEM_CONT_SourceData[1][0].length) + " " +
		D2JSP_UTIL_FORMAT_LJust(D2JSP_ITEM_CONT_SourceData[2][0], 5));
	file_handle.writeLine(
		D2JSP_UTIL_FORMAT_LJust("", 30, "-") + " " +
		D2JSP_UTIL_FORMAT_LJust("", 5, "-") + " " +
		D2JSP_UTIL_FORMAT_LJust("",
			D2JSP_ITEM_CONT_SourceData[0][0].length, "-") + " " +
		D2JSP_UTIL_FORMAT_LJust("",
			D2JSP_ITEM_CONT_SourceData[1][0].length, "-") + " " +
		D2JSP_UTIL_FORMAT_LJust("", 5, "-"));
	var space_avail = D2JSP_ITEM_CONT_GetAvailableSpace(null, file_handle);
	for (count_1 = 0; count_1 < space_avail.length; count_1++)
		file_handle.writeLine(D2JSP_ITEM_CONT_SizeData[count_1][0] + "x" +
			D2JSP_ITEM_CONT_SizeData[count_1][1] + " item size space available: "+
			D2JSP_UTIL_FORMAT_RJust(space_avail[count_1][0], 5) + " " +
			D2JSP_UTIL_FORMAT_RJust(space_avail[count_1][1][0],
				D2JSP_ITEM_CONT_SourceData[0][0].length) + " " +
			D2JSP_UTIL_FORMAT_RJust(space_avail[count_1][1][1],
				D2JSP_ITEM_CONT_SourceData[1][0].length) + " " +
			D2JSP_UTIL_FORMAT_RJust(space_avail[count_1][1][2], 5));
	file_handle.writeLine(
		D2JSP_UTIL_FORMAT_LJust("", 30, "-") + " " +
		D2JSP_UTIL_FORMAT_LJust("", 5, "-") + " " +
		D2JSP_UTIL_FORMAT_LJust("",
			D2JSP_ITEM_CONT_SourceData[0][0].length, "-") + " " +
		D2JSP_UTIL_FORMAT_LJust("",
			D2JSP_ITEM_CONT_SourceData[1][0].length, "-") + " " +
		D2JSP_UTIL_FORMAT_LJust("", 5, "-"));
	D2JSP_ITEM_TEST_WriteSep(file_handle);
	file_handle.writeLine("");
	//	////////////////////////////////////////////////////////////////////////

	file_handle.close();
	print("Regression test file written.");

	// ------------------------------------------------------------------------
	// ------------------------------------------------------------------------

	var file_name = "output/ItemClassMapping.csv";
	var file_handle;

	print("Writing item class mapping to '" + file_name + "'.");

	file_handle = fileOpen(file_name, 1);

	if (!file_handle) {
		print(D2JSP_UTIL_COLOR_RED + "Unable to open file '" + file_name +
			"' for writing!");
		quit();
	}

	var item_class_map = new Array();
	var item_type_map  = new Array();
	for (var this_prop in D2JSP_ITEM_ItemList) {
		var this_item = D2JSP_ITEM_ItemList[this_prop];
		if ((this_item[D2JSP_ITEM_ELEMENT_ITEMCLASS] == D2JSP_ITEM_CLASS_NORMAL) &&
			((this_item[D2JSP_ITEM_ELEMENT_CATEGORY] == "A") ||
			(this_item[D2JSP_ITEM_ELEMENT_CATEGORY] == "W"))) {
			item_class_map.push([
				this_item[D2JSP_ITEM_ELEMENT_ITEMTYPE],
				this_item[D2JSP_ITEM_ELEMENT_CODE_NORM],
				this_item[D2JSP_ITEM_ELEMENT_CODE_UBER],
				this_item[D2JSP_ITEM_ELEMENT_CODE_ULTRA]]);
			if (!(this_item[D2JSP_ITEM_ELEMENT_ITEMTYPE] in item_type_map))
				item_type_map[this_item[D2JSP_ITEM_ELEMENT_ITEMTYPE]] = new Array();
			if ((this_item[D2JSP_ITEM_ELEMENT_CODE_NORM] != "") &&
				(this_item[D2JSP_ITEM_ELEMENT_CODE_UBER] != "") &&
				(this_item[D2JSP_ITEM_ELEMENT_CODE_ULTRA] != ""))
				item_type_map[this_item[D2JSP_ITEM_ELEMENT_ITEMTYPE]].push([
					this_item[D2JSP_ITEM_ELEMENT_CODE_NORM],
					this_item[D2JSP_ITEM_ELEMENT_CODE_UBER],
					this_item[D2JSP_ITEM_ELEMENT_CODE_ULTRA]]);
		}
	}

	var type_name_hash = new Array();
	for (var this_prop in item_type_map) {
		type_name_hash[D2JSP_ITEMTYPE_NameToText(this_prop).toLowerCase()] = this_prop;
	}
	var type_name_list = new Array();
	for (var this_prop in type_name_hash)
		type_name_list.push(this_prop.toLowerCase());
	type_name_list = type_name_list.sort();

	var item_classes = ["Normal", "Exceptional", "Unique"];
	file_handle.writeLine(["",
		"Base Names", "", "",
		"Unique Names", "", "",
		"Set Names", "", ""].join());
	file_handle.writeLine(["Item Type",
		item_classes,
		item_classes,
		item_classes].join());

	for (count_1 = 0; count_1 < type_name_list.length; count_1++) {
		var this_name     = type_name_hash[type_name_list[count_1]];
		var this_map_list = item_type_map[this_name];
		for (count_2 = 0; count_2 < this_map_list.length; count_2++) {
			var tmp_list    = new Array();
			var unique_list = new Array();
			var set_list    = new Array();
			tmp_list.push(type_name_list[count_1]);
			for (count_3 = 0; count_3 < 3; count_3++) {
				var tmp_code  = this_map_list[count_2][count_3];
				var code_info = D2JSP_ITEM_ItemList[tmp_code];
				if (code_info) {
					tmp_list.push(code_info[D2JSP_ITEM_ELEMENT_NAME]);
					unique_list.push(D2JSP_ITEM_UniqueList[tmp_code]);
					if (tmp_code in D2JSP_ITEM_SetItemCodeList) {
						var tmp_string = "";
						for (count_4 = 0;
							count_4 < D2JSP_ITEM_SetItemCodeList[tmp_code].length;
							count_4++)
							tmp_string += ((tmp_string == "") ? "" : "\0xA") +
								D2JSP_ITEM_SetList[D2JSP_ITEM_SetItemNameList[D2JSP_ITEM_SetItemCodeList[tmp_code][count_4]]][D2JSP_ITEM_SET_ELEMENT_ITEM_NAME];
						set_list.push(tmp_string);
					}
					else
						set_list.push("");
				}
				else {
					tmp_list.push("");
					unique_list.push("");
					set_list.push("");
				}
			}
			tmp_list = tmp_list.concat(unique_list);
			tmp_list = tmp_list.concat(set_list);
//			file_handle.writeLine("\"" + tmp_list.join("\", \"") + "\"");
			file_handle.writeLine(tmp_list.join());
		}
	}

	file_handle.close();
	print("Item class mapping file written.");

	// ------------------------------------------------------------------------
	// ------------------------------------------------------------------------

	print("Regression test completed.");

	stop();
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
function D2JSP_ITEM_TEST_WriteSep(file_handle, sep_char)
{
	file_handle.writeLine(D2JSP_UTIL_FORMAT_LJust("", 78,
		((typeof(sep_char) != "string") || (!sep_char.length)) ? "=" : sep_char));
}
// ////////////////////////////////////////////////////////////////////////////
} // if (false) {


