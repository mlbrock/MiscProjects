//	////////////////////////////////////////////////////////////////////////////
typedef std::vector<std::vector<std::string> > LpfLiteralAndVec;
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////
// In JSON:
{
	"Name" : "<name>",
   "AndList" :
	[
		[ <string> ... ],
		... ,
	]
}
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////
LpfLiteralAndVec and_vec_;

for (const auto &this_vec : and_vec_)
{
	bool matched_flag = true;
	for (const auto &this_item : this_vec_)
	{
		if (!::memmem(src, src_length, this_item.c_str(), this_item.size()))
		{
			matched_flag = false;
			break;
		}
	}
	if (matched_flag)
		return(true);
}

return(false);
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////

